SYSTEM_INFO v2.0.7 - DEBUG LOG
==============================

line#: 5970...	trap 'echo -e "NON-0: LINE ${LINENO}: RETURN CODE: ${?}	${BASH_COMMAND}" >&3' ERR
line#: 5976...	trap 'echo -e "leave: ${FUNCNAME} -> back to ${FUNCNAME[1]}
" >&3' RETURN
line#: 5978...	fnMAIN
line#: 5898...	fnMAIN
line#: 5899...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMAIN main
line#: 5901...	clear 2> /dev/null
line#: 5902...	fnGET_HELP
line#: 28...	fnGET_HELP
line#: 33...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGET_HELP fnMAIN main
line#: 37...	[[ "${MY_ARG}" = "--help" ]]
line#: 37...	[[ "${MY_ARG}" = "-h" ]]
line#: 28...	[[ "${MY_ARG}" = "-h" ]]
leave: fnGET_HELP -> back to fnMAIN

line#: 5903...	fnINITIALIZE
line#: 78...	fnINITIALIZE
line#: 79...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnINITIALIZE fnMAIN main
line#: 82...	declare -a CHOICES
line#: 83...	declare -a OPTIONS
line#: 85...	export PATH="${PATH:+${PATH}:}/usr/sbin:/sbin"
line#: 86...	LC_ALL=C
line#: 87...	LANG=C
line#: 88...	[[ "${TERM}" = "" ]]
line#: 88...	[[ "${TERM}" = "dumb" ]]
line#: 94...	REV="$(tput rev 2>/dev/null)"
line#: 94...	tput rev 2> /dev/null
line#: 95...	SGR0="$(tput sgr0 2>/dev/null)"
line#: 95...	tput sgr0 2> /dev/null
line#: 96...	BELL="$(tput bel 2>/dev/null)"
line#: 96...	tput bel 2> /dev/null
line#: 98...	RCFILE="${HOME}/.system_inforc"
line#: 99...	ERROR=" "
line#: 100...	DEG_SYMBOL='Â°'
line#: 101...	SECTION=""
line#: 78...	SECTION=""
leave: fnINITIALIZE -> back to fnMAIN

line#: 5904...	fnCONFIRM_BASH
line#: 135...	fnCONFIRM_BASH
line#: 136...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCONFIRM_BASH fnMAIN main
line#: 140...	[[ "${BASH_VERSION}" = "" ]]
line#: 135...	[[ "${BASH_VERSION}" = "" ]]
leave: fnCONFIRM_BASH -> back to fnMAIN

line#: 5905...	fnTITLE
line#: 193...	fnTITLE
line#: 194...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnTITLE fnMAIN main
line#: 196...	echo
line#: 197...	echo "               _   VERSION ${MY_VERSION}   _        __"
line#: 198...	echo ' ___ _   _ ___| |_ ___ _ __ ___   (_)_ __  / _| ___'
line#: 199...	echo '/ __| | | / __| __/ _ \ '\''_ \` _ \ | | '\''_ \| |_ / _ \'
line#: 200...	echo '\__ \ |_| \__ \ ||  __/ | | | | | | | | | |  _| (_) |'
line#: 201...	echo '|___/\__, |___/\__\___|_| |_| |_| |_|_| |_|_|  \___/'
line#: 202...	echo '     |___/'
line#: 203...	echo "           RASPBERRY PI SYSTEM INFORMATION REPORT"
line#: 204...	echo
line#: 193...	echo
leave: fnTITLE -> back to fnMAIN

line#: 5906...	fnCONFIRM_PREREQS
line#: 5042...	fnCONFIRM_PREREQS
line#: 5043...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCONFIRM_PREREQS fnMAIN main
line#: 5045...	fnSUDO
line#: 372...	fnSUDO
line#: 373...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUDO fnCONFIRM_PREREQS fnMAIN main
line#: 377...	SUDO=$(type -path sudo)
line#: 377...	type -path sudo
line#: 378...	[[ "${EUID}" -ne 0 ]]
line#: 378...	[[ "${SUDO}" = "" ]]
line#: 384...	echo "running as user:   $(whoami)"
line#: 384...	whoami
line#: 385...	[[ "${EUID}" -ne 0 ]]
line#: 387...	[[ -n "${SUDO}" ]]
line#: 389...	echo "sudo is available: ok"
line#: 372...	echo "sudo is available: ok"
leave: fnSUDO -> back to fnCONFIRM_PREREQS

line#: 5046...	fnCONFIRM_OS
line#: 292...	fnCONFIRM_OS
line#: 293...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCONFIRM_OS fnCONFIRM_PREREQS fnMAIN main
line#: 297...	[[ -f /etc/os-release ]]
line#: 300...	. /etc/os-release 2> /dev/null
line#: 1...	PRETTY_NAME="Raspbian GNU/Linux 10 (buster)"
line#: 2...	NAME="Raspbian GNU/Linux"
line#: 3...	VERSION_ID="10"
line#: 4...	VERSION="10 (buster)"
line#: 5...	VERSION_CODENAME=buster
line#: 6...	ID=raspbian
line#: 7...	ID_LIKE=debian
line#: 8...	HOME_URL="http://www.raspbian.org/"
line#: 9...	SUPPORT_URL="http://www.raspbian.org/RaspbianForums"
line#: 10...	BUG_REPORT_URL="http://www.raspbian.org/RaspbianBugs"
line#: 300...	. /etc/os-release 2> /dev/null
leave: fnCONFIRM_OS -> back to fnCONFIRM_PREREQS

line#: 302...	[[ "${ID}" = "raspbian" ]]
line#: 305...	[[ "$(echo "${VERSION_ID} < 9" | bc)" -eq 1 ]]
line#: 305...	echo "${VERSION_ID} < 9"
line#: 305...	bc
line#: 316...	echo "OS version check:  ok"
line#: 292...	echo "OS version check:  ok"
leave: fnCONFIRM_OS -> back to fnCONFIRM_PREREQS

line#: 5047...	fnRING_BUF
line#: 343...	fnRING_BUF
line#: 344...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRING_BUF fnCONFIRM_PREREQS fnMAIN main
line#: 348...	[[ "$(dmesg | grep "Booting Linux")" = "" ]]
line#: 348...	dmesg
line#: 348...	grep "Booting Linux"
line#: 364...	echo "dmesg ring buffer: ok"
line#: 343...	echo "dmesg ring buffer: ok"
leave: fnRING_BUF -> back to fnCONFIRM_PREREQS

line#: 5048...	fnCHECK_VIRT
line#: 400...	fnCHECK_VIRT
line#: 401...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCHECK_VIRT fnCONFIRM_PREREQS fnMAIN main
line#: 403...	[[ "$(systemd-detect-virt)" = "none" ]]
line#: 403...	systemd-detect-virt
line#: 405...	echo "virtual machine:   ok"
line#: 400...	echo "virtual machine:   ok"
leave: fnCHECK_VIRT -> back to fnCONFIRM_PREREQS

line#: 5049...	fnCHECK_CHROOT
line#: 421...	fnCHECK_CHROOT
line#: 422...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCHECK_CHROOT fnCONFIRM_PREREQS fnMAIN main
line#: 424...	${SUDO} systemd-detect-virt --chroot
line#: 433...	echo "chroot check:      ok"
line#: 435...	echo
line#: 421...	echo
leave: fnCHECK_CHROOT -> back to fnCONFIRM_PREREQS

line#: 5050...	fnDECODE_REV
line#: 442...	fnDECODE_REV
line#: 443...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDECODE_REV fnCONFIRM_PREREQS fnMAIN main
line#: 445...	local ENCODED=""
line#: 446...	local PCB_REVISION=""
line#: 447...	local MODEL_NAME=""
line#: 448...	local PROCESSOR=""
line#: 449...	local MANUFACTURER=""
line#: 450...	local MEMORY_SIZE=""
line#: 451...	local ENCODED_FLAG=""
line#: 452...	local WARRANTY_VOID_OLD=""
line#: 453...	local WARRANTY_VOID_NEW=""
line#: 580...	MY_REVISION=$(awk '/^Revision/ { print $NF }' /proc/cpuinfo 2>/dev/null)
line#: 580...	awk '/^Revision/ { print $NF }' /proc/cpuinfo 2> /dev/null
line#: 581...	ENCODED=$((0x${MY_REVISION} >> 23 & 1))
line#: 582...	[[ ${ENCODED} = 1 ]]
line#: 584...	PCB_REVISION=("v1.0" "v1.1" "v1.2" "v1.3" "v1.4" "5" "6" "7" "8" "9" "10" "11" "12" "13" "14" "15")
line#: 585...	MODEL_NAME=("A" "B" "A+" "B+" "Pi2B" "Alpha" "CM1" "unknown" "3B" "Zero" "CM3" "unknown" "Zero W" "3B+" "3A+" "internal use only" "CM3+" "4B" "18 ?" "400" "CM4")
line#: 586...	PROCESSOR=("BCM2835" "BCM2836" "BCM2837" "BCM2711" "4" "5" "6" "7" "8" "9" "10" "11" "12" "13" "14" "15")
line#: 587...	MANUFACTURER=("Sony UK" "Egoman" "Embest" "Sony Japan" "Embest" "Stadium" "6" "7" "8" "9" "10" "11" "12" "13" "14" "15")
line#: 588...	MEMORY_SIZE=("256 MB" "512 MB" "1024 MB" "2048 MB" "4096 MB" "8192 MB" "6" "7" "8" "9" "10" "11" "12" "13" "14" "15")
line#: 589...	ENCODED_FLAG=("" "revision is a bit field")
line#: 590...	WARRANTY_VOID_OLD=("" "warranty void - Pre Pi2")
line#: 591...	WARRANTY_VOID_NEW=("" "warranty void - Post Pi2")
line#: 594...	MY_PCB_REVISION=${PCB_REVISION[$((0x${MY_REVISION}&0xf))]}
line#: 595...	MY_MODEL_NAME=${MODEL_NAME[$((0x${MY_REVISION}>>4&0xff))]}
line#: 596...	MY_PROCESSOR=${PROCESSOR[$((0x${MY_REVISION}>>12&0xf))]}
line#: 597...	MY_MANUFACTURER=${MANUFACTURER[$((0x${MY_REVISION}>>16&0xf))]}
line#: 598...	MY_MEMORY_SIZE=${MEMORY_SIZE[$((0x${MY_REVISION}>>20&7))]}
line#: 599...	MY_ENCODED_FLAG=${ENCODED_FLAG[$((0x${MY_REVISION}>>23&1))]}
line#: 600...	MY_WARRANTY_VOID_OLD=${WARRANTY_VOID_OLD[$((0x${MY_REVISION}>>24&1))]}
line#: 601...	MY_WARRANTY_VOID_NEW=${WARRANTY_VOID_NEW[$((0x${MY_REVISION}>>25&1))]}
line#: 603...	case "${MY_MODEL_NAME}" in 
line#: 605...	PI4_FAMILY="1"
line#: 442...	PI4_FAMILY="1"
leave: fnDECODE_REV -> back to fnCONFIRM_PREREQS

line#: 5051...	fnCHK_PACKAGES
line#: 661...	fnCHK_PACKAGES
line#: 662...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCHK_PACKAGES fnCONFIRM_PREREQS fnMAIN main
line#: 664...	local PKG_MISSING=""
line#: 665...	local REQUIRED=""
line#: 666...	local REQ_HIT=""
line#: 667...	local REQ_MAX=""
line#: 668...	local PIGPIO_PKG=""
line#: 669...	local DOCKER_PKG=""
line#: 670...	local SUPPLEMENTAL=""
line#: 671...	local SUP_HIT=""
line#: 672...	local SUP_MAX=""
line#: 674...	PKG_MISSING=0
line#: 675...	type -path dpkg > /dev/null 2>&1
line#: 679...	REQUIRED=$(dpkg -l 2>/dev/null | awk '{ print $2 }' | grep -E -i "^alsa-utils$|^bc$|^bluez$|^coreutils$|^cron$|^i2c-tools$|^initramfs-tools$|^iproute2$|^libraspberrypi-bin$|^lsb-release$|^lshw$|^net-tools$|^procps$|^rpi-eeprom$|^sed$|^systemd$|^util-linux$|^usbutils$|^v4l-utils$|^wireless-tools$")
line#: 679...	dpkg -l 2> /dev/null
line#: 679...	awk '{ print $2 }'
line#: 679...	grep -E -i "^alsa-utils$|^bc$|^bluez$|^coreutils$|^cron$|^i2c-tools$|^initramfs-tools$|^iproute2$|^libraspberrypi-bin$|^lsb-release$|^lshw$|^net-tools$|^procps$|^rpi-eeprom$|^sed$|^systemd$|^util-linux$|^usbutils$|^v4l-utils$|^wireless-tools$"
line#: 680...	REQ_HIT=0
line#: 681...	REQ_MAX=0
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 696...	:
line#: 705...	(( REQ_MAX++ ))
line#: 705...	:
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 687...	[[ "${PI4_FAMILY}" != "1" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 682...	for PACKAGE in alsa-utils bc bluez coreutils cron i2c-tools initramfs-tools iproute2 libraspberrypi-bin lsb-release lshw net-tools procps rpi-eeprom usbutils sed systemd util-linux v4l-utils wireless-tools
line#: 684...	[[ "${PACKAGE}" = "rpi-eeprom" ]]
line#: 694...	[[ "$(echo "${REQUIRED}" | grep "${PACKAGE}")" != "" ]]
line#: 694...	echo "${REQUIRED}"
line#: 694...	grep "${PACKAGE}"
line#: 696...	(( REQ_HIT++ ))
line#: 705...	(( REQ_MAX++ ))
line#: 707...	[[ ${PKG_MISSING} -ne 0 ]]
line#: 713...	echo "${REQ_HIT} out of ${REQ_MAX} required packages are installed."
line#: 714...	echo "All core inspections will be performed."
line#: 715...	echo
line#: 726...	[[ "${VERSION_ID}" -eq 9 ]]
line#: 733...	PIGPIO_PKG=pigpiod
line#: 734...	DOCKER_PKG=docker-ce-cli
line#: 738...	SUPPLEMENTAL=$(dpkg -l 2>/dev/null | awk '{ print $2 }' | grep -E -i "^apparmor$|^at$|^auditd$|^chkrootkit$|^clamav$|^cups-client$|^dc$|^${DOCKER_PKG}$|^ethtool$|^hdparm$|^lirc$|^lm-sensors$|^lvm2$|^lynis$|^m4$|^mdadm$|^nfs-kernel-server$|^nmap$|^perl-base$|^${PIGPIO_PKG}$|^python3-gpiozero$|^quota$|^rkhunter$|^rng-tools$|^rpcbind$|^rtl-sdr$|^samba$|^smartmontools$|^snort$|^sysbench$|^sysstat$|^systemd-container$|^systemd-coredump$|^tripwire$|^ufw$|^unhide$|^watchdog$|^wiringpi$|^x11-xserver-utils$")
line#: 738...	dpkg -l 2> /dev/null
line#: 738...	awk '{ print $2 }'
line#: 738...	grep -E -i "^apparmor$|^at$|^auditd$|^chkrootkit$|^clamav$|^cups-client$|^dc$|^${DOCKER_PKG}$|^ethtool$|^hdparm$|^lirc$|^lm-sensors$|^lvm2$|^lynis$|^m4$|^mdadm$|^nfs-kernel-server$|^nmap$|^perl-base$|^${PIGPIO_PKG}$|^python3-gpiozero$|^quota$|^rkhunter$|^rng-tools$|^rpcbind$|^rtl-sdr$|^samba$|^smartmontools$|^snort$|^sysbench$|^sysstat$|^systemd-container$|^systemd-coredump$|^tripwire$|^ufw$|^unhide$|^watchdog$|^wiringpi$|^x11-xserver-utils$"
line#: 739...	SUP_HIT=0
line#: 740...	SUP_MAX=0
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 773...	:
line#: 775...	(( SUP_MAX++ ))
line#: 775...	:
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 751...	WIRINGPI_VERS=$(gpio -v 2>/dev/null | head -1 | awk '{ print $NF }')
line#: 751...	gpio -v 2> /dev/null
line#: 751...	head -1
line#: 751...	awk '{ print $NF }'
line#: 752...	[[ "${WIRINGPI_VERS}" = "2.52" ]]
line#: 755...	[[ "${MY_REVISION}" != "d03114" ]]
line#: 755...	[[ "${MY_MODEL_NAME}" != "400" ]]
line#: 755...	[[ "${MY_MODEL_NAME}" != "CM4" ]]
line#: 757...	(( SUP_HIT++ ))
line#: 758...	(( SUP_MAX++ ))
line#: 759...	continue
line#: 742...	for PACKAGE in apparmor at auditd chkrootkit clamav cups-client dc ${DOCKER_PKG} ethtool hdparm lirc lm-sensors lvm2 lynis m4 mdadm nfs-kernel-server nmap perl-base ${PIGPIO_PKG} python3-gpiozero quota rkhunter rng-tools rpcbind rtl-sdr samba smartmontools snort sysbench sysstat systemd-container systemd-coredump tripwire ufw unhide watchdog wiringpi x11-xserver-utils
line#: 749...	[[ "${PACKAGE}" = "wiringpi" ]]
line#: 771...	[[ "$(echo "${SUPPLEMENTAL}" | grep "${PACKAGE}")" != "" ]]
line#: 771...	echo "${SUPPLEMENTAL}"
line#: 771...	grep "${PACKAGE}"
line#: 773...	(( SUP_HIT++ ))
line#: 775...	(( SUP_MAX++ ))
line#: 778...	echo "${SUP_HIT} out of ${SUP_MAX} supplemental packages are installed."
line#: 779...	[[ "${SUP_HIT}" -gt 0 ]]
line#: 781...	echo "Some supplemental inspections can be performed."
line#: 785...	echo
line#: 661...	echo
leave: fnCHK_PACKAGES -> back to fnCONFIRM_PREREQS

line#: 5052...	fnLSHW_BUSINFO
line#: 797...	fnLSHW_BUSINFO
line#: 798...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLSHW_BUSINFO fnCONFIRM_PREREQS fnMAIN main
line#: 800...	echo -n "One moment, please... "
line#: 801...	${SUDO} lshw -businfo > /tmp/.lshw_businfo."${PPID}" 2> /dev/null
line#: 804...	LSHW_INPUT=$(grep "input" /tmp/.lshw_businfo."${PPID}" 2>/dev/null | head -1)
line#: 804...	grep "input" /tmp/.lshw_businfo."${PPID}" 2> /dev/null
line#: 804...	head -1
line#: 805...	LSHW_STORAGE=$(grep "storage" /tmp/.lshw_businfo."${PPID}" 2>/dev/null | head -1)
line#: 805...	grep "storage" /tmp/.lshw_businfo."${PPID}" 2> /dev/null
line#: 805...	head -1
line#: 806...	LSHW_GENERIC=$(grep "generic" /tmp/.lshw_businfo."${PPID}" 2>/dev/null | head -1)
line#: 806...	grep "generic" /tmp/.lshw_businfo."${PPID}" 2> /dev/null
line#: 806...	head -1
line#: 807...	LSHW_MULTIMEDIA=$(grep "multimedia" /tmp/.lshw_businfo."${PPID}" 2>/dev/null | head -1)
line#: 807...	grep "multimedia" /tmp/.lshw_businfo."${PPID}" 2> /dev/null
line#: 807...	head -1
line#: 808...	LSHW_COMMUNICATION=$(grep "communication" /tmp/.lshw_businfo."${PPID}" 2>/dev/null | head -1)
line#: 808...	grep "communication" /tmp/.lshw_businfo."${PPID}" 2> /dev/null
line#: 808...	head -1
line#: 809...	echo "Ready."
line#: 810...	echo
line#: 797...	echo
leave: fnLSHW_BUSINFO -> back to fnCONFIRM_PREREQS

line#: 5042...	echo
leave: fnCONFIRM_PREREQS -> back to fnMAIN

line#: 5907...	fnDEFINE_OPTIONS
line#: 108...	fnDEFINE_OPTIONS
line#: 109...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDEFINE_OPTIONS fnMAIN main
line#: 112...	OPTIONS[0]="Pi Hardware"
line#: 113...	OPTIONS[1]="Performance"
line#: 114...	OPTIONS[2]="O/S Config"
line#: 115...	OPTIONS[3]="Memory"
line#: 116...	OPTIONS[4]="Logging"
line#: 117...	OPTIONS[5]="Services"
line#: 118...	OPTIONS[6]="Hardware Busses"
line#: 119...	OPTIONS[7]="Serial & Bluetooth"
line#: 120...	OPTIONS[8]="USB & Other Devices"
line#: 121...	OPTIONS[9]="Filesystems & Storage"
line#: 122...	OPTIONS[10]="Audio & Video"
line#: 123...	OPTIONS[11]="Networking"
line#: 124...	OPTIONS[12]="Network Filesystems"
line#: 125...	OPTIONS[13]="Containers & Virtualization"
line#: 126...	OPTIONS[14]="Modules and Packages"
line#: 127...	OPTIONS[15]="System Security"
line#: 128...	OPTIONS[16]="Run All Of The Above"
line#: 108...	OPTIONS[16]="Run All Of The Above"
leave: fnDEFINE_OPTIONS -> back to fnMAIN

line#: 5908...	echo -n "PRESS ENTER FOR MENU... "
line#: 5909...	read -r FOO
line#: 5912...	echo "${FOO}" > /dev/null
line#: 5913...	echo
line#: 5914...	clear 2> /dev/null
line#: 5915...	fnCHECK_CMDLINE
line#: 5784...	fnCHECK_CMDLINE
line#: 5785...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCHECK_CMDLINE fnMAIN main
line#: 5789...	[[ ${MY_ARG} = *[[:digit:]]* ]]
line#: 5789...	[[ "${MY_ARG}" -ge 1 ]]
line#: 5789...	[[ "${MY_ARG}" -le 17 ]]
line#: 5792...	((CMDLINE_CHOICE=MY_ARG-1))
line#: 5793...	CHOICES[${CMDLINE_CHOICE}]="${REV}+${SGR0}"
line#: 5784...	CHOICES[${CMDLINE_CHOICE}]="${REV}+${SGR0}"
leave: fnCHECK_CMDLINE -> back to fnMAIN

line#: 5916...	fnMAIN_LOOP
line#: 5804...	fnMAIN_LOOP
line#: 5805...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMAIN_LOOP fnMAIN main
line#: 5807...	local SELECTION=""
line#: 5810...	fnMENU
line#: 5752...	fnMENU
line#: 5753...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMENU fnMAIN_LOOP fnMAIN main
line#: 5755...	local SCR_ROW=""
line#: 5756...	local SCR_COL=""
line#: 5758...	echo "RASPBERRY PI SYSTEM INFORMATION REPORT v${MY_VERSION} - MAIN MENU"
line#: 5759...	SCR_ROW=2
line#: 5760...	SCR_COL=2
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5765...	SCR_ROW=2
line#: 5766...	SCR_COL=38
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5761...	for NUM in "${!OPTIONS[@]}"
line#: 5763...	[[ "${SCR_ROW}" -gt 10 ]]
line#: 5768...	tput cup "${SCR_ROW}" "${SCR_COL}" 2> /dev/null
line#: 5769...	echo "[""${CHOICES[NUM]:- }""]" $(( NUM+1 ))") ${OPTIONS[NUM]}"
line#: 5770...	(( SCR_ROW++ ))
line#: 5772...	(( SCR_ROW++ ))
line#: 5773...	tput cup "${SCR_ROW}" 0 2> /dev/null
line#: 5774...	echo "${ERROR}"
line#: 5775...	echo "Type a number and press [ENTER] to select.  Again, to deselect."
line#: 5776...	echo "Multiple selections can be made before any tests are executed."
line#: 5752...	echo "Multiple selections can be made before any tests are executed."
leave: fnMENU -> back to fnMAIN_LOOP

line#: 5810...	read -r -e -p "Press [ENTER] by itself when ready.  Use Q [ENTER] or Ctrl-C to quit: " -n3 SELECTION
line#: 5810...	[[ -n "${SELECTION}" ]]
line#: 5804...	[[ -n "${SELECTION}" ]]
leave: fnMAIN_LOOP -> back to fnMAIN

line#: 5917...	fnDO_INSPECTIONS
line#: 5839...	fnDO_INSPECTIONS
line#: 5840...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDO_INSPECTIONS fnMAIN main
line#: 5842...	local STAMP=""
line#: 5845...	clear 2> /dev/null
line#: 5846...	STAMP=$(date +%F-%T | sed 's/:/-/g')
line#: 5846...	date +%F-%T
line#: 5846...	sed 's/:/-/g'
line#: 5847...	REPORT=~/${HOSTNAME}-system_info-${STAMP}
line#: 5848...	SECONDS=0
line#: 5849...	true > "${REPORT}"
line#: 5850...	fnTITLE
line#: 5850...	tee -a "${REPORT}"
line#: 193...	fnTITLE
line#: 194...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnTITLE fnDO_INSPECTIONS fnMAIN main
line#: 196...	echo
line#: 197...	echo "               _   VERSION ${MY_VERSION}   _        __"
line#: 198...	echo ' ___ _   _ ___| |_ ___ _ __ ___   (_)_ __  / _| ___'
line#: 199...	echo '/ __| | | / __| __/ _ \ '\''_ \` _ \ | | '\''_ \| |_ / _ \'
line#: 200...	echo '\__ \ |_| \__ \ ||  __/ | | | | | | | | | |  _| (_) |'
line#: 201...	echo '|___/\__, |___/\__\___|_| |_| |_| |_|_| |_|_|  \___/'
line#: 202...	echo '     |___/'
line#: 203...	echo "           RASPBERRY PI SYSTEM INFORMATION REPORT"
line#: 204...	echo
line#: 193...	echo
leave: fnTITLE -> back to fnDO_INSPECTIONS

line#: 5851...	fnREPORT_ACTIONS
line#: 5851...	sed 's///'
line#: 5567...	fnREPORT_ACTIONS
line#: 5568...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnREPORT_ACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5570...	local CHOICE_MADE=""
line#: 5572...	echo "The following Menu Options were selected, to generate this report:"
line#: 5573...	[[ -n ${CHOICES[16]} ]]
line#: 5851...	tee -a "${REPORT}"
line#: 5575...	echo "  Option 17: Run All Sections - (This option overrides any/all other selections)"
line#: 5576...	echo
line#: 5577...	return 0
line#: 5577...	return 0
leave: fnREPORT_ACTIONS -> back to fnDO_INSPECTIONS

line#: 5852...	fnACTIONS
line#: 5852...	tee -a "${REPORT}"
line#: 5469...	fnACTIONS
line#: 5470...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5472...	[[ -n ${CHOICES[16]} ]]
line#: 5474...	fnGROUP_HARDWARE
line#: 5065...	fnGROUP_HARDWARE
line#: 5066...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5068...	echo ' __ __ _____  __                '
line#: 5069...	echo '(_ |_ /   | |/  \|\ |   /|      Menu Option 1'
line#: 5070...	echo '__)|__\__ | |\__/| \|    |      PI HARDWARE'
line#: 5071...	echo
line#: 5072...	SECTION="1"
line#: 5073...	fnPRINT_DECODED_REV
line#: 619...	fnPRINT_DECODED_REV
line#: 620...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnPRINT_DECODED_REV fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 622...	local WARRANTY_VOID=""
line#: 624...	fnBANNER "DECODED SYSTEM REVISION NUMBER"
line#: 211...	fnBANNER "DECODED SYSTEM REVISION NUMBER"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnPRINT_DECODED_REV fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnPRINT_DECODED_REV

line#: 625...	echo "Revision      : ${MY_REVISION}"
line#: 626...	echo "PCB Revision  : ${MY_PCB_REVISION}"
line#: 627...	echo "Model Name    : ${MY_MODEL_NAME}"
line#: 628...	echo "Processor     : ${MY_PROCESSOR}"
line#: 629...	echo "Manufacturer  : ${MY_MANUFACTURER}"
line#: 630...	echo "Memory Size   : ${MY_MEMORY_SIZE}"
line#: 631...	echo "Encoded Flag  : ${MY_ENCODED_FLAG}"
line#: 632...	[[ -n "${MY_WARRANTY_VOID_OLD}" ]]
line#: 632...	[[ -n "${MY_WARRANTY_VOID_NEW}" ]]
line#: 636...	WARRANTY_VOID="no"
line#: 638...	echo "Warranty Void : ${WARRANTY_VOID}"
line#: 639...	echo
line#: 648...	[[ "$(echo "${MY_REVISION}" | cut -c2-)" = "03111" ]]
line#: 648...	echo "${MY_REVISION}"
line#: 648...	cut -c2-
line#: 650...	echo "This 4B contains a USB-C power design flaw."
line#: 651...	echo "\"Smart\" USB-C cables will not power this Pi."
line#: 652...	echo
line#: 619...	echo
leave: fnPRINT_DECODED_REV -> back to fnGROUP_HARDWARE

line#: 5074...	fnSYSTEM_ID
line#: 818...	fnSYSTEM_ID
line#: 819...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSTEM_ID fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 821...	fnBANNER "SYSTEM IDENTIFICATION"
line#: 211...	fnBANNER "SYSTEM IDENTIFICATION"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSYSTEM_ID fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSYSTEM_ID

line#: 822...	echo "Hostname: $(hostname)"
line#: 822...	hostname
line#: 823...	echo "Serial #: $(awk '/^Serial/ { print $NF }' /proc/cpuinfo 2>/dev/null)"
line#: 823...	awk '/^Serial/ { print $NF }' /proc/cpuinfo 2> /dev/null
line#: 824...	echo
line#: 818...	echo
leave: fnSYSTEM_ID -> back to fnGROUP_HARDWARE

line#: 5075...	fnMAC
line#: 967...	fnMAC
line#: 968...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMAC fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 970...	fnBANNER "MAC-ADDRESS(ES)"
line#: 211...	fnBANNER "MAC-ADDRESS(ES)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMAC fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMAC

line#: 971...	ifconfig
line#: 971...	grep '[0-9a-f][0-9a-f]:[0-9a-f][0-9a-f]:[0-9a-f][0-9a-f]:'
line#: 971...	awk '{print $2}'
line#: 971...	tr "a-f" "A-F"
line#: 971...	sort
line#: 972...	echo
line#: 967...	echo
leave: fnMAC -> back to fnGROUP_HARDWARE

line#: 5076...	fnMODEL
line#: 980...	fnMODEL
line#: 981...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMODEL fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 983...	fnBANNER "MODEL AND FIRMWARE VERSION"
line#: 211...	fnBANNER "MODEL AND FIRMWARE VERSION"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMODEL fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMODEL

line#: 984...	strings /sys/firmware/devicetree/base/model
line#: 985...	echo
line#: 986...	cat /etc/rpi-issue
line#: 987...	echo
line#: 988...	vcgencmd version
line#: 989...	echo
line#: 990...	fnBANNER "VIDEO CORE VERSION AND LOG STATUS"
line#: 211...	fnBANNER "VIDEO CORE VERSION AND LOG STATUS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMODEL fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMODEL

line#: 991...	vcgencmd vcos version
line#: 992...	echo
line#: 993...	vcgencmd vcos log status
line#: 994...	echo
line#: 995...	fnBANNER "VIDEO CORE OUT-OF-MEMORY EVENTS"
line#: 211...	fnBANNER "VIDEO CORE OUT-OF-MEMORY EVENTS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMODEL fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMODEL

line#: 996...	vcgencmd mem_oom
line#: 997...	echo
line#: 998...	fnBANNER "VIDEO CORE RELOCATABLE MEMORY STATS"
line#: 211...	fnBANNER "VIDEO CORE RELOCATABLE MEMORY STATS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMODEL fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMODEL

line#: 999...	vcgencmd mem_reloc_stats
line#: 1000...	echo
line#: 980...	echo
leave: fnMODEL -> back to fnGROUP_HARDWARE

line#: 5077...	fnDIAGRAM
line#: 1008...	fnDIAGRAM
line#: 1009...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDIAGRAM fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1012...	type -path pinout > /dev/null 2>&1
line#: 1014...	fnBANNER "SYSTEM DIAGRAM (***)"
line#: 211...	fnBANNER "SYSTEM DIAGRAM (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDIAGRAM fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDIAGRAM

line#: 1015...	pinout -m
line#: 1016...	echo
line#: 1008...	echo
leave: fnDIAGRAM -> back to fnGROUP_HARDWARE

line#: 5078...	fnCPU
line#: 1025...	fnCPU
line#: 1026...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCPU fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1028...	fnBANNER "CPU INFORMATION"
line#: 211...	fnBANNER "CPU INFORMATION"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCPU fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCPU

line#: 1029...	lscpu
line#: 1030...	echo
line#: 1025...	echo
leave: fnCPU -> back to fnGROUP_HARDWARE

line#: 5079...	fnSENSORS
line#: 1038...	fnSENSORS
line#: 1039...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSENSORS fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1042...	type -path sensors > /dev/null 2>&1
line#: 1044...	fnBANNER "LM-SENSORS (***)"
line#: 211...	fnBANNER "LM-SENSORS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSENSORS fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSENSORS

line#: 1045...	sensors
line#: 1047...	type -path sensors-detect > /dev/null 2>&1
line#: 1049...	fnSUB_BANNER "Searching for sensors..."
line#: 224...	fnSUB_BANNER "Searching for sensors..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSENSORS fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSENSORS

line#: 1050...	${SUDO} sensors-detect --auto
line#: 1051...	echo
line#: 1053...	echo " ----------------------------------------------------"
line#: 1054...	systemctl status lm-sensors.service
line#: 1055...	echo
line#: 1038...	echo
leave: fnSENSORS -> back to fnGROUP_HARDWARE

line#: 5080...	fnHOW_BOOT
line#: 1063...	fnHOW_BOOT
line#: 1064...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnHOW_BOOT fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1066...	local MY_OTP=""
line#: 1067...	local BOOT_TO_USB=""
line#: 1071...	[[ "${PI4_FAMILY}" = "1" ]]
line#: 1074...	fnBANNER "PI MODEL ${MY_MODEL_NAME} EEPROM VERSION"
line#: 211...	fnBANNER "PI MODEL ${MY_MODEL_NAME} EEPROM VERSION"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnHOW_BOOT fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnHOW_BOOT

line#: 1075...	vcgencmd bootloader_version
line#: 1076...	echo
line#: 1077...	type -path rpi-eeprom-update > /dev/null 2>&1
line#: 1083...	fnBANNER "PI MODEL ${MY_MODEL_NAME} EEPROM UPDATE STATUS"
line#: 211...	fnBANNER "PI MODEL ${MY_MODEL_NAME} EEPROM UPDATE STATUS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnHOW_BOOT fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnHOW_BOOT

line#: 1084...	${SUDO} rpi-eeprom-update
line#: 1085...	echo
line#: 1090...	fnBANNER "PI MODEL ${MY_MODEL_NAME} EEPROM CONFIG"
line#: 211...	fnBANNER "PI MODEL ${MY_MODEL_NAME} EEPROM CONFIG"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnHOW_BOOT fnGROUP_HARDWARE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnHOW_BOOT

line#: 1091...	echo "The meaning of each of these is documented here:"
line#: 1092...	echo "https://www.raspberrypi.org/documentation/hardware/raspberrypi/bcm2711_bootloader_config.md"
line#: 1093...	echo
line#: 1094...	vcgencmd bootloader_config
line#: 1063...	vcgencmd bootloader_config
leave: fnHOW_BOOT -> back to fnGROUP_HARDWARE

line#: 5065...	vcgencmd bootloader_config
leave: fnGROUP_HARDWARE -> back to fnACTIONS

line#: 5475...	fnGROUP_PERFORMANCE
line#: 5088...	fnGROUP_PERFORMANCE
line#: 5089...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5091...	echo ' __ __ _____  __        __      '
line#: 5092...	echo '(_ |_ /   | |/  \|\ |    _)     Menu Option 2'
line#: 5093...	echo '__)|__\__ | |\__/| \|   /__     PERFORMANCE'
line#: 5094...	echo
line#: 5095...	SECTION="2"
line#: 5096...	fnPROCSPEED
line#: 1332...	fnPROCSPEED
line#: 1333...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnPROCSPEED fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1335...	local FREQ=""
line#: 1336...	local MHZ=""
line#: 1338...	fnBANNER "PROCESSOR SPEEDS"
line#: 211...	fnBANNER "PROCESSOR SPEEDS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnPROCSPEED fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnPROCSPEED

line#: 1339...	FREQ=$(vcgencmd measure_clock arm | cut -f2 -d"=")
line#: 1339...	vcgencmd measure_clock arm
line#: 1339...	cut -f2 -d"="
line#: 1340...	MHZ=$((FREQ / 1000000))
line#: 1341...	MHZ=$(printf "%4d" "${MHZ}")
line#: 1341...	printf "%4d" "${MHZ}"
line#: 1342...	echo " CPU: ${MHZ} MHz"
line#: 1343...	FREQ=$(vcgencmd measure_clock core | cut -f2 -d"=")
line#: 1343...	vcgencmd measure_clock core
line#: 1343...	cut -f2 -d"="
line#: 1344...	MHZ=$((FREQ / 1000000))
line#: 1345...	MHZ=$(printf "%4d" "${MHZ}")
line#: 1345...	printf "%4d" "${MHZ}"
line#: 1346...	echo "CORE: ${MHZ} MHz"
line#: 1347...	echo
line#: 1332...	echo
leave: fnPROCSPEED -> back to fnGROUP_PERFORMANCE

line#: 5097...	fnOVERCLOCK
line#: 1355...	fnOVERCLOCK
line#: 1356...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnOVERCLOCK fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1358...	local CLOCK_STUFF=""
line#: 1362...	CLOCK_STUFF=$(grep -E -v "^$|^#" /boot/config.txt | grep -E -i "^arm_freq=|^gpu_freq=|^core_freq=|^h264_freq=|^isp_freq=|^v3d_freq=|^hevc_freq=|^sdram_freq=|^over_voltage=|^over_voltage_sdram=|^over_voltage_sdram_c=|^over_voltage_sdram_i=|^over_voltage_sdram_p=|^force_turbo=|^initial_turbo=|^arm_freq_min=|^core_freq_min=|^gpu_freq_min=|^h264_freq_min=|^isp_freq_min=|^v3d_freq_min=|^hevc_freq_min=|^sdram_freq_min=|^over_voltage_min=|^temp_limit=|^temp_soft_limit=|^hdmi_enable_4kp60=|^enable_tvout=")
line#: 1362...	grep -E -v "^$|^#" /boot/config.txt
line#: 1362...	grep -E -i "^arm_freq=|^gpu_freq=|^core_freq=|^h264_freq=|^isp_freq=|^v3d_freq=|^hevc_freq=|^sdram_freq=|^over_voltage=|^over_voltage_sdram=|^over_voltage_sdram_c=|^over_voltage_sdram_i=|^over_voltage_sdram_p=|^force_turbo=|^initial_turbo=|^arm_freq_min=|^core_freq_min=|^gpu_freq_min=|^h264_freq_min=|^isp_freq_min=|^v3d_freq_min=|^hevc_freq_min=|^sdram_freq_min=|^over_voltage_min=|^temp_limit=|^temp_soft_limit=|^hdmi_enable_4kp60=|^enable_tvout="
line#: 1364...	[[ -n "${CLOCK_STUFF}" ]]
line#: 1366...	fnBANNER "CLOCKSPEED / OVERCLOCKING OPTIONS FOUND IN CONFIG.TXT"
line#: 211...	fnBANNER "CLOCKSPEED / OVERCLOCKING OPTIONS FOUND IN CONFIG.TXT"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnOVERCLOCK fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnOVERCLOCK

line#: 1367...	echo "${CLOCK_STUFF}"
line#: 1367...	sort
line#: 1368...	echo
line#: 1355...	echo
leave: fnOVERCLOCK -> back to fnGROUP_PERFORMANCE

line#: 5098...	fnRING_OSCILLATOR
line#: 1377...	fnRING_OSCILLATOR
line#: 1378...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRING_OSCILLATOR fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1380...	local ALL=""
line#: 1381...	local C=""
line#: 1382...	local F=""
line#: 1384...	fnBANNER "RING OSCILLATOR STATS"
line#: 211...	fnBANNER "RING OSCILLATOR STATS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRING_OSCILLATOR fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRING_OSCILLATOR

line#: 1385...	type -path dc > /dev/null 2>&1
line#: 1388...	ALL="$(vcgencmd read_ring_osc)"
line#: 1388...	vcgencmd read_ring_osc
line#: 1389...	C="$(vcgencmd read_ring_osc | cut -f4 -d'(' | cut -f1 -d"'")"
line#: 1389...	vcgencmd read_ring_osc
line#: 1389...	cut -f4 -d'('
line#: 1389...	cut -f1 -d"'"
line#: 1390...	F="$(echo "2 k 9 5 / ${C} * 32 + p" | dc)"
line#: 1390...	echo "2 k 9 5 / ${C} * 32 + p"
line#: 1390...	dc
line#: 1391...	echo "${ALL} ($(printf "%3.1f" "${F}")${DEG_SYMBOL}F) (***)"
line#: 1391...	printf "%3.1f" "${F}"
line#: 1395...	echo
line#: 1377...	echo
leave: fnRING_OSCILLATOR -> back to fnGROUP_PERFORMANCE

line#: 5099...	fnCLOCKFREQ
line#: 1403...	fnCLOCKFREQ
line#: 1404...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCLOCKFREQ fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1406...	local CLOCK=""
line#: 1408...	fnBANNER "CLOCK FREQUENCIES"
line#: 211...	fnBANNER "CLOCK FREQUENCIES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCLOCKFREQ fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCLOCKFREQ

line#: 1409...	[[ "${PI4_FAMILY}" = "1" ]]
line#: 1411...	echo "Clocks available across all Pi models..."
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1413...	for CLOCK in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi
line#: 1415...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1415...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1415...	vcgencmd measure_clock "${CLOCK}"
line#: 1417...	[[ "${PI4_FAMILY}" = "1" ]]
line#: 1419...	echo
line#: 1420...	echo "Additional ${MY_MODEL_NAME} clocks..."
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1421...	for CLOCK in altscb cam0 cam1 ckl108 clk27 clk54 debug0 debug1 dft dsi0 dsi0esc dsi1 dsi1esc emmc2 genet125 genet250 gisb gpclk0 gpclk1 hevc m2mc otp pcm plla pllb pllc plld pllh pulse smi tectl testmux tsens usb wdog xpt
line#: 1423...	echo "${CLOCK}: $(vcgencmd measure_clock "${CLOCK}")"
line#: 1423...	awk '{ printf("%- 10s %- 28s
", $1, $2);}' 2>&1
line#: 1423...	vcgencmd measure_clock "${CLOCK}"
line#: 1426...	echo
line#: 1403...	echo
leave: fnCLOCKFREQ -> back to fnGROUP_PERFORMANCE

line#: 5100...	fnVOLTS
line#: 1434...	fnVOLTS
line#: 1435...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnVOLTS fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1437...	local VOLTS=""
line#: 1439...	fnBANNER "VOLTAGES"
line#: 211...	fnBANNER "VOLTAGES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnVOLTS fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnVOLTS

line#: 1440...	[[ "${PI4_FAMILY}" = "1" ]]
line#: 1442...	echo "Voltages available across all Pi models..."
line#: 1444...	for VOLTS in core sdram_c sdram_i sdram_p
line#: 1446...	echo "${VOLTS}: $(vcgencmd measure_volts "${VOLTS}")"
line#: 1446...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1446...	vcgencmd measure_volts "${VOLTS}"
line#: 1444...	for VOLTS in core sdram_c sdram_i sdram_p
line#: 1446...	echo "${VOLTS}: $(vcgencmd measure_volts "${VOLTS}")"
line#: 1446...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1446...	vcgencmd measure_volts "${VOLTS}"
line#: 1444...	for VOLTS in core sdram_c sdram_i sdram_p
line#: 1446...	echo "${VOLTS}: $(vcgencmd measure_volts "${VOLTS}")"
line#: 1446...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1446...	vcgencmd measure_volts "${VOLTS}"
line#: 1444...	for VOLTS in core sdram_c sdram_i sdram_p
line#: 1446...	echo "${VOLTS}: $(vcgencmd measure_volts "${VOLTS}")"
line#: 1446...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1446...	vcgencmd measure_volts "${VOLTS}"
line#: 1448...	[[ "${PI4_FAMILY}" = "1" ]]
line#: 1450...	echo
line#: 1451...	echo "Additional ${MY_MODEL_NAME} voltages..."
line#: 1452...	vcgencmd measure_volts 2711
line#: 1452...	sed 's/ /
/g'
line#: 1452...	read -r VOLTS
line#: 1454...	echo -e "2711: ${VOLTS}"
line#: 1454...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1452...	read -r VOLTS
line#: 1454...	echo -e "2711: ${VOLTS}"
line#: 1454...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1452...	read -r VOLTS
line#: 1454...	echo -e "2711: ${VOLTS}"
line#: 1454...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1452...	read -r VOLTS
line#: 1454...	echo -e "2711: ${VOLTS}"
line#: 1454...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1452...	read -r VOLTS
line#: 1454...	echo -e "2711: ${VOLTS}"
line#: 1454...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1452...	read -r VOLTS
line#: 1454...	echo -e "2711: ${VOLTS}"
line#: 1454...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1452...	read -r VOLTS
line#: 1456...	for VOLTS in ain1 usb_pd uncached
line#: 1458...	echo "${VOLTS}: $(vcgencmd measure_volts "${VOLTS}")"
line#: 1458...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1458...	vcgencmd measure_volts "${VOLTS}"
line#: 1456...	for VOLTS in ain1 usb_pd uncached
line#: 1458...	echo "${VOLTS}: $(vcgencmd measure_volts "${VOLTS}")"
line#: 1458...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1458...	vcgencmd measure_volts "${VOLTS}"
line#: 1456...	for VOLTS in ain1 usb_pd uncached
line#: 1458...	echo "${VOLTS}: $(vcgencmd measure_volts "${VOLTS}")"
line#: 1458...	awk '{ printf("%- 10s %- 40s
", $1, $2);}' 2>&1
line#: 1458...	vcgencmd measure_volts "${VOLTS}"
line#: 1461...	echo
line#: 1434...	echo
leave: fnVOLTS -> back to fnGROUP_PERFORMANCE

line#: 5101...	fnTEMPS
line#: 1469...	fnTEMPS
line#: 1470...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnTEMPS fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1472...	local GPU_TEMP=""
line#: 1473...	local ARM_TEMP=""
line#: 1474...	local PMIC_TEMP=""
line#: 1475...	local C=""
line#: 1476...	local F=""
line#: 1478...	fnBANNER "TEMPERATURE"
line#: 211...	fnBANNER "TEMPERATURE"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnTEMPS fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnTEMPS

line#: 1482...	[[ "${PI4_FAMILY}" = "1" ]]
line#: 1484...	echo "Temperatures available across all Pi models..."
line#: 1486...	GPU_TEMP=$(vcgencmd measure_temp)
line#: 1486...	vcgencmd measure_temp
line#: 1487...	C=$(echo "${GPU_TEMP}" | cut -f2 -d"=" | cut -f1 -d"'")
line#: 1487...	echo "${GPU_TEMP}"
line#: 1487...	cut -f2 -d"="
line#: 1487...	cut -f1 -d"'"
line#: 1488...	type -path dc > /dev/null 2>&1
line#: 1491...	F=$(echo "2 k 9 5 / ${C} * 32 + p" | dc)
line#: 1491...	echo "2 k 9 5 / ${C} * 32 + p"
line#: 1491...	dc
line#: 1492...	echo " GPU Temp: $(printf "%2.2f" "${C}")${DEG_SYMBOL}C ($(printf "%3.2f" "${F}")${DEG_SYMBOL}F) (***)"
line#: 1492...	printf "%2.2f" "${C}"
line#: 1492...	printf "%3.2f" "${F}"
line#: 1497...	ARM_TEMP=$(cat /sys/class/thermal/thermal_zone0/temp 2>/dev/null)
line#: 1497...	cat /sys/class/thermal/thermal_zone0/temp 2> /dev/null
line#: 1498...	C=$(echo "scale=2;${ARM_TEMP}/1000" | bc)
line#: 1498...	echo "scale=2;${ARM_TEMP}/1000"
line#: 1498...	bc
line#: 1499...	type -path dc > /dev/null 2>&1
line#: 1502...	F=$(echo "2 k 9 5 / ${C} * 32 + p" | dc)
line#: 1502...	echo "2 k 9 5 / ${C} * 32 + p"
line#: 1502...	dc
line#: 1503...	echo " ARM Temp: $(printf "%2.2f" "${C}")${DEG_SYMBOL}C ($(printf "%3.2f" "${F}")${DEG_SYMBOL}F) (***)"
line#: 1503...	printf "%2.2f" "${C}"
line#: 1503...	printf "%3.2f" "${F}"
line#: 1509...	[[ "${PI4_FAMILY}" = "1" ]]
line#: 1511...	echo
line#: 1512...	echo "Additional Pi ${MY_MODEL_NAME} PMIC temperature..."
line#: 1513...	PMIC_TEMP=$(vcgencmd measure_temp pmic)
line#: 1513...	vcgencmd measure_temp pmic
line#: 1514...	C=$(echo "${PMIC_TEMP}" | cut -f2 -d"=" | cut -f1 -d"'")
line#: 1514...	echo "${PMIC_TEMP}"
line#: 1514...	cut -f2 -d"="
line#: 1514...	cut -f1 -d"'"
line#: 1515...	type -path dc > /dev/null 2>&1
line#: 1518...	F=$(echo "2 k 9 5 / ${C} * 32 + p" | dc)
line#: 1518...	echo "2 k 9 5 / ${C} * 32 + p"
line#: 1518...	dc
line#: 1519...	echo "PMIC Temp: $(printf "%2.2f" "${C}")${DEG_SYMBOL}C ($(printf "%3.2f" "${F}")${DEG_SYMBOL}F) (***)"
line#: 1519...	printf "%2.2f" "${C}"
line#: 1519...	printf "%3.2f" "${F}"
line#: 1525...	echo
line#: 1469...	echo
leave: fnTEMPS -> back to fnGROUP_PERFORMANCE

line#: 5102...	fnGOV
line#: 1533...	fnGOV
line#: 1534...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGOV fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1536...	local GOV=""
line#: 1537...	local FORCE=""
line#: 1539...	fnBANNER "SCALING GOVERNOR"
line#: 211...	fnBANNER "SCALING GOVERNOR"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnGOV fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnGOV

line#: 1540...	GOV=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2>/dev/null)
line#: 1540...	cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2> /dev/null
line#: 1541...	FORCE=$(grep "^force_turbo=" /boot/config.txt 2>/dev/null | cut -f2 -d"=")
line#: 1541...	grep "^force_turbo=" /boot/config.txt 2> /dev/null
line#: 1541...	cut -f2 -d"="
line#: 1555...	echo "${GOV}"
line#: 1556...	[[ "${GOV}" != "performance" ]]
line#: 1556...	[[ "${FORCE}" = "1" ]]
line#: 1558...	echo "(...but overridden by \"force_turbo=1\" found in config.txt)"
line#: 1560...	echo
line#: 1533...	echo
leave: fnGOV -> back to fnGROUP_PERFORMANCE

line#: 5103...	fnTHROTTLES
line#: 1568...	fnTHROTTLES
line#: 1569...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnTHROTTLES fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1571...	local UNDERVOLTED=""
line#: 1572...	local CAPPED=""
line#: 1573...	local THROTTLED=""
line#: 1574...	local SOFT_TEMPLIMIT=""
line#: 1575...	local HAS_UNDERVOLTED=""
line#: 1576...	local HAS_CAPPED=""
line#: 1577...	local HAS_THROTTLED=""
line#: 1578...	local HAS_SOFT_TEMPLIMIT=""
line#: 1579...	local GOOD=""
line#: 1580...	local BAD=""
line#: 1581...	local STATUS=""
line#: 1583...	fnBANNER "DECODED PROCESSOR THROTTLING STATUS"
line#: 211...	fnBANNER "DECODED PROCESSOR THROTTLING STATUS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnTHROTTLES fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnTHROTTLES

line#: 1601...	UNDERVOLTED=0x1
line#: 1602...	CAPPED=0x2
line#: 1603...	THROTTLED=0x4
line#: 1604...	SOFT_TEMPLIMIT=0x8
line#: 1605...	HAS_UNDERVOLTED=0x10000
line#: 1606...	HAS_CAPPED=0x20000
line#: 1607...	HAS_THROTTLED=0x40000
line#: 1608...	HAS_SOFT_TEMPLIMIT=0x80000
line#: 1611...	GOOD="no"
line#: 1612...	BAD="YES"
line#: 1615...	STATUS=$(vcgencmd get_throttled)
line#: 1615...	vcgencmd get_throttled
line#: 1616...	STATUS=${STATUS#*=}
line#: 1618...	echo -n "Throttle Status: "
line#: 1619...	((STATUS!=0))
line#: 1619...	echo "${STATUS}"
line#: 1620...	echo
line#: 1622...	echo "Undervolted:"
line#: 1623...	echo -n "    Currently: "
line#: 1624...	(((STATUS&UNDERVOLTED)!=0))
line#: 1624...	echo "${GOOD}"
line#: 1625...	echo -n "   Since Boot: "
line#: 1626...	(((STATUS&HAS_UNDERVOLTED)!=0))
line#: 1626...	echo "${GOOD}"
line#: 1627...	echo
line#: 1628...	echo "Throttled:"
line#: 1629...	echo -n "    Currently: "
line#: 1630...	(((STATUS&THROTTLED)!=0))
line#: 1630...	echo "${GOOD}"
line#: 1631...	echo -n "   Since Boot: "
line#: 1632...	(((STATUS&HAS_THROTTLED)!=0))
line#: 1632...	echo "${GOOD}"
line#: 1633...	echo
line#: 1634...	echo "Frequency Capped:"
line#: 1635...	echo -n "    Currently: "
line#: 1636...	(((STATUS&CAPPED)!=0))
line#: 1636...	echo "${GOOD}"
line#: 1637...	echo -n "   Since Boot: "
line#: 1638...	(((STATUS&HAS_CAPPED)!=0))
line#: 1638...	echo "${GOOD}"
line#: 1639...	echo
line#: 1640...	echo "Softlimit:"
line#: 1641...	echo -n "    Currently: "
line#: 1642...	(((STATUS&SOFT_TEMPLIMIT)!=0))
line#: 1642...	echo "${GOOD}"
line#: 1643...	echo -n "   Since Boot: "
line#: 1644...	(((STATUS&HAS_SOFT_TEMPLIMIT)!=0))
line#: 1644...	echo "${GOOD}"
line#: 1645...	echo
line#: 1568...	echo
leave: fnTHROTTLES -> back to fnGROUP_PERFORMANCE

line#: 5104...	fnMPSTAT
line#: 3595...	fnMPSTAT
line#: 3596...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMPSTAT fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3599...	type -path mpstat > /dev/null 2>&1
line#: 3601...	fnBANNER "MPSTAT (***)"
line#: 211...	fnBANNER "MPSTAT (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMPSTAT fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMPSTAT

line#: 3603...	mpstat 3 3
line#: 3604...	echo
line#: 3595...	echo
leave: fnMPSTAT -> back to fnGROUP_PERFORMANCE

line#: 5105...	fnIOSTAT
line#: 3615...	fnIOSTAT
line#: 3616...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnIOSTAT fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3619...	type -path iostat > /dev/null 2>&1
line#: 3621...	fnBANNER "IOSTAT (***)"
line#: 211...	fnBANNER "IOSTAT (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnIOSTAT fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnIOSTAT

line#: 3622...	iostat -x
line#: 3615...	iostat -x
leave: fnIOSTAT -> back to fnGROUP_PERFORMANCE

line#: 5106...	fnSYSBENCH_CPU
line#: 4124...	fnSYSBENCH_CPU
line#: 4125...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSBENCH_CPU fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4128...	type -path sysbench > /dev/null 2>&1
line#: 4124...	type -path sysbench > /dev/null 2>&1
leave: fnSYSBENCH_CPU -> back to fnGROUP_PERFORMANCE

line#: 5107...	fnSYSBENCH_MEM
line#: 4141...	fnSYSBENCH_MEM
line#: 4142...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSBENCH_MEM fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4145...	type -path sysbench > /dev/null 2>&1
line#: 4141...	type -path sysbench > /dev/null 2>&1
leave: fnSYSBENCH_MEM -> back to fnGROUP_PERFORMANCE

line#: 5108...	fnSYSBENCH_IO
line#: 4160...	fnSYSBENCH_IO
line#: 4161...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSBENCH_IO fnGROUP_PERFORMANCE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4165...	type -path sysbench > /dev/null 2>&1
line#: 4160...	type -path sysbench > /dev/null 2>&1
leave: fnSYSBENCH_IO -> back to fnGROUP_PERFORMANCE

line#: 5088...	type -path sysbench > /dev/null 2>&1
leave: fnGROUP_PERFORMANCE -> back to fnACTIONS

line#: 5476...	fnGROUP_OS_CONFIG
line#: 5116...	fnGROUP_OS_CONFIG
line#: 5117...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5119...	echo ' __ __ _____  __        __      '
line#: 5120...	echo '(_ |_ /   | |/  \|\ |    _)     Menu Option 3'
line#: 5121...	echo '__)|__\__ | |\__/| \|   __)     OS CONFIG'
line#: 5122...	echo
line#: 5123...	SECTION="3"
line#: 5124...	fnOS
line#: 861...	fnOS
line#: 862...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnOS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 864...	local TARGET=""
line#: 865...	local AUTOLOGIN_GUI=""
line#: 866...	local AUTOLOGIN_TTY=""
line#: 868...	fnBANNER "OPERATING SYSTEM"
line#: 211...	fnBANNER "OPERATING SYSTEM"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnOS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnOS

line#: 869...	echo "${PRETTY_NAME}"
line#: 870...	uname -a
line#: 871...	echo
line#: 873...	echo "LSB_RELEASE:"
line#: 874...	lsb_release -a 2> /dev/null
line#: 875...	echo
line#: 877...	echo "HOSTNAMECTL:"
line#: 878...	hostnamectl status 2> /dev/null
line#: 879...	echo
line#: 881...	echo "OSTYPE.............. ${OSTYPE}"
line#: 882...	echo
line#: 884...	[[ "$(vcgencmd get_config arm_64bit | cut -f2 -d"=")" = "1" ]]
line#: 884...	vcgencmd get_config arm_64bit
line#: 884...	cut -f2 -d"="
line#: 886...	echo "KERNEL IS........... 64-BIT"
line#: 891...	[[ -c /dev/kvm ]]
line#: 893...	echo "KVM SUPPORT......... enabled"
line#: 898...	fnMODPROBE_CONFIGS
line#: 831...	fnMODPROBE_CONFIGS
line#: 832...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMODPROBE_CONFIGS fnOS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 834...	MODPROBE_CONFIGS=0
line#: 835...	[[ "$(lsmod | grep configs)" = "" ]]
line#: 835...	lsmod
line#: 835...	grep configs
line#: 837...	${SUDO} modprobe configs
line#: 838...	MODPROBE_CONFIGS=1
line#: 831...	MODPROBE_CONFIGS=1
leave: fnMODPROBE_CONFIGS -> back to fnOS

line#: 900...	[[ "$(${SUDO} gunzip -c /proc/config.gz | grep "CONFIG_SECURITY_SELINUX=[ym]")" != "" ]]
line#: 900...	${SUDO} gunzip -c /proc/config.gz
line#: 900...	grep "CONFIG_SECURITY_SELINUX=[ym]"
line#: 905...	echo "SELINUX............. not present in this kernel"
line#: 908...	[[ "$(${SUDO} gunzip -c /proc/config.gz | grep "CONFIG_SECURITY_APPARMOR=[ym]")" != "" ]]
line#: 908...	${SUDO} gunzip -c /proc/config.gz
line#: 908...	grep "CONFIG_SECURITY_APPARMOR=[ym]"
line#: 910...	echo "APPARMOR............ enabled"
line#: 911...	HAS_APPARMOR="yes"
line#: 916...	[[ "$(${SUDO} gunzip -c /proc/config.gz | grep "CONFIG_AUDIT=[ym]")" != "" ]]
line#: 916...	${SUDO} gunzip -c /proc/config.gz
line#: 916...	grep "CONFIG_AUDIT=[ym]"
line#: 918...	echo "AUDITD SUPPORT...... enabled"
line#: 919...	HAS_AUDITD="yes"
line#: 924...	echo
line#: 926...	fnRMMOD_CONFIGS
line#: 846...	fnRMMOD_CONFIGS
line#: 847...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRMMOD_CONFIGS fnOS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 849...	[[ "$(lsmod | grep configs)" != "" ]]
line#: 849...	lsmod
line#: 849...	grep configs
line#: 849...	[[ "${MODPROBE_CONFIGS}" -eq 1 ]]
line#: 851...	${SUDO} rmmod configs
line#: 852...	MODPROBE_CONFIGS=0
line#: 846...	MODPROBE_CONFIGS=0
leave: fnRMMOD_CONFIGS -> back to fnOS

line#: 928...	echo -n "DEFAULT BOOT TARGET. "
line#: 929...	TARGET="$(stat /lib/systemd/system/default.target | grep "File:" | awk '{ print $NF }')"
line#: 929...	stat /lib/systemd/system/default.target
line#: 929...	grep "File:"
line#: 929...	awk '{ print $NF }'
line#: 930...	systemctl list-units --type=target
line#: 930...	grep "${TARGET}"
line#: 930...	awk '{ print $5" "$6" "$7" "$8" "$9 }'
line#: 932...	[[ -f /etc/lightdm/lightdm.conf ]]
line#: 934...	echo -n "GUI AUTOLOGIN....... "
line#: 935...	AUTOLOGIN_GUI="$(grep "^autologin-user=" /etc/lightdm/lightdm.conf | cut -f2 -d"=")"
line#: 935...	grep "^autologin-user=" /etc/lightdm/lightdm.conf
line#: 935...	cut -f2 -d"="
line#: 936...	[[ -n "${AUTOLOGIN_GUI}" ]]
line#: 938...	echo "${AUTOLOGIN_GUI}"
line#: 944...	echo -n "TTY AUTOLOGIN....... "
line#: 945...	AUTOLOGIN_TTY="$(grep "^ExecStart=" /lib/systemd/system/getty@.service | grep "autologin" | awk '{ print $3 }')"
line#: 945...	grep "^ExecStart=" /lib/systemd/system/getty@.service
line#: 945...	grep "autologin"
line#: 945...	awk '{ print $3 }'
line#: 946...	[[ -n "${AUTOLOGIN_TTY}" ]]
line#: 950...	echo "none"
line#: 952...	echo
line#: 954...	echo "BASH VERSION........ ${BASH_VERSION}"
line#: 955...	echo
line#: 957...	echo -n "UPTIME.............. "
line#: 958...	uptime -p
line#: 959...	echo
line#: 861...	echo
leave: fnOS -> back to fnGROUP_OS_CONFIG

line#: 5125...	fnLOCALE
line#: 3141...	fnLOCALE
line#: 3142...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLOCALE fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3144...	[[ -f /etc/default/locale ]]
line#: 3144...	[[ -f /etc/default/keyboard ]]
line#: 3144...	[[ -f /etc/default/console-setup ]]
line#: 3144...	[[ -f /etc/timezone ]]
line#: 3146...	fnBANNER "LOCALIZATION SETTINGS"
line#: 211...	fnBANNER "LOCALIZATION SETTINGS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLOCALE fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLOCALE

line#: 3147...	. /etc/default/locale
line#: 2...	LANG=en_US.UTF-8
line#: 3147...	. /etc/default/locale
leave: fnLOCALE -> back to fnGROUP_OS_CONFIG

line#: 3148...	. /etc/default/keyboard
line#: 1...	XKBMODEL=pc105
line#: 2...	XKBLAYOUT=us
line#: 3...	XKBVARIANT=
line#: 4...	XKBOPTIONS=
line#: 5...	BACKSPACE=guess
line#: 3148...	. /etc/default/keyboard
leave: fnLOCALE -> back to fnGROUP_OS_CONFIG

line#: 3149...	. /etc/default/console-setup
line#: 5...	ACTIVE_CONSOLES="/dev/tty[1-6]"
line#: 7...	CHARMAP="UTF-8"
line#: 9...	CODESET="guess"
line#: 10...	FONTFACE=""
line#: 11...	FONTSIZE=""
line#: 13...	VIDEOMODE=
line#: 3149...	. /etc/default/console-setup
leave: fnLOCALE -> back to fnGROUP_OS_CONFIG

line#: 3150...	echo "Language : ${LANG}"
line#: 3151...	echo "KB Model : ${XKBMODEL}"
line#: 3152...	echo "KB Layout: ${XKBLAYOUT}"
line#: 3153...	echo "Char. Map: ${CHARMAP}"
line#: 3154...	echo "Timezone : $(cat /etc/timezone 2>/dev/null)"
line#: 3154...	cat /etc/timezone 2> /dev/null
line#: 3155...	echo
line#: 3141...	echo
leave: fnLOCALE -> back to fnGROUP_OS_CONFIG

line#: 5126...	fnCMDLINE
line#: 1245...	fnCMDLINE
line#: 1246...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCMDLINE fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1248...	fnBANNER "CMDLINE.TXT"
line#: 211...	fnBANNER "CMDLINE.TXT"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCMDLINE fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCMDLINE

line#: 1249...	cat /boot/cmdline.txt 2> /dev/null
line#: 1250...	echo
line#: 1245...	echo
leave: fnCMDLINE -> back to fnGROUP_OS_CONFIG

line#: 5127...	fnCONFIGTXT
line#: 1258...	fnCONFIGTXT
line#: 1259...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCONFIGTXT fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1261...	fnBANNER "CONFIG.TXT SETTINGS"
line#: 211...	fnBANNER "CONFIG.TXT SETTINGS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCONFIGTXT fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCONFIGTXT

line#: 1262...	grep -E -v "^$|^#" < /boot/config.txt 2> /dev/null
line#: 1263...	echo
line#: 1258...	echo
leave: fnCONFIGTXT -> back to fnGROUP_OS_CONFIG

line#: 5128...	fnDTOVERLAYS
line#: 1132...	fnDTOVERLAYS
line#: 1133...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDTOVERLAYS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1135...	fnBANNER "ACTIVE DEVICE TREE OVERLAYS"
line#: 211...	fnBANNER "ACTIVE DEVICE TREE OVERLAYS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDTOVERLAYS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDTOVERLAYS

line#: 1136...	${SUDO} vcdbg log msg 2>&1
line#: 1136...	grep "Loaded overlay"
line#: 1136...	cut -f2- -d":"
line#: 1137...	echo
line#: 1132...	echo
leave: fnDTOVERLAYS -> back to fnGROUP_OS_CONFIG

line#: 5129...	fnDTPARAMS
line#: 1145...	fnDTPARAMS
line#: 1146...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDTPARAMS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1148...	fnBANNER "ACTIVE DEVICE TREE PARAMS"
line#: 211...	fnBANNER "ACTIVE DEVICE TREE PARAMS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDTPARAMS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDTPARAMS

line#: 1149...	${SUDO} vcdbg log msg 2>&1
line#: 1149...	grep "dtparam:"
line#: 1149...	cut -f2- -d":"
line#: 1150...	echo
line#: 1145...	echo
leave: fnDTPARAMS -> back to fnGROUP_OS_CONFIG

line#: 5130...	fnSYSCTL
line#: 1158...	fnSYSCTL
line#: 1159...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSCTL fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1161...	fnBANNER "SYSCTL KERNEL VARIABLES"
line#: 211...	fnBANNER "SYSCTL KERNEL VARIABLES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSYSCTL fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSYSCTL

line#: 1162...	cat /etc/sysctl.conf /etc/sysctl.d/*.conf
line#: 1162...	grep -E -v "^$|^#"
line#: 1162...	sort
line#: 1163...	echo
line#: 1158...	echo
leave: fnSYSCTL -> back to fnGROUP_OS_CONFIG

line#: 5131...	fnLEDS
line#: 1171...	fnLEDS
line#: 1172...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLEDS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1174...	local TRIGGER=""
line#: 1211...	fnBANNER "LED TRIGGERS"
line#: 211...	fnBANNER "LED TRIGGERS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLEDS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLEDS

line#: 1212...	TRIGGER=""
line#: 1213...	[[ -f /sys/class/leds/led0/trigger ]]
line#: 1215...	echo -n "LED0: "
line#: 1216...	sed 's/ /
/g' < /sys/class/leds/led0/trigger
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1218...	echo "${TRIGGER}"
line#: 1218...	grep -F "["
line#: 1218...	:
line#: 1216...	read -r TRIGGER
line#: 1221...	[[ -f /sys/class/leds/led1/trigger ]]
line#: 1223...	echo -n "LED1: "
line#: 1224...	sed 's/ /
/g' < /sys/class/leds/led1/trigger
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1226...	echo "${TRIGGER}"
line#: 1226...	grep -F "["
line#: 1226...	:
line#: 1224...	read -r TRIGGER
line#: 1229...	[[ -f /sys/class/leds/mmc0::/trigger ]]
line#: 1231...	echo -n "MMC0: "
line#: 1232...	sed 's/ /
/g' < /sys/class/leds/mmc0::/trigger
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1234...	echo "${TRIGGER}"
line#: 1234...	grep -F "["
line#: 1234...	:
line#: 1232...	read -r TRIGGER
line#: 1237...	echo
line#: 1171...	echo
leave: fnLEDS -> back to fnGROUP_OS_CONFIG

line#: 5132...	fnULIMIT_CORE
line#: 1653...	fnULIMIT_CORE
line#: 1654...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnULIMIT_CORE fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1656...	local ULIMIT=""
line#: 1657...	local HITS=""
line#: 1660...	fnBANNER "ULIMIT AND CORE DUMPS (***)"
line#: 211...	fnBANNER "ULIMIT AND CORE DUMPS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnULIMIT_CORE fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnULIMIT_CORE

line#: 1661...	ulimit -a
line#: 1662...	echo
line#: 1664...	ULIMIT=$(ulimit -c)
line#: 1664...	ulimit -c
line#: 1665...	case ${ULIMIT} in 
line#: 1671...	echo " Core dumps are enabled..."
line#: 1672...	echo "ulimit = unlimited"
line#: 1679...	echo
line#: 1681...	HITS=$(find /etc/security/limits* -type f -exec grep core {} \; | grep -v "^#")
line#: 1681...	find /etc/security/limits* -type f -exec grep core {} \;
line#: 1681...	grep -v "^#"
line#: 1682...	[[ -n "${HITS}" ]]
line#: 1684...	echo " Core dumps are enabled globally in /etc/security/limits*..."
line#: 1685...	echo "${HITS}"
line#: 1686...	echo
line#: 1689...	HITS=$(find /etc/systemd/system.conf -type f -exec grep DefaultLimitCORE {} \; | grep -v "^#")
line#: 1689...	find /etc/systemd/system.conf -type f -exec grep DefaultLimitCORE {} \;
line#: 1689...	grep -v "^#"
line#: 1690...	[[ -n "${HITS}" ]]
line#: 1692...	echo " Default global core dump limit in /etc/systemd/system.conf..."
line#: 1693...	echo "${HITS}"
line#: 1694...	echo
line#: 1697...	[[ -f /etc/systemd/coredump.conf ]]
line#: 1699...	echo " Contents of /etc/systemd/coredump.conf..."
line#: 1700...	grep -v "^# " < /etc/systemd/coredump.conf 2> /dev/null
line#: 1700...	grep -v "^#$"
line#: 1700...	grep -v "^$"
line#: 1701...	echo
line#: 1704...	[[ "$(journalctl -xe | grep "dumped core")" != "" ]]
line#: 1704...	journalctl -xe
line#: 1704...	grep "dumped core"
line#: 1706...	echo " journalctl -xe..."
line#: 1707...	journalctl -xe
line#: 1707...	grep "dumped core"
line#: 1708...	echo
line#: 1711...	type -path coredumpctl > /dev/null 2>&1
line#: 1713...	echo " journalctl reports the following core dumps..."
line#: 1714...	${SUDO} coredumpctl list 2>&1
line#: 1715...	echo
line#: 1716...	echo " Core dumps present in /var/lib/systemd/coredump..."
line#: 1717...	ls -l /var/lib/systemd/coredump
line#: 1718...	echo
line#: 1653...	echo
leave: fnULIMIT_CORE -> back to fnGROUP_OS_CONFIG

line#: 5133...	fnERRNO
line#: 3970...	fnERRNO
line#: 3971...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnERRNO fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3974...	type -path perl > /dev/null 2>&1
line#: 3974...	type -path m4 > /dev/null 2>&1
line#: 3976...	fnBANNER "OPERATING SYSTEM ERROR NUMBERS (***)"
line#: 211...	fnBANNER "OPERATING SYSTEM ERROR NUMBERS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnERRNO fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnERRNO

line#: 3977...	echo " NUM SYMBOLIC_NAME    DESCRIPTION"
line#: 3978...	echo " ----------------------------------------------------"
line#: 3983...	perl -MErrno -e 'my %e= map { Errno->$_()=>$_ } keys(%!); print grep !/unknown error/i, map sprintf("%4d %-16s %s".$/,$_,$e{$_},$!=$_), 1..255'
line#: 3984...	echo
line#: 3970...	echo
leave: fnERRNO -> back to fnGROUP_OS_CONFIG

line#: 5134...	fnSIGNALS
line#: 3993...	fnSIGNALS
line#: 3994...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSIGNALS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3996...	fnBANNER "EVENT SIGNALS"
line#: 211...	fnBANNER "EVENT SIGNALS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSIGNALS fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSIGNALS

line#: 3997...	trap -l
line#: 3998...	echo
line#: 3993...	echo
leave: fnSIGNALS -> back to fnGROUP_OS_CONFIG

line#: 5135...	fnCRON
line#: 4006...	fnCRON
line#: 4007...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCRON fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4009...	fnBANNER "JOB SCHEDULING - CRON"
line#: 211...	fnBANNER "JOB SCHEDULING - CRON"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCRON fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCRON

line#: 4010...	echo " Contents of /etc/crontab:"
line#: 4011...	[[ -f /etc/crontab ]]
line#: 4013...	cat /etc/crontab
line#: 4017...	echo
line#: 4018...	echo " ----------------------------------------------------"
line#: 4019...	echo " cron files in /etc/cron.d ..."
line#: 4020...	ls /etc/cron.d
line#: 4021...	echo
line#: 4022...	echo " ----------------------------------------------------"
line#: 4023...	echo " cron files in /etc/cron.hourly ..."
line#: 4024...	ls /etc/cron.hourly
line#: 4025...	echo
line#: 4026...	echo " ----------------------------------------------------"
line#: 4027...	echo " cron files in /etc/cron.daily ..."
line#: 4028...	ls /etc/cron.daily
line#: 4029...	echo
line#: 4030...	echo " ----------------------------------------------------"
line#: 4031...	echo " cron files in /etc/cron.weekly ..."
line#: 4032...	ls /etc/cron.weekly
line#: 4033...	echo
line#: 4034...	echo " ----------------------------------------------------"
line#: 4035...	echo " cron files in /etc/cron.monthly ..."
line#: 4036...	ls /etc/cron.monthly
line#: 4037...	echo
line#: 4038...	echo " ----------------------------------------------------"
line#: 4039...	echo " cron files in /var/spool/cron/crontabs:"
line#: 4040...	${SUDO} ls /var/spool/cron/crontabs
line#: 4041...	echo
line#: 4042...	echo " ----------------------------------------------------"
line#: 4043...	echo " Contents of /etc/cron.allow:"
line#: 4044...	[[ -f /etc/cron.allow ]]
line#: 4048...	echo " File /etc/cron.allow not configured"
line#: 4050...	echo
line#: 4051...	echo " ----------------------------------------------------"
line#: 4052...	echo " Contents of /etc/cron.deny:"
line#: 4053...	[[ -f /etc/cron.deny ]]
line#: 4057...	echo " File /etc/cron.deny not configured"
line#: 4059...	echo
line#: 4060...	echo " ----------------------------------------------------"
line#: 4061...	systemctl status cron.service
line#: 4062...	echo
line#: 4006...	echo
leave: fnCRON -> back to fnGROUP_OS_CONFIG

line#: 5136...	fnAT
line#: 4070...	fnAT
line#: 4071...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnAT fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4074...	type -path at > /dev/null 2>&1
line#: 4076...	fnBANNER "JOB SCHEDULING - AT (***)"
line#: 211...	fnBANNER "JOB SCHEDULING - AT (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnAT fnGROUP_OS_CONFIG fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnAT

line#: 4077...	[[ -f /etc/at.allow ]]
line#: 4083...	echo " File /etc/at.allow not configured"
line#: 4084...	echo
line#: 4086...	echo " ----------------------------------------------------"
line#: 4087...	[[ -f /etc/at.deny ]]
line#: 4089...	echo " Contents of /etc/at.deny:"
line#: 4090...	${SUDO} cat /etc/at.deny 2> /dev/null
line#: 4091...	echo
line#: 4096...	echo " ----------------------------------------------------"
line#: 4097...	echo " at files in /var/spool/cron/atjobs:"
line#: 4098...	${SUDO} ls /var/spool/cron/atjobs
line#: 4099...	echo
line#: 4100...	echo " ----------------------------------------------------"
line#: 4101...	echo " at files in /var/spool/cron/atspool:"
line#: 4102...	${SUDO} ls /var/spool/cron/atspool
line#: 4103...	echo
line#: 4104...	echo " ----------------------------------------------------"
line#: 4105...	echo " Checking atq for any jobs..."
line#: 4106...	[[ -n "$(${SUDO} atq)" ]]
line#: 4106...	${SUDO} atq
line#: 4110...	echo " No jobs found"
line#: 4112...	echo
line#: 4113...	echo " ----------------------------------------------------"
line#: 4114...	systemctl status atd.service
line#: 4115...	echo
line#: 4070...	echo
leave: fnAT -> back to fnGROUP_OS_CONFIG

line#: 5116...	echo
leave: fnGROUP_OS_CONFIG -> back to fnACTIONS

line#: 5477...	fnGROUP_MEMORY
line#: 5144...	fnGROUP_MEMORY
line#: 5145...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5147...	echo ' __ __ _____  __                '
line#: 5148...	echo '(_ |_ /   | |/  \|\ |   |__|    Menu Option 4'
line#: 5149...	echo '__)|__\__ | |\__/| \|      |    MEMORY'
line#: 5150...	echo
line#: 5151...	SECTION="4"
line#: 5152...	fnMEMSPLIT
line#: 1271...	fnMEMSPLIT
line#: 1272...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMEMSPLIT fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1274...	local ARM=""
line#: 1275...	local GPU=""
line#: 1277...	fnBANNER "MEMORY SPLIT"
line#: 211...	fnBANNER "MEMORY SPLIT"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMEMSPLIT fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMEMSPLIT

line#: 1282...	ARM=$(($(dmesg | grep "Memory:" | grep "available" | cut -f2 -d"/" | cut -f1 -d"K") / 1024 ))
line#: 1282...	dmesg
line#: 1282...	grep "Memory:"
line#: 1282...	grep "available"
line#: 1282...	cut -f2 -d"/"
line#: 1282...	cut -f1 -d"K"
line#: 1283...	ARM=$(printf "%4d" "${ARM}")
line#: 1283...	printf "%4d" "${ARM}"
line#: 1284...	echo "ARM: ${ARM} MB"
line#: 1285...	GPU="$(vcgencmd get_mem gpu | cut -f2 -d"=" | sed 's/M$//')"
line#: 1285...	vcgencmd get_mem gpu
line#: 1285...	cut -f2 -d"="
line#: 1285...	sed 's/M$//'
line#: 1286...	GPU=$(printf "%4d" "${GPU}")
line#: 1286...	printf "%4d" "${GPU}"
line#: 1287...	echo "GPU: ${GPU} MB"
line#: 1288...	echo
line#: 1289...	echo "Note: GPU hardware-accelerated codecs will be disabled if \"gpu_mem=16\"."
line#: 1290...	echo "At least \"gpu_mem=96\" is required for HW codecs to run correctly."
line#: 1291...	echo "At least \"gpu_mem=128\" is required for camera operation."
line#: 1292...	echo
line#: 1271...	echo
leave: fnMEMSPLIT -> back to fnGROUP_MEMORY

line#: 5153...	fnMEMSWAP
line#: 2784...	fnMEMSWAP
line#: 2785...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMEMSWAP fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2787...	fnBANNER "MEMORY AND SWAP"
line#: 211...	fnBANNER "MEMORY AND SWAP"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMEMSWAP fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMEMSWAP

line#: 2788...	free -h
line#: 2789...	echo
line#: 2790...	swapon --summary
line#: 2791...	echo
line#: 2784...	echo
leave: fnMEMSWAP -> back to fnGROUP_MEMORY

line#: 5154...	fnMEMINFO
line#: 2799...	fnMEMINFO
line#: 2800...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMEMINFO fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2802...	[[ -e /proc/meminfo ]]
line#: 2804...	fnBANNER "MEMINFO"
line#: 211...	fnBANNER "MEMINFO"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMEMINFO fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMEMINFO

line#: 2805...	cat /proc/meminfo 2> /dev/null
line#: 2806...	echo
line#: 2799...	echo
leave: fnMEMINFO -> back to fnGROUP_MEMORY

line#: 5155...	fnIPC
line#: 2815...	fnIPC
line#: 2816...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnIPC fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2818...	fnBANNER "IPC STATUS"
line#: 211...	fnBANNER "IPC STATUS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnIPC fnGROUP_MEMORY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnIPC

line#: 2819...	lsipc
line#: 2820...	echo
line#: 2821...	ipcs -u
line#: 2822...	ipcs -m
line#: 2823...	ipcs -q
line#: 2824...	ipcs -s
line#: 2825...	ipcs -l
line#: 2815...	ipcs -l
leave: fnIPC -> back to fnGROUP_MEMORY

line#: 5144...	ipcs -l
leave: fnGROUP_MEMORY -> back to fnACTIONS

line#: 5478...	fnGROUP_LOGGING
line#: 5163...	fnGROUP_LOGGING
line#: 5164...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5166...	echo ' __ __ _____  __         __     '
line#: 5167...	echo '(_ |_ /   | |/  \|\ |   |_      Menu Option 5'
line#: 5168...	echo '__)|__\__ | |\__/| \|   __)     LOGGING'
line#: 5169...	echo
line#: 5170...	SECTION="5"
line#: 5171...	fnDMESG
line#: 2833...	fnDMESG
line#: 2834...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDMESG fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2836...	fnBANNER "DMESG - WARNINGS"
line#: 211...	fnBANNER "DMESG - WARNINGS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDMESG fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDMESG

line#: 2837...	dmesg
line#: 2837...	grep -i warn
line#: 2838...	echo
line#: 2839...	fnBANNER "DMESG - FAILURES"
line#: 211...	fnBANNER "DMESG - FAILURES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDMESG fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDMESG

line#: 2840...	dmesg
line#: 2840...	grep -i fail
line#: 2841...	echo
line#: 2833...	echo
leave: fnDMESG -> back to fnGROUP_LOGGING

line#: 5172...	fnJOURNAL
line#: 2936...	fnJOURNAL
line#: 2937...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnJOURNAL fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2939...	[[ -d /var/log/journal ]]
line#: 2941...	[[ "$(stat /var/log/journal | grep "Access" | grep "2755" | grep "root" | grep "systemd")" != "" ]]
line#: 2941...	stat /var/log/journal
line#: 2941...	grep "Access"
line#: 2941...	grep "2755"
line#: 2941...	grep "root"
line#: 2941...	grep "systemd"
line#: 2943...	fnBANNER "PERSISTENT JOURNALING"
line#: 211...	fnBANNER "PERSISTENT JOURNALING"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnJOURNAL fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnJOURNAL

line#: 2944...	echo "Persistent Journaling is configured"
line#: 2945...	ls -ld /var/log/journal
line#: 2946...	echo
line#: 2947...	${SUDO} journalctl --sync
line#: 2948...	${SUDO} journalctl --flush
line#: 2949...	${SUDO} journalctl -b
line#: 2949...	grep "System journal"
line#: 2949...	tail -1
line#: 2949...	cut -f4- -d":"
line#: 2950...	${SUDO} journalctl -b
line#: 2950...	grep "Runtime journal"
line#: 2950...	tail -1
line#: 2950...	cut -f4- -d":"
line#: 2950...	sed 's/^ //'
line#: 2951...	echo
line#: 2952...	echo "Journaled boots..."
line#: 2953...	journalctl --list-boots
line#: 2954...	echo
line#: 2955...	journalctl --disk-usage
line#: 2956...	echo
line#: 2936...	echo
leave: fnJOURNAL -> back to fnGROUP_LOGGING

line#: 5173...	fnRSYSLOG
line#: 2966...	fnRSYSLOG
line#: 2967...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRSYSLOG fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2969...	local PERL_SCRIPT=""
line#: 2975...	type -path perl > /dev/null 2>&1
line#: 2975...	type -path m4 > /dev/null 2>&1
line#: 2977...	fnBANNER "RSYSLOG.CONF ANALYSIS (***)"
line#: 211...	fnBANNER "RSYSLOG.CONF ANALYSIS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRSYSLOG fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRSYSLOG

line#: 2978...	echo "This module creates a comprehensive listing of rsyslog.conf event logging."
line#: 2979...	echo "The selector selects all messages of equal or higher severity.  For example,"
line#: 2980...	echo "news.err really means news.err, news.crit, news.alert, news.emerg.  And"
line#: 2981...	echo "mail,uucp.alert means mail.alert, mail.emerg, uucp.alert, and uucp.emerg."
line#: 2982...	echo
line#: 2983...	echo "Some versions of syslog allow an = character before the level specifier"
line#: 2984...	echo "(as in news.=err) to act only on messages of that level."
line#: 2985...	echo
line#: 2986...	echo "The output below interprets the directives to show where things are going."
line#: 2987...	echo
line#: 3088...	PERL_SCRIPT=$(cat <<'EOF'
select (STDERR); $| = 1;        # Turn off buffered I/O
select (STDOUT); $| = 1;
($progname = $0) =~ s/.*\///;
chop ($uname = `uname -nsr`);
@uname = split (' ', $uname);

sub fatal {
  local ($errMesg, $errCode) = (@_);

  printf (STDERR "$progname:  %s
", $errMesg);
  exit ($errCode);
}

$rsyslogconf = '/etc/rsyslog.conf';
$loghost = '';
@facilities = ('kern', 'user', 'mail', 'daemon',
  'auth', 'lpr', 'news', 'uucp', 'cron', 'local0',
  'local1', 'local2', 'local3', 'local4', 'local5',
  'local6', 'local7', 'mark');
@levels = ('emerg', 'alert', 'crit', 'err', 'warning',
  'notice', 'info', 'debug');

for $facil (@facilities) {
  for $lev (@levels) {
    $event_type{"$facil.$lev"} = 'no action';
  }
}
for $i ($[ .. $#levels) {
  $severity{$levels[$i]} = $i;
}

($name) = gethostbyname ('loghost');
if ($name eq $hostname) {
  # we're running on 'loghost'
  $loghost = '-DLOGHOST';
}

open (SYSLOGCONF, "m4 $loghost $rsyslogconf |") ||
  &fatal ("can't open 'm4 $rsyslogconf'", 2);

while (<SYSLOGCONF>) {
  local (%eventlist);

  next if (/^\s*$/ || /^\s*#/);
  chop;

  %eventlist = ( );
  ($events, $action) = split (/	+/);
  next if ($action eq '');

  # parse for multiple events
  @events = split (';', $events);
  for $event (@events) {
    local ($thislev, $evt);

    ($facils, $level) = split ('\.', $event);
    $thislev = $severity{$level};

    # parse for multiple facility specifications
    if ($facils eq '*') {
      @facils = grep (! /mark/, @facilities);
    } else {
      @facils = split (',', $facils);
    }
    if ($level eq 'none') {
      @levs = @levels;
    } else {
      @levs = grep ($severity{$_} <= $thislev, @levels);
    }
    for $facil (@facils) {
      for $lev (@levs) {
        if ($level eq 'none') {         # delete entry
          delete ($eventlist{"$facil.$lev"})
            if ($eventlist{"$facil.$lev"});
        } else {                        # add entry
          $eventlist{"$facil.$lev"} = 1;
        }
      }
    }
  }
  for $evt (keys (%eventlist)) {
    if ($event_type{$evt} eq 'no action') {
      $event_type{$evt} = $action;
    } else {
      $event_type{$evt} .= ", $action";
    }
  }
}

close (SYSLOGCONF);

for $key (sort (keys (%event_type))) {
  printf ("Event:  %-16s	Action:  %s
", $key,
    $event_type{$key});
}

exit (0);
EOF
    )
line#: 3088...	cat <<'EOF'
select (STDERR); $| = 1;        # Turn off buffered I/O
select (STDOUT); $| = 1;
($progname = $0) =~ s/.*\///;
chop ($uname = `uname -nsr`);
@uname = split (' ', $uname);

sub fatal {
  local ($errMesg, $errCode) = (@_);

  printf (STDERR "$progname:  %s
", $errMesg);
  exit ($errCode);
}

$rsyslogconf = '/etc/rsyslog.conf';
$loghost = '';
@facilities = ('kern', 'user', 'mail', 'daemon',
  'auth', 'lpr', 'news', 'uucp', 'cron', 'local0',
  'local1', 'local2', 'local3', 'local4', 'local5',
  'local6', 'local7', 'mark');
@levels = ('emerg', 'alert', 'crit', 'err', 'warning',
  'notice', 'info', 'debug');

for $facil (@facilities) {
  for $lev (@levels) {
    $event_type{"$facil.$lev"} = 'no action';
  }
}
for $i ($[ .. $#levels) {
  $severity{$levels[$i]} = $i;
}

($name) = gethostbyname ('loghost');
if ($name eq $hostname) {
  # we're running on 'loghost'
  $loghost = '-DLOGHOST';
}

open (SYSLOGCONF, "m4 $loghost $rsyslogconf |") ||
  &fatal ("can't open 'm4 $rsyslogconf'", 2);

while (<SYSLOGCONF>) {
  local (%eventlist);

  next if (/^\s*$/ || /^\s*#/);
  chop;

  %eventlist = ( );
  ($events, $action) = split (/	+/);
  next if ($action eq '');

  # parse for multiple events
  @events = split (';', $events);
  for $event (@events) {
    local ($thislev, $evt);

    ($facils, $level) = split ('\.', $event);
    $thislev = $severity{$level};

    # parse for multiple facility specifications
    if ($facils eq '*') {
      @facils = grep (! /mark/, @facilities);
    } else {
      @facils = split (',', $facils);
    }
    if ($level eq 'none') {
      @levs = @levels;
    } else {
      @levs = grep ($severity{$_} <= $thislev, @levels);
    }
    for $facil (@facils) {
      for $lev (@levs) {
        if ($level eq 'none') {         # delete entry
          delete ($eventlist{"$facil.$lev"})
            if ($eventlist{"$facil.$lev"});
        } else {                        # add entry
          $eventlist{"$facil.$lev"} = 1;
        }
      }
    }
  }
  for $evt (keys (%eventlist)) {
    if ($event_type{$evt} eq 'no action') {
      $event_type{$evt} = $action;
    } else {
      $event_type{$evt} .= ", $action";
    }
  }
}

close (SYSLOGCONF);

for $key (sort (keys (%event_type))) {
  printf ("Event:  %-16s	Action:  %s
", $key,
    $event_type{$key});
}

exit (0);
EOF

line#: 3089...	perl -e "${PERL_SCRIPT}"
line#: 3090...	echo
line#: 2966...	echo
leave: fnRSYSLOG -> back to fnGROUP_LOGGING

line#: 5174...	fnLOGROTATE
line#: 3099...	fnLOGROTATE
line#: 3100...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLOGROTATE fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3102...	fnBANNER "LOGROTATE"
line#: 211...	fnBANNER "LOGROTATE"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLOGROTATE fnGROUP_LOGGING fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLOGROTATE

line#: 3103...	echo " Contents of /etc/logrotate.conf:"
line#: 3104...	grep -v "^$" /etc/logrotate.conf
line#: 3105...	echo
line#: 3106...	echo " ----------------------------------------------------"
line#: 3107...	echo " logrotate config files in /etc/logrotate.d ..."
line#: 3108...	ls /etc/logrotate.d
line#: 3109...	echo
line#: 3110...	[[ "$(systemctl | grep "logrotate.timer")" != "" ]]
line#: 3110...	systemctl
line#: 3110...	grep "logrotate.timer"
line#: 3112...	echo " ----------------------------------------------------"
line#: 3113...	systemctl status logrotate.timer
line#: 3114...	echo
line#: 3099...	echo
leave: fnLOGROTATE -> back to fnGROUP_LOGGING

line#: 5163...	echo
leave: fnGROUP_LOGGING -> back to fnACTIONS

line#: 5479...	fnGROUP_OS_SERVICES
line#: 5182...	fnGROUP_OS_SERVICES
line#: 5183...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5185...	echo ' __ __ _____  __         __     '
line#: 5186...	echo '(_ |_ /   | |/  \|\ |   /__     Menu Option 6'
line#: 5187...	echo '__)|__\__ | |\__/| \|   \__)    SERVICES'
line#: 5188...	echo
line#: 5189...	SECTION="6"
line#: 5190...	fnSYSTEMD_CHAIN
line#: 2849...	fnSYSTEMD_CHAIN
line#: 2850...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSTEMD_CHAIN fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2852...	fnBANNER "SYSTEMD-ANALYZE CRITICAL-CHAIN"
line#: 211...	fnBANNER "SYSTEMD-ANALYZE CRITICAL-CHAIN"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSYSTEMD_CHAIN fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSYSTEMD_CHAIN

line#: 2853...	systemctl list-jobs
line#: 2854...	echo
line#: 2855...	systemd-analyze time
line#: 2856...	echo
line#: 2857...	systemd-analyze critical-chain
line#: 2858...	echo
line#: 2849...	echo
leave: fnSYSTEMD_CHAIN -> back to fnGROUP_OS_SERVICES

line#: 5191...	fnSYSTEMD_BLAME
line#: 2866...	fnSYSTEMD_BLAME
line#: 2867...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSTEMD_BLAME fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2869...	fnBANNER "SYSTEMD-ANALYZE BLAME"
line#: 211...	fnBANNER "SYSTEMD-ANALYZE BLAME"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSYSTEMD_BLAME fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSYSTEMD_BLAME

line#: 2871...	systemd-analyze blame
line#: 2871...	tee /dev/null
line#: 2872...	echo
line#: 2866...	echo
leave: fnSYSTEMD_BLAME -> back to fnGROUP_OS_SERVICES

line#: 5192...	fnSYSTEMD_SECURITY
line#: 2880...	fnSYSTEMD_SECURITY
line#: 2881...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSTEMD_SECURITY fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2883...	fnBANNER "SYSTEMD-ANALYZE SECURITY"
line#: 211...	fnBANNER "SYSTEMD-ANALYZE SECURITY"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSYSTEMD_SECURITY fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSYSTEMD_SECURITY

line#: 2886...	systemd-analyze security
line#: 2886...	tee /dev/null
line#: 2887...	echo
line#: 2880...	echo
leave: fnSYSTEMD_SECURITY -> back to fnGROUP_OS_SERVICES

line#: 5193...	fnSYSCTL_STATUS
line#: 2895...	fnSYSCTL_STATUS
line#: 2896...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSCTL_STATUS fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2898...	fnBANNER "SYSTEMCTL STATUS"
line#: 211...	fnBANNER "SYSTEMCTL STATUS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSYSCTL_STATUS fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSYSCTL_STATUS

line#: 2900...	systemctl status
line#: 2900...	tee /dev/null
line#: 2901...	echo
line#: 2895...	echo
leave: fnSYSCTL_STATUS -> back to fnGROUP_OS_SERVICES

line#: 5194...	fnSYSCTL_FAIL
line#: 2909...	fnSYSCTL_FAIL
line#: 2910...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSCTL_FAIL fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2912...	fnBANNER "SYSTEMCTL UNIT FAILURES"
line#: 211...	fnBANNER "SYSTEMCTL UNIT FAILURES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSYSCTL_FAIL fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSYSCTL_FAIL

line#: 2913...	systemctl list-units --failed --all
line#: 2913...	grep -v "list-unit-files"
line#: 2914...	echo
line#: 2909...	echo
leave: fnSYSCTL_FAIL -> back to fnGROUP_OS_SERVICES

line#: 5195...	fnSYSCTL_LIST
line#: 2922...	fnSYSCTL_LIST
line#: 2923...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSYSCTL_LIST fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2925...	fnBANNER "SYSTEMCTL LIST-UNIT-FILES"
line#: 211...	fnBANNER "SYSTEMCTL LIST-UNIT-FILES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSYSCTL_LIST fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSYSCTL_LIST

line#: 2927...	systemctl list-unit-files
line#: 2927...	tee /dev/null
line#: 2928...	echo
line#: 2922...	echo
leave: fnSYSCTL_LIST -> back to fnGROUP_OS_SERVICES

line#: 5196...	fnRCLOCAL
line#: 3123...	fnRCLOCAL
line#: 3124...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRCLOCAL fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3126...	[[ -f /etc/rc.local ]]
line#: 3128...	fnBANNER "CONTENTS OF RC.LOCAL"
line#: 211...	fnBANNER "CONTENTS OF RC.LOCAL"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRCLOCAL fnGROUP_OS_SERVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRCLOCAL

line#: 3129...	grep -E -v "^$|^#" < /etc/rc.local 2> /dev/null
line#: 3130...	echo
line#: 3123...	echo
leave: fnRCLOCAL -> back to fnGROUP_OS_SERVICES

line#: 5182...	echo
leave: fnGROUP_OS_SERVICES -> back to fnACTIONS

line#: 5480...	fnGROUP_HW_BUSSES
line#: 5204...	fnGROUP_HW_BUSSES
line#: 5205...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5207...	echo ' __ __ _____  __        ___     '
line#: 5208...	echo '(_ |_ /   | |/  \|\ |     /     Menu Option 7'
line#: 5209...	echo '__)|__\__ | |\__/| \|    /      HARDWARE BUSSES'
line#: 5210...	echo
line#: 5211...	SECTION="7"
line#: 5212...	fn1W
line#: 1923...	fn1W
line#: 1924...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fn1W fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1926...	local DRIVER=""
line#: 1928...	[[ -d /sys/bus/w1/devices ]]
line#: 1923...	[[ -d /sys/bus/w1/devices ]]
leave: fn1W -> back to fnGROUP_HW_BUSSES

line#: 5213...	fnSPI
line#: 1951...	fnSPI
line#: 1952...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSPI fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1954...	local DRIVER=""
line#: 1956...	[[ "$(lsmod | grep spi)" != "" ]]
line#: 1956...	lsmod
line#: 1956...	grep spi
line#: 1958...	fnBANNER "SPI (SERIAL PERIPHERAL INTERFACE) DRIVERS"
line#: 211...	fnBANNER "SPI (SERIAL PERIPHERAL INTERFACE) DRIVERS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSPI fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSPI

line#: 1959...	echo " Loaded Modules..."
line#: 1960...	lsmod
line#: 1960...	grep spi
line#: 1961...	echo
line#: 1962...	echo " Discovered SPI Drivers..."
line#: 1963...	find /sys/bus/spi/drivers -type d
line#: 1963...	grep -v "^.$"
line#: 1963...	grep -v "/drivers$"
line#: 1963...	read -r DRIVER
line#: 1965...	basename "${DRIVER}"
line#: 1963...	read -r DRIVER
line#: 1965...	basename "${DRIVER}"
line#: 1963...	read -r DRIVER
line#: 1967...	echo
line#: 1951...	echo
leave: fnSPI -> back to fnGROUP_HW_BUSSES

line#: 5214...	fnI2S
line#: 1976...	fnI2S
line#: 1977...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnI2S fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1979...	local DRIVER=""
line#: 1981...	[[ "$(lsmod | grep i2s)" != "" ]]
line#: 1981...	lsmod
line#: 1981...	grep i2s
line#: 1983...	fnBANNER "I2S (INTER-IC SOUND) DRIVERS"
line#: 211...	fnBANNER "I2S (INTER-IC SOUND) DRIVERS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnI2S fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnI2S

line#: 1984...	echo " Loaded Modules..."
line#: 1985...	lsmod
line#: 1985...	grep i2s
line#: 1986...	echo
line#: 1987...	echo " Discovered I2S Drivers..."
line#: 1988...	find /sys/bus/platform/drivers/*i2s -maxdepth 0
line#: 1988...	read -r DRIVER
line#: 1990...	basename "${DRIVER}"
line#: 1988...	read -r DRIVER
line#: 1992...	echo
line#: 1976...	echo
leave: fnI2S -> back to fnGROUP_HW_BUSSES

line#: 5215...	fnI2C
line#: 2001...	fnI2C
line#: 2002...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnI2C fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2004...	local DRIVER=""
line#: 2005...	local BUS=""
line#: 2006...	local NUM=""
line#: 2008...	[[ "$(lsmod | grep i2c)" != "" ]]
line#: 2008...	lsmod
line#: 2008...	grep i2c
line#: 2010...	fnBANNER "I2C (INTER-IC COMMUNICATION) DRIVERS"
line#: 211...	fnBANNER "I2C (INTER-IC COMMUNICATION) DRIVERS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnI2C fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnI2C

line#: 2011...	echo " Loaded Modules..."
line#: 2012...	lsmod
line#: 2012...	grep i2c
line#: 2013...	echo
line#: 2014...	echo " Discovered I2C Drivers..."
line#: 2015...	find /sys/bus/i2c/drivers -type d
line#: 2015...	grep -E -v "^.$|/drivers$|/dummy$|/stmpe-i2c$"
line#: 2015...	read -r DRIVER
line#: 2017...	basename "${DRIVER}"
line#: 2015...	read -r DRIVER
line#: 2019...	echo
line#: 2023...	[[ "$(grep "^dtparam=i2c_arm=on" /boot/config.txt 2>/dev/null)" != "" ]]
line#: 2023...	grep "^dtparam=i2c_arm=on" /boot/config.txt 2> /dev/null
line#: 2025...	fnBANNER "I2CDETECT"
line#: 211...	fnBANNER "I2CDETECT"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnI2C fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnI2C

line#: 2026...	i2cdetect -l 2>&1
line#: 2026...	sort
line#: 2027...	echo
line#: 2028...	i2cdetect -l 2>&1
line#: 2028...	sort
line#: 2028...	awk '{ print $1 }'
line#: 2028...	cut -f2 -d'-'
line#: 2028...	read -r BUS
line#: 2030...	echo " I2C BUS: ${BUS}"
line#: 2031...	i2cdetect -y "${BUS}" 2>&1
line#: 2032...	echo
line#: 2028...	read -r BUS
line#: 2036...	[[ "$(grep i2c /boot/config.txt 2>/dev/null | grep -v "^#")" != "" ]]
line#: 2036...	grep i2c /boot/config.txt 2> /dev/null
line#: 2036...	grep -v "^#"
line#: 2038...	fnSUB_BANNER "I2C-related entries in config.txt"
line#: 224...	fnSUB_BANNER "I2C-related entries in config.txt"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnI2C fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnI2C

line#: 2039...	grep i2c /boot/config.txt 2> /dev/null
line#: 2039...	grep -v "^#"
line#: 2040...	echo
line#: 2043...	i2cdetect -l
line#: 2043...	awk '{ print $1 }'
line#: 2043...	cut -f2 -d'-'
line#: 2043...	sort -n
line#: 2043...	read -r NUM
line#: 2045...	echo "-------------------"
line#: 2046...	dtoverlay -h i2c"${NUM}"
line#: 2046...	grep -v "^$"
line#: 2043...	read -r NUM
line#: 2048...	echo
line#: 2050...	ls -l /dev/i2c*
line#: 2051...	echo
line#: 2001...	echo
leave: fnI2C -> back to fnGROUP_HW_BUSSES

line#: 5216...	fnWIRINGPI
line#: 3477...	fnWIRINGPI
line#: 3478...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnWIRINGPI fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3485...	type -path gpio > /dev/null 2>&1
line#: 3488...	[[ "${MY_REVISION}" = "d03114" ]]
line#: 3488...	[[ "${MY_MODEL_NAME}" = "400" ]]
line#: 3488...	[[ "${MY_MODEL_NAME}" = "CM4" ]]
line#: 3494...	[[ "${MY_MODEL_NAME}" = "4B" ]]
line#: 3494...	[[ "${WIRINGPI_VERS}" != "2.52" ]]
line#: 3499...	fnBANNER "GPIO PIN STATUS via WIRINGPI (***)"
line#: 211...	fnBANNER "GPIO PIN STATUS via WIRINGPI (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnWIRINGPI fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnWIRINGPI

line#: 3500...	gpio readall
line#: 3501...	echo
line#: 3477...	echo
leave: fnWIRINGPI -> back to fnGROUP_HW_BUSSES

line#: 5217...	fnPIGPIOD
line#: 3510...	fnPIGPIOD
line#: 3511...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnPIGPIOD fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3513...	local PY3_SCRIPT=""
line#: 3521...	[[ -n "$(pgrep pigpiod)" ]]
line#: 3521...	pgrep pigpiod
line#: 3523...	fnBANNER "GPIO PIN STATUS via PIGPIOD (***)"
line#: 211...	fnBANNER "GPIO PIN STATUS via PIGPIOD (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnPIGPIOD fnGROUP_HW_BUSSES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnPIGPIOD

line#: 3584...	PY3_SCRIPT=$(cat <<'EOF'
"""
Read all GPIO
"""
import sys, os, time
import pigpio

MODES = ["IN", "OUT", "ALT5", "ALT4", "ALT0", "ALT1", "ALT2", "ALT3"]
HEADER = ('3.3v', '5v', 2, '5v', 3, 'GND', 4, 14, 'GND', 15, 17, 18, 27, 'GND', 22, 23, '3.3v', 24, 10, 'GND', 9, 25, 11, 8, 'GND', 7, 0, 1, 5, 'GND', 6, 12, 13, 'GND', 19, 16, 26, 20, 'GND', 21)
GPIOPINS = 40

FUNCTION = {
'Pull': ('High', 'High', 'High', 'High', 'High', 'High', 'High', 'High', 'High', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low'),
'ALT0': ('SDA0', 'SCL0', 'SDA1', 'SCL1', 'GPCLK0', 'GPCLK1', 'GPCLK2', 'SPI0_CE1_N', 'SPI0_CE0_N', 'SPI0_MISO', 'SPI0_MOSI', 'SPI0_SCLK', 'PWM0', 'PWM1', 'TXD0', 'RXD0', 'FL0', 'FL1', 'PCM_CLK', 'PCM_FS', 'PCM_DIN', 'PCM_DOUT', 'SD0_CLK', 'SD0_XMD', 'SD0_DATO', 'SD0_DAT1', 'SD0_DAT2', 'SD0_DAT3'),
'ALT1': ('SA5', 'SA4', 'SA3', 'SA2', 'SA1', 'SAO', 'SOE_N', 'SWE_N', 'SDO', 'SD1', 'SD2', 'SD3', 'SD4', 'SD5', 'SD6', 'SD7', 'SD8', 'SD9', 'SD10', 'SD11', 'SD12', 'SD13', 'SD14', 'SD15', 'SD16', 'SD17', 'TE0', 'TE1'),
'ALT2': ('PCLK', 'DE', 'LCD_VSYNC', 'LCD_HSYNC', 'DPI_D0', 'DPI_D1', 'DPI_D2', 'DPI_D3', 'DPI_D4', 'DPI_D5', 'DPI_D6', 'DPI_D7', 'DPI_D8', 'DPI_D9', 'DPI_D10', 'DPI_D11', 'DPI_D12', 'DPI_D13', 'DPI_D14', 'DPI_D15', 'DPI_D16', 'DPI_D17', 'DPI_D18', 'DPI_D19', 'DPI_D20', 'DPI_D21', 'DPI_D22', 'DPI_D23'),
'ALT3': ('SPI3_CE0_N', 'SPI3_MISO', 'SPI3_MOSI', 'SPI3_SCLK', 'SPI4_CE0_N', 'SPI4_MISO', 'SPI4_MOSI', 'SPI4_SCLK', '_', '_', '_', '_', 'SPI5_CE0_N', 'SPI5_MISO', 'SPI5_MOSI', 'SPI5_SCLK', 'CTS0', 'RTS0', 'SPI6_CE0_N', 'SPI6_MISO', 'SPI6_MOSI', 'SPI6_SCLK', 'SD1_CLK', 'SD1_CMD', 'SD1_DAT0', 'SD1_DAT1', 'SD1_DAT2', 'SD1_DAT3'),
'ALT4': ('TXD2', 'RXD2', 'CTS2', 'RTS2', 'TXD3', 'RXD3', 'CTS3', 'RTS3', 'TXD4', 'RXD4', 'CTS4', 'RTS4', 'TXD5', 'RXD5', 'CTS5', 'RTS5', 'SPI1_CE2_N', 'SPI1_CE1_N', 'SPI1_CE0_N', 'SPI1_MISO', 'SPIl_MOSI', 'SPI1_SCLK', 'ARM_TRST', 'ARM_RTCK', 'ARM_TDO', 'ARM_TCK', 'ARM_TDI', 'ARM_TMS'),
'ALT5': ('SDA6', 'SCL6', 'SDA3', 'SCL3', 'SDA3', 'SCL3', 'SDA4', 'SCL4', 'SDA4', 'SCL4', 'SDA5', 'SCL5', 'SDA5', 'SCL5', 'TXD1', 'RXD1', 'CTS1', 'RTS1', 'PWM0', 'PWM1', 'GPCLK0', 'GPCLK1', 'SDA6', 'SCL6', 'SPI3_CE1_N', 'SPI4_CE1_N', 'SPI5_CE1_N', 'SPI6_CE1_N')
}

def pin_state(g):
    mode = pi.get_mode(g)
    if(mode<2):
        name = 'GPIO{}'.format(g)
    else:
        name = FUNCTION[MODES[mode]][g]
    return name, MODES[mode], pi.read(g)

if len(sys.argv) > 1:
    pi = pigpio.pi(sys.argv[1])
else:
    pi = pigpio.pi()

if not pi.connected:
    sys.exit(1)
rev = pi.get_hardware_revision()
if rev < 16 :
    GPIOPINS = 26

print('+-----+------------+------+---+----++----+---+------+-----------+-----+')
print('| BCM |    Name    | Mode | V |  Board   | V | Mode | Name      | BCM |')
print('+-----+------------+------+---+----++----+---+------+-----------+-----+')
for h in range(1, GPIOPINS, 2):
# odd pin
    hh = HEADER[h-1]
    if(type(hh)==type(1)):
        print('|{0:4} | {1[0]:<10} | {1[1]:<4} | {1[2]} |{2:3} '.format(hh, pin_state(hh), h), end='|| ')
    else:
        print('|     |  {:18}   | {:2}'.format(hh, h), end=' || ')
# even pin
    hh = HEADER[h]
    if(type(hh)==type(1)):
        print('{0:2} | {1[2]:<2}| {1[1]:<5}| {1[0]:<10}|{2:4} |'.format(h+1, pin_state(hh), hh))
    else:
        print('{:2} |             {:9}|     |'.format(h+1, hh))
print('+-----+------------+------+---+----++----+---+------+-----------+-----+')
print('| BCM |    Name    | Mode | V |  Board   | V | Mode | Name      | BCM |')
print('+-----+------------+------+---+----++----+---+------+-----------+-----+')
EOF
    )
line#: 3584...	cat <<'EOF'
"""
Read all GPIO
"""
import sys, os, time
import pigpio

MODES = ["IN", "OUT", "ALT5", "ALT4", "ALT0", "ALT1", "ALT2", "ALT3"]
HEADER = ('3.3v', '5v', 2, '5v', 3, 'GND', 4, 14, 'GND', 15, 17, 18, 27, 'GND', 22, 23, '3.3v', 24, 10, 'GND', 9, 25, 11, 8, 'GND', 7, 0, 1, 5, 'GND', 6, 12, 13, 'GND', 19, 16, 26, 20, 'GND', 21)
GPIOPINS = 40

FUNCTION = {
'Pull': ('High', 'High', 'High', 'High', 'High', 'High', 'High', 'High', 'High', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low', 'Low'),
'ALT0': ('SDA0', 'SCL0', 'SDA1', 'SCL1', 'GPCLK0', 'GPCLK1', 'GPCLK2', 'SPI0_CE1_N', 'SPI0_CE0_N', 'SPI0_MISO', 'SPI0_MOSI', 'SPI0_SCLK', 'PWM0', 'PWM1', 'TXD0', 'RXD0', 'FL0', 'FL1', 'PCM_CLK', 'PCM_FS', 'PCM_DIN', 'PCM_DOUT', 'SD0_CLK', 'SD0_XMD', 'SD0_DATO', 'SD0_DAT1', 'SD0_DAT2', 'SD0_DAT3'),
'ALT1': ('SA5', 'SA4', 'SA3', 'SA2', 'SA1', 'SAO', 'SOE_N', 'SWE_N', 'SDO', 'SD1', 'SD2', 'SD3', 'SD4', 'SD5', 'SD6', 'SD7', 'SD8', 'SD9', 'SD10', 'SD11', 'SD12', 'SD13', 'SD14', 'SD15', 'SD16', 'SD17', 'TE0', 'TE1'),
'ALT2': ('PCLK', 'DE', 'LCD_VSYNC', 'LCD_HSYNC', 'DPI_D0', 'DPI_D1', 'DPI_D2', 'DPI_D3', 'DPI_D4', 'DPI_D5', 'DPI_D6', 'DPI_D7', 'DPI_D8', 'DPI_D9', 'DPI_D10', 'DPI_D11', 'DPI_D12', 'DPI_D13', 'DPI_D14', 'DPI_D15', 'DPI_D16', 'DPI_D17', 'DPI_D18', 'DPI_D19', 'DPI_D20', 'DPI_D21', 'DPI_D22', 'DPI_D23'),
'ALT3': ('SPI3_CE0_N', 'SPI3_MISO', 'SPI3_MOSI', 'SPI3_SCLK', 'SPI4_CE0_N', 'SPI4_MISO', 'SPI4_MOSI', 'SPI4_SCLK', '_', '_', '_', '_', 'SPI5_CE0_N', 'SPI5_MISO', 'SPI5_MOSI', 'SPI5_SCLK', 'CTS0', 'RTS0', 'SPI6_CE0_N', 'SPI6_MISO', 'SPI6_MOSI', 'SPI6_SCLK', 'SD1_CLK', 'SD1_CMD', 'SD1_DAT0', 'SD1_DAT1', 'SD1_DAT2', 'SD1_DAT3'),
'ALT4': ('TXD2', 'RXD2', 'CTS2', 'RTS2', 'TXD3', 'RXD3', 'CTS3', 'RTS3', 'TXD4', 'RXD4', 'CTS4', 'RTS4', 'TXD5', 'RXD5', 'CTS5', 'RTS5', 'SPI1_CE2_N', 'SPI1_CE1_N', 'SPI1_CE0_N', 'SPI1_MISO', 'SPIl_MOSI', 'SPI1_SCLK', 'ARM_TRST', 'ARM_RTCK', 'ARM_TDO', 'ARM_TCK', 'ARM_TDI', 'ARM_TMS'),
'ALT5': ('SDA6', 'SCL6', 'SDA3', 'SCL3', 'SDA3', 'SCL3', 'SDA4', 'SCL4', 'SDA4', 'SCL4', 'SDA5', 'SCL5', 'SDA5', 'SCL5', 'TXD1', 'RXD1', 'CTS1', 'RTS1', 'PWM0', 'PWM1', 'GPCLK0', 'GPCLK1', 'SDA6', 'SCL6', 'SPI3_CE1_N', 'SPI4_CE1_N', 'SPI5_CE1_N', 'SPI6_CE1_N')
}

def pin_state(g):
    mode = pi.get_mode(g)
    if(mode<2):
        name = 'GPIO{}'.format(g)
    else:
        name = FUNCTION[MODES[mode]][g]
    return name, MODES[mode], pi.read(g)

if len(sys.argv) > 1:
    pi = pigpio.pi(sys.argv[1])
else:
    pi = pigpio.pi()

if not pi.connected:
    sys.exit(1)
rev = pi.get_hardware_revision()
if rev < 16 :
    GPIOPINS = 26

print('+-----+------------+------+---+----++----+---+------+-----------+-----+')
print('| BCM |    Name    | Mode | V |  Board   | V | Mode | Name      | BCM |')
print('+-----+------------+------+---+----++----+---+------+-----------+-----+')
for h in range(1, GPIOPINS, 2):
# odd pin
    hh = HEADER[h-1]
    if(type(hh)==type(1)):
        print('|{0:4} | {1[0]:<10} | {1[1]:<4} | {1[2]} |{2:3} '.format(hh, pin_state(hh), h), end='|| ')
    else:
        print('|     |  {:18}   | {:2}'.format(hh, h), end=' || ')
# even pin
    hh = HEADER[h]
    if(type(hh)==type(1)):
        print('{0:2} | {1[2]:<2}| {1[1]:<5}| {1[0]:<10}|{2:4} |'.format(h+1, pin_state(hh), hh))
    else:
        print('{:2} |             {:9}|     |'.format(h+1, hh))
print('+-----+------------+------+---+----++----+---+------+-----------+-----+')
print('| BCM |    Name    | Mode | V |  Board   | V | Mode | Name      | BCM |')
print('+-----+------------+------+---+----++----+---+------+-----------+-----+')
EOF

line#: 3585...	python3 -c "${PY3_SCRIPT}"
line#: 3586...	echo
line#: 3510...	echo
leave: fnPIGPIOD -> back to fnGROUP_HW_BUSSES

line#: 5204...	echo
leave: fnGROUP_HW_BUSSES -> back to fnACTIONS

line#: 5481...	fnGROUP_SERIAL_BT
line#: 5225...	fnGROUP_SERIAL_BT
line#: 5226...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5228...	echo ' __ __ _____  __         __     '
line#: 5229...	echo '(_ |_ /   | |/  \|\ |   (__)    Menu Option 8'
line#: 5230...	echo '__)|__\__ | |\__/| \|   (__)    SERIAL & BLUETOOTH'
line#: 5231...	echo
line#: 5232...	SECTION="8"
line#: 5233...	fnACM
line#: 2595...	fnACM
line#: 2596...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnACM fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2598...	[[ -c /dev/ttyACM0 ]]
line#: 2600...	[[ -n "${LSHW_COMMUNICATION}" ]]
line#: 2602...	fnBANNER "ACM COMMUNICATION DEVICES"
line#: 211...	fnBANNER "ACM COMMUNICATION DEVICES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnACM fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnACM

line#: 2603...	${SUDO} lshw -class communication 2> /dev/null
line#: 2604...	echo
line#: 2595...	echo
leave: fnACM -> back to fnGROUP_SERIAL_BT

line#: 5234...	fnSERIAL
line#: 2614...	fnSERIAL
line#: 2615...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSERIAL fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2617...	local SERIAL_DEV=""
line#: 2618...	local NUM=""
line#: 2619...	local UART_TYPE=""
line#: 2620...	local DEVICE=""
line#: 2622...	fnBANNER "UARTS AND USB SERIAL PORTS"
line#: 211...	fnBANNER "UARTS AND USB SERIAL PORTS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSERIAL fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSERIAL

line#: 2659...	ls -l /dev/ttyAMA? /dev/serial? /dev/ttyS? /dev/ttyACM? 2> /dev/null
line#: 2660...	echo
line#: 2662...	fnSUB_BANNER "On-board (non-USB) serial ports"
line#: 224...	fnSUB_BANNER "On-board (non-USB) serial ports"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSERIAL fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSERIAL

line#: 2663...	dmesg
line#: 2663...	grep MMIO
line#: 2663...	awk '{ print $4 }'
line#: 2663...	read -r MMIO
line#: 2665...	SERIAL_DEV="$(dmesg | grep "${MMIO}" | cut -f2 -d':' | cut -f2 -d')' | sed 's/is a//')"
line#: 2665...	dmesg
line#: 2665...	grep "${MMIO}"
line#: 2665...	cut -f2 -d':'
line#: 2665...	cut -f2 -d')'
line#: 2665...	sed 's/is a//'
line#: 2666...	printf '%8s: %s
' "${MMIO}" "${SERIAL_DEV}"
line#: 2663...	read -r MMIO
line#: 2665...	SERIAL_DEV="$(dmesg | grep "${MMIO}" | cut -f2 -d':' | cut -f2 -d')' | sed 's/is a//')"
line#: 2665...	dmesg
line#: 2665...	grep "${MMIO}"
line#: 2665...	cut -f2 -d':'
line#: 2665...	cut -f2 -d')'
line#: 2665...	sed 's/is a//'
line#: 2666...	printf '%8s: %s
' "${MMIO}" "${SERIAL_DEV}"
line#: 2663...	read -r MMIO
line#: 2668...	echo
line#: 2670...	[[ "$(grep uart /boot/config.txt 2>/dev/null | grep -v "^#")" != "" ]]
line#: 2670...	grep uart /boot/config.txt 2> /dev/null
line#: 2670...	grep -v "^#"
line#: 2672...	fnSUB_BANNER "UART-related entries in config.txt"
line#: 224...	fnSUB_BANNER "UART-related entries in config.txt"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSERIAL fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSERIAL

line#: 2673...	grep uart /boot/config.txt 2> /dev/null
line#: 2673...	grep -v "^#"
line#: 2674...	echo
line#: 2677...	grep "^dtoverlay=uart" /boot/config.txt 2> /dev/null
line#: 2677...	cut -f2 -d'='
line#: 2677...	cut -f1 -d','
line#: 2677...	cut -c 5
line#: 2677...	read -r NUM
line#: 2686...	for NUM in 0 1 2 3 4 5
line#: 2688...	[[ -c /dev/ttyACM${NUM} ]]
line#: 2690...	UART_TYPE=$(dmesg | grep ttyACM"${NUM}" | cut -f4 -d':' | cut -c2-)
line#: 2690...	dmesg
line#: 2690...	grep ttyACM"${NUM}"
line#: 2690...	cut -f4 -d':'
line#: 2690...	cut -c2-
line#: 2691...	DEVICE=": $(systemctl list-units --all | grep dev-ttyACM"${NUM}".device | sed 's/plugged/plugged:/' | cut -f2- -d':' | sed 's/   //')"
line#: 2691...	systemctl list-units --all
line#: 2691...	grep dev-ttyACM"${NUM}".device
line#: 2691...	sed 's/plugged/plugged:/'
line#: 2691...	cut -f2- -d':'
line#: 2691...	sed 's/   //'
line#: 2692...	fnSUB_BANNER "/dev/ACM${NUM}... ${UART_TYPE}${DEVICE}"
line#: 224...	fnSUB_BANNER "/dev/ACM${NUM}... ${UART_TYPE}${DEVICE}"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSERIAL fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSERIAL

line#: 2693...	stty -a -F /dev/ttyACM"${NUM}"
line#: 2694...	echo
line#: 2686...	for NUM in 0 1 2 3 4 5
line#: 2688...	[[ -c /dev/ttyACM${NUM} ]]
line#: 2686...	for NUM in 0 1 2 3 4 5
line#: 2688...	[[ -c /dev/ttyACM${NUM} ]]
line#: 2686...	for NUM in 0 1 2 3 4 5
line#: 2688...	[[ -c /dev/ttyACM${NUM} ]]
line#: 2686...	for NUM in 0 1 2 3 4 5
line#: 2688...	[[ -c /dev/ttyACM${NUM} ]]
line#: 2686...	for NUM in 0 1 2 3 4 5
line#: 2688...	[[ -c /dev/ttyACM${NUM} ]]
line#: 2697...	for NUM in 0 1 2 3 4 5
line#: 2699...	[[ -c /dev/ttyAMA${NUM} ]]
line#: 2701...	fnSUB_BANNER "/dev/ttyAMA${NUM}..."
line#: 224...	fnSUB_BANNER "/dev/ttyAMA${NUM}..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSERIAL fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSERIAL

line#: 2702...	stty -a -F /dev/ttyAMA"${NUM}"
line#: 2703...	echo
line#: 2697...	for NUM in 0 1 2 3 4 5
line#: 2699...	[[ -c /dev/ttyAMA${NUM} ]]
line#: 2697...	for NUM in 0 1 2 3 4 5
line#: 2699...	[[ -c /dev/ttyAMA${NUM} ]]
line#: 2697...	for NUM in 0 1 2 3 4 5
line#: 2699...	[[ -c /dev/ttyAMA${NUM} ]]
line#: 2697...	for NUM in 0 1 2 3 4 5
line#: 2699...	[[ -c /dev/ttyAMA${NUM} ]]
line#: 2697...	for NUM in 0 1 2 3 4 5
line#: 2699...	[[ -c /dev/ttyAMA${NUM} ]]
line#: 2706...	for NUM in 0 1 2 3 4 5
line#: 2708...	[[ -c /dev/ttyS${NUM} ]]
line#: 2710...	fnSUB_BANNER "/dev/ttyS${NUM}..."
line#: 224...	fnSUB_BANNER "/dev/ttyS${NUM}..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSERIAL fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSERIAL

line#: 2711...	stty -a -F /dev/ttyS"${NUM}"
line#: 2712...	echo
line#: 2706...	for NUM in 0 1 2 3 4 5
line#: 2708...	[[ -c /dev/ttyS${NUM} ]]
line#: 2706...	for NUM in 0 1 2 3 4 5
line#: 2708...	[[ -c /dev/ttyS${NUM} ]]
line#: 2706...	for NUM in 0 1 2 3 4 5
line#: 2708...	[[ -c /dev/ttyS${NUM} ]]
line#: 2706...	for NUM in 0 1 2 3 4 5
line#: 2708...	[[ -c /dev/ttyS${NUM} ]]
line#: 2706...	for NUM in 0 1 2 3 4 5
line#: 2708...	[[ -c /dev/ttyS${NUM} ]]
line#: 2614...	[[ -c /dev/ttyS${NUM} ]]
leave: fnSERIAL -> back to fnGROUP_SERIAL_BT

line#: 5235...	fnBT
line#: 2722...	fnBT
line#: 2723...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBT fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2725...	local PS_BT=""
line#: 2726...	local BTMAC_OUT=""
line#: 2727...	local BTDEFAULT=""
line#: 2728...	local BTMAC=""
line#: 2729...	local BTSHOW_OUT=""
line#: 2730...	local BTPAIRED_OUT=""
line#: 2734...	PS_BT=$(pgrep bluetoothd)
line#: 2734...	pgrep bluetoothd
line#: 2735...	[[ -n "${PS_BT}" ]]
line#: 2738...	fnBANNER "BLUETOOTH CONTROLLERS"
line#: 211...	fnBANNER "BLUETOOTH CONTROLLERS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnBT fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnBT

line#: 2739...	hciconfig
line#: 2740...	BTMAC_OUT="$(echo list | ${SUDO} bluetoothctl 2>/dev/null)"
line#: 2740...	echo list
line#: 2740...	${SUDO} bluetoothctl 2> /dev/null
line#: 2741...	BTDEFAULT=$(echo "${BTMAC_OUT}" | grep ^Controller | grep "default" | awk '{ print $2 }')
line#: 2741...	echo "${BTMAC_OUT}"
line#: 2741...	grep ^Controller
line#: 2741...	grep "default"
line#: 2741...	awk '{ print $2 }'
line#: 2742...	BTMAC=""
line#: 2743...	echo "${BTMAC_OUT}"
line#: 2743...	grep ^Controller
line#: 2743...	awk '{ print $2 }'
line#: 2743...	read -r BTMAC
line#: 2745...	[[ "${BTDEFAULT}" = "${BTMAC}" ]]
line#: 2747...	echo "Default BT Controller..."
line#: 2751...	BTSHOW_OUT="$(echo show "${BTMAC}" | ${SUDO} bluetoothctl 2>/dev/null)"
line#: 2751...	echo show "${BTMAC}"
line#: 2751...	${SUDO} bluetoothctl 2> /dev/null
line#: 2752...	echo "${BTSHOW_OUT}"
line#: 2752...	grep -v -F "["
line#: 2752...	grep -v "^$"
line#: 2752...	grep -v "Agent registered"
line#: 2752...	grep -v "Device registered not available"
line#: 2753...	echo
line#: 2743...	read -r BTMAC
line#: 2756...	fnBANNER "BLUETOOTH DEVICES (paired w/ default controller)"
line#: 211...	fnBANNER "BLUETOOTH DEVICES (paired w/ default controller)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnBT fnGROUP_SERIAL_BT fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnBT

line#: 2757...	BTPAIRED_OUT="$(echo paired-devices | ${SUDO} bluetoothctl 2>/dev/null)"
line#: 2757...	echo paired-devices
line#: 2757...	${SUDO} bluetoothctl 2> /dev/null
line#: 2758...	[[ -n "${BTPAIRED_OUT}" ]]
line#: 2760...	echo "${BTPAIRED_OUT}"
line#: 2760...	grep -v -F "["
line#: 2760...	awk '{ print $2 }'
line#: 2760...	read -r BTMAC
line#: 2762...	echo "info ${BTMAC}"
line#: 2763...	${SUDO} bluetoothctl 2> /dev/null
line#: 2764...	grep -v -F "["
line#: 2765...	grep -v "^$"
line#: 2766...	grep -v "Agent registered"
line#: 2767...	grep -v "Device registered not available"
line#: 2768...	:
line#: 2760...	read -r BTMAC
line#: 2770...	echo
line#: 2722...	echo
leave: fnBT -> back to fnGROUP_SERIAL_BT

line#: 5225...	echo
leave: fnGROUP_SERIAL_BT -> back to fnACTIONS

line#: 5482...	fnGROUP_DEVICES
line#: 5243...	fnGROUP_DEVICES
line#: 5244...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5246...	echo ' __ __ _____  __         __     '
line#: 5247...	echo '(_ |_ /   | |/  \|\ |   (__\    Menu Option 9'
line#: 5248...	echo '__)|__\__ | |\__/| \|    __/    USB & OTHER DEVICES'
line#: 5249...	echo
line#: 5250...	SECTION="9"
line#: 5251...	fnUSB_DEV_INFO
line#: 2146...	fnUSB_DEV_INFO
line#: 2147...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnUSB_DEV_INFO fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2149...	fnBANNER "USB AND OTHER DEVICE INFO"
line#: 211...	fnBANNER "USB AND OTHER DEVICE INFO"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnUSB_DEV_INFO fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnUSB_DEV_INFO

line#: 2150...	lsusb
line#: 2150...	sort
line#: 2151...	echo
line#: 2152...	cat /tmp/.lshw_businfo."${PPID}" 2> /dev/null
line#: 2153...	echo
line#: 2146...	echo
leave: fnUSB_DEV_INFO -> back to fnGROUP_DEVICES

line#: 5252...	fnLSHW_INPUT
line#: 2161...	fnLSHW_INPUT
line#: 2162...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLSHW_INPUT fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2164...	[[ -n "${LSHW_INPUT}" ]]
line#: 2161...	[[ -n "${LSHW_INPUT}" ]]
leave: fnLSHW_INPUT -> back to fnGROUP_DEVICES

line#: 5253...	fnLSHW_GENERIC
line#: 2177...	fnLSHW_GENERIC
line#: 2178...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLSHW_GENERIC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2180...	[[ -n "${LSHW_GENERIC}" ]]
line#: 2177...	[[ -n "${LSHW_GENERIC}" ]]
leave: fnLSHW_GENERIC -> back to fnGROUP_DEVICES

line#: 5254...	fnRTL_SDR
line#: 2193...	fnRTL_SDR
line#: 2194...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRTL_SDR fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2204...	type -path rtl_eeprom > /dev/null 2>&1
line#: 2204...	type -path rtl_test > /dev/null 2>&1
line#: 2206...	[[ "$(lsmod | grep rtl2832)" != "" ]]
line#: 2206...	lsmod
line#: 2206...	grep rtl2832
line#: 2193...	[[ "$(lsmod | grep rtl2832)" != "" ]]
leave: fnRTL_SDR -> back to fnGROUP_DEVICES

line#: 5255...	fnRTC
line#: 2059...	fnRTC
line#: 2060...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRTC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2063...	[[ -c /dev/rtc0 ]]
line#: 2065...	fnBANNER "RTC (REALTIME CLOCK)"
line#: 211...	fnBANNER "RTC (REALTIME CLOCK)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRTC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRTC

line#: 2066...	dmesg
line#: 2066...	grep rtc
line#: 2066...	grep -v "Modules linked in:"
line#: 2066...	grep -v crtc
line#: 2067...	echo
line#: 2068...	lsmod
line#: 2068...	grep rtc
line#: 2069...	echo
line#: 2070...	ls -l /dev/rtc*
line#: 2071...	echo
line#: 2072...	echo "Hardware RTC says:"
line#: 2073...	${SUDO} hwclock
line#: 2074...	echo
line#: 2075...	echo "Operating System says:"
line#: 2076...	date
line#: 2077...	echo
line#: 2059...	echo
leave: fnRTC -> back to fnGROUP_DEVICES

line#: 5256...	fnHWRNG
line#: 2086...	fnHWRNG
line#: 2087...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnHWRNG fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2091...	[[ -c /dev/hwrng ]]
line#: 2091...	[[ -n "$(ps -ef | pgrep rngd)" ]]
line#: 2091...	ps -ef
line#: 2091...	pgrep rngd
line#: 2094...	type -path rngtest > /dev/null 2>&1
line#: 2096...	fnBANNER "HARDWARE RANDOM NUMBER GENERATOR (***)"
line#: 211...	fnBANNER "HARDWARE RANDOM NUMBER GENERATOR (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnHWRNG fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnHWRNG

line#: 2097...	${SUDO} cat /dev/hwrng 2> /dev/null
line#: 2097...	rngtest -c 1000 2>&1
line#: 2098...	echo
line#: 2086...	echo
leave: fnHWRNG -> back to fnGROUP_DEVICES

line#: 5257...	fnHWWD
line#: 2108...	fnHWWD
line#: 2109...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnHWWD fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2111...	local DIR=""
line#: 2115...	[[ "$(systemctl | grep watchdog.service)" != "" ]]
line#: 2115...	systemctl
line#: 2115...	grep watchdog.service
line#: 2117...	fnBANNER "BROADCOM WATCHDOG TIMER (***)"
line#: 211...	fnBANNER "BROADCOM WATCHDOG TIMER (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnHWWD fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnHWWD

line#: 2118...	dmesg
line#: 2118...	grep watchdog
line#: 2119...	echo
line#: 2120...	grep -E -v "^$|^#" < /etc/watchdog.conf 2> /dev/null
line#: 2121...	echo
line#: 2122...	DIR="$(awk '/^test-directory/ { print $3 }' /etc/watchdog.conf)"
line#: 2122...	awk '/^test-directory/ { print $3 }' /etc/watchdog.conf
line#: 2123...	[[ -n "${DIR}" ]]
line#: 2125...	echo "Contents of ${DIR}:"
line#: 2126...	ls -l "${DIR}"
line#: 2127...	echo
line#: 2129...	DIR="$(awk '/^log-dir/ { print $3 }' /etc/watchdog.conf)"
line#: 2129...	awk '/^log-dir/ { print $3 }' /etc/watchdog.conf
line#: 2130...	[[ -n "${DIR}" ]]
line#: 2132...	echo "Contents of ${DIR}:"
line#: 2133...	ls -l "${DIR}"
line#: 2134...	echo
line#: 2136...	systemctl status watchdog.service
line#: 2136...	tee /dev/null
line#: 2137...	echo
line#: 2108...	echo
leave: fnHWWD -> back to fnGROUP_DEVICES

line#: 5258...	fnLIRC
line#: 3166...	fnLIRC
line#: 3167...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLIRC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3169...	local LIRC=""
line#: 3170...	local SERVICE=""
line#: 3173...	[[ -n "$(find /dev/lirc* -print 2>/dev/null)" ]]
line#: 3173...	find /dev/lirc* -print 2> /dev/null
line#: 3175...	fnBANNER "LIRC - LINUX INFRA-RED COMMUNICATION DEVICES (***)"
line#: 211...	fnBANNER "LIRC - LINUX INFRA-RED COMMUNICATION DEVICES (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLIRC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLIRC

line#: 3176...	lsmod
line#: 3176...	grep "ir_"
line#: 3176...	sort
line#: 3177...	echo
line#: 3179...	fnSUB_BANNER "LIRC-related entries in config.txt"
line#: 224...	fnSUB_BANNER "LIRC-related entries in config.txt"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLIRC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLIRC

line#: 3180...	grep gpio-ir /boot/config.txt 2> /dev/null
line#: 3180...	grep -v "^#"
line#: 3181...	echo
line#: 3183...	fnSUB_BANNER "LIRC config files"
line#: 224...	fnSUB_BANNER "LIRC config files"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLIRC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLIRC

line#: 3184...	find /etc/lirc* -print
line#: 3184...	grep conf$
line#: 3185...	echo
line#: 3187...	fnSUB_BANNER "LIRC device nodes"
line#: 224...	fnSUB_BANNER "LIRC device nodes"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLIRC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLIRC

line#: 3188...	find /dev/lirc* -print
line#: 3188...	read -r LIRC
line#: 3190...	ls -l "${LIRC}"
line#: 3188...	read -r LIRC
line#: 3190...	ls -l "${LIRC}"
line#: 3188...	read -r LIRC
line#: 3192...	echo
line#: 3194...	fnSUB_BANNER "LIRC device tree overlays"
line#: 224...	fnSUB_BANNER "LIRC device tree overlays"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLIRC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLIRC

line#: 3195...	[[ -c /dev/lirc0 ]]
line#: 3197...	dtoverlay -h gpio-ir 2> /dev/null
line#: 3197...	grep -v "^$"
line#: 3198...	echo
line#: 3200...	[[ -c /dev/lirc1 ]]
line#: 3202...	dtoverlay -h gpio-ir-tx 2> /dev/null
line#: 3202...	grep -v "^$"
line#: 3203...	echo
line#: 3206...	fnSUB_BANNER "LIRC dmesg log entries"
line#: 224...	fnSUB_BANNER "LIRC dmesg log entries"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLIRC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLIRC

line#: 3207...	dmesg
line#: 3207...	grep lirc
line#: 3207...	cut -f2- -d"]"
line#: 3208...	echo
line#: 3210...	fnSUB_BANNER "LIRC service status entries"
line#: 224...	fnSUB_BANNER "LIRC service status entries"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLIRC fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLIRC

line#: 3211...	systemctl
line#: 3211...	grep lirc
line#: 3211...	awk '{ print $1 }'
line#: 3211...	for SERVICE in $(systemctl | grep lirc | awk '{ print $1 }')
line#: 3213...	systemctl status "${SERVICE}"
line#: 3214...	echo
line#: 3211...	for SERVICE in $(systemctl | grep lirc | awk '{ print $1 }')
line#: 3213...	systemctl status "${SERVICE}"
line#: 3214...	echo
line#: 3211...	for SERVICE in $(systemctl | grep lirc | awk '{ print $1 }')
line#: 3213...	systemctl status "${SERVICE}"
line#: 3214...	echo
line#: 3211...	for SERVICE in $(systemctl | grep lirc | awk '{ print $1 }')
line#: 3213...	systemctl status "${SERVICE}"
line#: 3214...	echo
line#: 3216...	echo
line#: 3166...	echo
leave: fnLIRC -> back to fnGROUP_DEVICES

line#: 5259...	fnPRINTER
line#: 3225...	fnPRINTER
line#: 3226...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnPRINTER fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3228...	local CUPS_RUNNING=""
line#: 3234...	type -path lpstat > /dev/null 2>&1
line#: 3236...	CUPS_RUNNING="$(lpstat -r 2>/dev/null)"
line#: 3236...	lpstat -r 2> /dev/null
line#: 3237...	[[ "${CUPS_RUNNING}" = "scheduler is running" ]]
line#: 3239...	fnBANNER "PRINTER STATUS {***)"
line#: 211...	fnBANNER "PRINTER STATUS {***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnPRINTER fnGROUP_DEVICES fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnPRINTER

line#: 3240...	lpstat -t
line#: 3241...	echo
line#: 3225...	echo
leave: fnPRINTER -> back to fnGROUP_DEVICES

line#: 5243...	echo
leave: fnGROUP_DEVICES -> back to fnACTIONS

line#: 5483...	fnGROUP_FS_STORAGE
line#: 5267...	fnGROUP_FS_STORAGE
line#: 5268...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5270...	echo ' __ __ _____  __            __  '
line#: 5271...	echo '(_ |_ /   | |/  \|\ |   /| /  \ Menu Option 10'
line#: 5272...	echo '__)|__\__ | |\__/| \|    | \__/ FILESYSTEMS & STORAGE'
line#: 5273...	echo
line#: 5274...	SECTION="10"
line#: 5275...	fnFSTAB
line#: 2482...	fnFSTAB
line#: 2483...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnFSTAB fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2485...	[[ -f /etc/fstab ]]
line#: 2487...	fnBANNER "FSTAB FILE"
line#: 211...	fnBANNER "FSTAB FILE"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnFSTAB fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnFSTAB

line#: 2488...	grep -E -v "^$|^#" < /etc/fstab 2> /dev/null
line#: 2489...	echo
line#: 2482...	echo
leave: fnFSTAB -> back to fnGROUP_FS_STORAGE

line#: 5276...	fnLSHW_STORAGE
line#: 2222...	fnLSHW_STORAGE
line#: 2223...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLSHW_STORAGE fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2225...	[[ -n "${LSHW_STORAGE}" ]]
line#: 2227...	fnBANNER "STORAGE DEVICES"
line#: 211...	fnBANNER "STORAGE DEVICES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLSHW_STORAGE fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLSHW_STORAGE

line#: 2228...	${SUDO} lshw -class storage 2> /dev/null
line#: 2229...	echo
line#: 2230...	${SUDO} lshw -short -class disk -class storage -class volume 2> /dev/null
line#: 2231...	echo
line#: 2222...	echo
leave: fnLSHW_STORAGE -> back to fnGROUP_FS_STORAGE

line#: 5277...	fnHDPARM
line#: 2460...	fnHDPARM
line#: 2461...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnHDPARM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2463...	local DEV=""
line#: 2466...	type -path hdparm > /dev/null 2>&1
line#: 2468...	stat /dev/sd?
line#: 2468...	grep "File:"
line#: 2468...	awk '{ print $NF }'
line#: 2468...	read -r DEV
line#: 2470...	fnBANNER "HDPARM ATA/SATA DEVICE PARAMETERS - ${DEV} (***)"
line#: 2470...	grep -v "^$"
line#: 211...	fnBANNER "HDPARM ATA/SATA DEVICE PARAMETERS - ${DEV} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnHDPARM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnHDPARM

line#: 2471...	${SUDO} hdparm -I --verbose "${DEV}" 2> /dev/null
line#: 2472...	echo
line#: 2468...	read -r DEV
line#: 2470...	fnBANNER "HDPARM ATA/SATA DEVICE PARAMETERS - ${DEV} (***)"
line#: 2470...	grep -v "^$"
line#: 211...	fnBANNER "HDPARM ATA/SATA DEVICE PARAMETERS - ${DEV} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnHDPARM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnHDPARM

line#: 2471...	${SUDO} hdparm -I --verbose "${DEV}" 2> /dev/null
line#: 2472...	echo
line#: 2468...	read -r DEV
line#: 2460...	awk '{ print $NF }'
leave: fnHDPARM -> back to fnGROUP_FS_STORAGE

line#: 5278...	fnSMART
line#: 2240...	fnSMART
line#: 2241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2243...	local DEV=""
line#: 2244...	local MOUNTPOINT=""
line#: 2245...	local NOATIME=""
line#: 2248...	type -path smartctl > /dev/null 2>&1
line#: 2250...	fnBANNER "USB ATA/SATA & SCSI/SAS STORAGE WITH SMART TECHNOLOGY (***)"
line#: 211...	fnBANNER "USB ATA/SATA & SCSI/SAS STORAGE WITH SMART TECHNOLOGY (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSMART

line#: 2251...	[[ "$(smartctl --scan -d sat | grep -v aborted)" != "" ]]
line#: 2251...	smartctl --scan -d sat
line#: 2251...	grep -v aborted
line#: 2253...	echo "Scanning Devices..."
line#: 2254...	smartctl --scan -d sat
line#: 2254...	grep -v aborted
line#: 2255...	echo
line#: 2256...	fnSUB_BANNER "Checking \"noatime\" mount option on ATA/SATA and SCSI/SAS filesystems"
line#: 224...	fnSUB_BANNER "Checking \"noatime\" mount option on ATA/SATA and SCSI/SAS filesystems"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSMART

line#: 2257...	echo "The \"noatime\" option disables updates to the access timestamp of an inode,"
line#: 2258...	echo "whenever a file is accessed (eg: when files are merely read.)  Disabling"
line#: 2259...	echo "these updates eliminates a huge number of writes to a device over time,"
line#: 2260...	echo "especially on filesystems that host the operating system itself.  This is"
line#: 2261...	echo "particularly important for SD & SSD devices, as excessive writes will shorten"
line#: 2262...	echo "the lifespan of the device.  Mechanical drives can also benefit, from the"
line#: 2263...	echo "ever-so-slight performance gain."
line#: 2264...	echo
line#: 2265...	echo "This check examines mounted filesystems ONLY."
line#: 2266...	echo
line#: 2267...	smartctl --scan -d sat
line#: 2267...	grep -v aborted
line#: 2267...	awk '{ print $1 }'
line#: 2267...	read -r DEV
line#: 2269...	lsblk --ascii "${DEV}" -o name,mountpoint
line#: 2269...	grep -v SWAP
line#: 2269...	grep -v MOUNTPOINT
line#: 2269...	grep "/"
line#: 2269...	awk '{ print $NF }'
line#: 2269...	sort -u
line#: 2269...	read -r MOUNTPOINT
line#: 2271...	NOATIME="$(grep -E -v "^#|^$" < /etc/fstab | awk '{ print $2 " " $4 }' | grep "^${MOUNTPOINT} " | grep "noatime")"
line#: 2271...	grep -E -v "^#|^$" < /etc/fstab
line#: 2271...	awk '{ print $2 " " $4 }'
line#: 2271...	grep "^${MOUNTPOINT} "
line#: 2271...	grep "noatime"
line#: 2272...	printf "%-16s" "${MOUNTPOINT}"
line#: 2273...	[[ -n "${NOATIME}" ]]
line#: 2275...	echo ": noatime is specified for this filesystem, in /etc/fstab"
line#: 2269...	read -r MOUNTPOINT
line#: 2271...	NOATIME="$(grep -E -v "^#|^$" < /etc/fstab | awk '{ print $2 " " $4 }' | grep "^${MOUNTPOINT} " | grep "noatime")"
line#: 2271...	grep -E -v "^#|^$" < /etc/fstab
line#: 2271...	awk '{ print $2 " " $4 }'
line#: 2271...	grep "^${MOUNTPOINT} "
line#: 2271...	grep "noatime"
line#: 2272...	printf "%-16s" "${MOUNTPOINT}"
line#: 2273...	[[ -n "${NOATIME}" ]]
line#: 2275...	echo ": noatime is specified for this filesystem, in /etc/fstab"
line#: 2269...	read -r MOUNTPOINT
line#: 2267...	read -r DEV
line#: 2269...	lsblk --ascii "${DEV}" -o name,mountpoint
line#: 2269...	grep -v SWAP
line#: 2269...	grep -v MOUNTPOINT
line#: 2269...	grep "/"
line#: 2269...	awk '{ print $NF }'
line#: 2269...	sort -u
line#: 2269...	read -r MOUNTPOINT
line#: 2271...	NOATIME="$(grep -E -v "^#|^$" < /etc/fstab | awk '{ print $2 " " $4 }' | grep "^${MOUNTPOINT} " | grep "noatime")"
line#: 2271...	grep -E -v "^#|^$" < /etc/fstab
line#: 2271...	awk '{ print $2 " " $4 }'
line#: 2271...	grep "^${MOUNTPOINT} "
line#: 2271...	grep "noatime"
line#: 2272...	printf "%-16s" "${MOUNTPOINT}"
line#: 2273...	[[ -n "${NOATIME}" ]]
line#: 2275...	echo ": noatime is specified for this filesystem, in /etc/fstab"
line#: 2269...	read -r MOUNTPOINT
line#: 2271...	NOATIME="$(grep -E -v "^#|^$" < /etc/fstab | awk '{ print $2 " " $4 }' | grep "^${MOUNTPOINT} " | grep "noatime")"
line#: 2271...	grep -E -v "^#|^$" < /etc/fstab
line#: 2271...	awk '{ print $2 " " $4 }'
line#: 2271...	grep "^${MOUNTPOINT} "
line#: 2271...	grep "noatime"
line#: 2272...	printf "%-16s" "${MOUNTPOINT}"
line#: 2273...	[[ -n "${NOATIME}" ]]
line#: 2275...	echo ": noatime is specified for this filesystem, in /etc/fstab"
line#: 2269...	read -r MOUNTPOINT
line#: 2271...	NOATIME="$(grep -E -v "^#|^$" < /etc/fstab | awk '{ print $2 " " $4 }' | grep "^${MOUNTPOINT} " | grep "noatime")"
line#: 2271...	grep -E -v "^#|^$" < /etc/fstab
line#: 2271...	awk '{ print $2 " " $4 }'
line#: 2271...	grep "^${MOUNTPOINT} "
line#: 2271...	grep "noatime"
line#: 2272...	printf "%-16s" "${MOUNTPOINT}"
line#: 2273...	[[ -n "${NOATIME}" ]]
line#: 2275...	echo ": noatime is specified for this filesystem, in /etc/fstab"
line#: 2269...	read -r MOUNTPOINT
line#: 2271...	NOATIME="$(grep -E -v "^#|^$" < /etc/fstab | awk '{ print $2 " " $4 }' | grep "^${MOUNTPOINT} " | grep "noatime")"
line#: 2271...	grep -E -v "^#|^$" < /etc/fstab
line#: 2271...	awk '{ print $2 " " $4 }'
line#: 2271...	grep "^${MOUNTPOINT} "
line#: 2271...	grep "noatime"
line#: 2272...	printf "%-16s" "${MOUNTPOINT}"
line#: 2273...	[[ -n "${NOATIME}" ]]
line#: 2275...	echo ": noatime is specified for this filesystem, in /etc/fstab"
line#: 2269...	read -r MOUNTPOINT
line#: 2267...	read -r DEV
line#: 2281...	echo
line#: 2282...	fnSUB_BANNER "Active statements in /etc/smartd.conf:"
line#: 224...	fnSUB_BANNER "Active statements in /etc/smartd.conf:"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSMART

line#: 2283...	grep -E -v "^#|^$" /etc/smartd.conf
line#: 2284...	echo
line#: 2285...	fnSUB_BANNER "SMARTD.SERVICE"
line#: 224...	fnSUB_BANNER "SMARTD.SERVICE"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSMART

line#: 2286...	systemctl status smartd.service
line#: 2287...	echo
line#: 2288...	smartctl --scan -d sat
line#: 2288...	grep -v aborted
line#: 2288...	awk '{ print $1 }'
line#: 2288...	read -r DEV
line#: 2290...	fnBANNER "SMART DEVICE: ${DEV}"
line#: 211...	fnBANNER "SMART DEVICE: ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSMART

line#: 2291...	${SUDO} smartctl --info "${DEV}" -d sat
line#: 2292...	fnSUB_BANNER "Full Device Details..."
line#: 224...	fnSUB_BANNER "Full Device Details..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSMART

line#: 2293...	${SUDO} smartctl -d sat --xall "${DEV}"
line#: 2288...	read -r DEV
line#: 2290...	fnBANNER "SMART DEVICE: ${DEV}"
line#: 211...	fnBANNER "SMART DEVICE: ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSMART

line#: 2291...	${SUDO} smartctl --info "${DEV}" -d sat
line#: 2292...	fnSUB_BANNER "Full Device Details..."
line#: 224...	fnSUB_BANNER "Full Device Details..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSMART fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSMART

line#: 2293...	${SUDO} smartctl -d sat --xall "${DEV}"
line#: 2288...	read -r DEV
line#: 2240...	awk '{ print $1 }'
leave: fnSMART -> back to fnGROUP_FS_STORAGE

line#: 5279...	fnQUIRKS
line#: 2304...	fnQUIRKS
line#: 2305...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnQUIRKS fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2307...	[[ "$(grep "quirks" /boot/cmdline.txt)" != "" ]]
line#: 2307...	grep "quirks" /boot/cmdline.txt
line#: 2304...	[[ "$(grep "quirks" /boot/cmdline.txt)" != "" ]]
leave: fnQUIRKS -> back to fnGROUP_FS_STORAGE

line#: 5280...	fnTRIM
line#: 2323...	fnTRIM
line#: 2324...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnTRIM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2326...	local FSTRIM_STATUS=""
line#: 2328...	[[ "$(find /etc/udev -type f -exec grep unmap {} \; | grep -v "^#")" != "" ]]
line#: 2328...	find /etc/udev -type f -exec grep unmap {} \;
line#: 2328...	grep -v "^#"
line#: 2330...	fnBANNER "USB STORAGE WITH TRIM"
line#: 211...	fnBANNER "USB STORAGE WITH TRIM"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnTRIM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnTRIM

line#: 2331...	${SUDO} fstrim --all -v 2> /dev/null
line#: 2331...	${SUDO} fstrim --all -v 2> /dev/null
NON-0: LINE 2331: RETURN CODE: 64	${SUDO} fstrim --all -v 2> /dev/null
line#: 2332...	FSTRIM_STATUS=${?}
line#: 2333...	case ${FSTRIM_STATUS} in 
line#: 2335...	echo
line#: 2336...	fnSUB_BANNER "UDEV RULES FOR TRIM"
line#: 224...	fnSUB_BANNER "UDEV RULES FOR TRIM"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnTRIM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnTRIM

line#: 2337...	find /etc/udev -type f -exec grep unmap {} \; -print
line#: 2337...	grep -v "^#"
line#: 2338...	echo
line#: 2339...	fnSUB_BANNER "FSTRIM.TIMER"
line#: 224...	fnSUB_BANNER "FSTRIM.TIMER"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnTRIM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnTRIM

line#: 2340...	systemctl status fstrim.timer
line#: 2341...	echo
line#: 2342...	[[ "$(grep discard /etc/fstab 2>/dev/null)" != "" ]]
line#: 2342...	grep discard /etc/fstab 2> /dev/null
line#: 2323...	[[ "$(grep discard /etc/fstab 2>/dev/null)" != "" ]]
leave: fnTRIM -> back to fnGROUP_FS_STORAGE

line#: 5281...	fnBLKID
line#: 2360...	fnBLKID
line#: 2361...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBLKID fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2363...	fnBANNER "DISK CONFIGURATION"
line#: 211...	fnBANNER "DISK CONFIGURATION"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnBLKID fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnBLKID

line#: 2364...	${SUDO} blkid
line#: 2364...	grep -v zram
line#: 2364...	sort
line#: 2365...	echo
line#: 2366...	lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL,UUID,PARTUUID,MODEL
line#: 2366...	grep -v zram
line#: 2367...	echo
line#: 2368...	df -h -T
line#: 2368...	grep -v tmpfs
line#: 2369...	echo
line#: 2360...	echo
leave: fnBLKID -> back to fnGROUP_FS_STORAGE

line#: 5282...	fnRAID
line#: 2377...	fnRAID
line#: 2378...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRAID fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2380...	local MD=""
line#: 2381...	local UUID=""
line#: 2382...	local FSTAB=""
line#: 2383...	local DEV=""
line#: 2386...	[[ -e /proc/mdstat ]]
line#: 2388...	fnBANNER "RAID ARRAY CONFIGURATION (***)"
line#: 211...	fnBANNER "RAID ARRAY CONFIGURATION (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRAID fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRAID

line#: 2389...	grep "^[a-zA-Z]" < /proc/mdstat 2> /dev/null
line#: 2390...	echo
line#: 2391...	echo "Contents of /etc/mdadm/mdadm.conf..."
line#: 2392...	grep -E -v "^$|^#" < /etc/mdadm/mdadm.conf 2> /dev/null
line#: 2393...	echo
line#: 2394...	grep ^md < /proc/mdstat 2> /dev/null
line#: 2394...	awk '{ print $1 }'
line#: 2394...	read -r MD
line#: 2396...	fnSUB_BANNER "RAID ARRAY DEVICE /dev/${MD} (***)"
line#: 2396...	tr '[:lower:]' '[:upper:]'
line#: 224...	fnSUB_BANNER "RAID ARRAY DEVICE /dev/${MD} (***)"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnRAID fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnRAID

line#: 2397...	${SUDO} mdadm --query /dev/"${MD}" 2> /dev/null
line#: 2397...	sed 's/ Use mdadm --detail for more detail.//'
line#: 2398...	echo
line#: 2399...	UUID=$(blkid | grep "/dev/${MD}:" | awk '{ print $2 }' | cut -f2 -d"\"")
line#: 2399...	blkid
line#: 2399...	grep "/dev/${MD}:"
line#: 2399...	awk '{ print $2 }'
line#: 2399...	cut -f2 -d"\""
line#: 2400...	FSTAB=$(grep "${UUID}" /etc/fstab 2>/dev/null || :)
line#: 2400...	grep "${UUID}" /etc/fstab 2> /dev/null
line#: 2400...	:
line#: 2401...	[[ -n "${FSTAB}" ]]
line#: 2409...	${SUDO} mdadm --detail /dev/"${MD}"
line#: 2410...	echo
line#: 2411...	${SUDO} mdadm --detail /dev/"${MD}"
line#: 2411...	awk '{ print $NF }'
line#: 2411...	grep /dev/
line#: 2411...	grep -v "/dev/${MD}:"
line#: 2411...	read -r DEV
line#: 2413...	fnSUB_BANNER "RAID ARRAY DEVICE /dev/${MD} - COMPONENT ${DEV} (***)"
line#: 2413...	tr '[:lower:]' '[:upper:]'
line#: 224...	fnSUB_BANNER "RAID ARRAY DEVICE /dev/${MD} - COMPONENT ${DEV} (***)"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnRAID fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnRAID

line#: 2414...	${SUDO} mdadm --query "${DEV}" 2> /dev/null
line#: 2414...	grep -v "is not an md array"
line#: 2414...	sed 's/  Use mdadm --examine for more detail.//'
line#: 2415...	echo
line#: 2416...	${SUDO} mdadm --examine "${DEV}"
line#: 2417...	echo
line#: 2411...	read -r DEV
line#: 2413...	fnSUB_BANNER "RAID ARRAY DEVICE /dev/${MD} - COMPONENT ${DEV} (***)"
line#: 2413...	tr '[:lower:]' '[:upper:]'
line#: 224...	fnSUB_BANNER "RAID ARRAY DEVICE /dev/${MD} - COMPONENT ${DEV} (***)"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnRAID fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnRAID

line#: 2414...	${SUDO} mdadm --query "${DEV}" 2> /dev/null
line#: 2414...	grep -v "is not an md array"
line#: 2414...	sed 's/  Use mdadm --examine for more detail.//'
line#: 2415...	echo
line#: 2416...	${SUDO} mdadm --examine "${DEV}"
line#: 2417...	echo
line#: 2411...	read -r DEV
line#: 2394...	read -r MD
line#: 2377...	awk '{ print $1 }'
leave: fnRAID -> back to fnGROUP_FS_STORAGE

line#: 5283...	fnLVM
line#: 2428...	fnLVM
line#: 2429...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLVM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2432...	type -path vgdisplay > /dev/null 2>&1
line#: 2434...	[[ -n "$(${SUDO} vgdisplay 2>/dev/null)" ]]
line#: 2434...	${SUDO} vgdisplay 2> /dev/null
line#: 2436...	fnBANNER "LOGICAL VOLUME MANAGER CONFIGURATION (***)"
line#: 211...	fnBANNER "LOGICAL VOLUME MANAGER CONFIGURATION (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLVM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLVM

line#: 2437...	echo "LOGICAL VOLUMES..."
line#: 2438...	${SUDO} lvs 2>&1
line#: 2439...	echo
line#: 2440...	${SUDO} lvdisplay 2>&1
line#: 2442...	fnSUB_BANNER "VOLUME GROUPS..."
line#: 224...	fnSUB_BANNER "VOLUME GROUPS..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLVM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLVM

line#: 2443...	${SUDO} vgs 2>&1
line#: 2444...	echo
line#: 2445...	${SUDO} vgdisplay 2>&1
line#: 2447...	fnSUB_BANNER "PHYSICAL VOLUMES..."
line#: 224...	fnSUB_BANNER "PHYSICAL VOLUMES..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLVM fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLVM

line#: 2448...	${SUDO} pvs 2>&1
line#: 2449...	echo
line#: 2450...	${SUDO} pvdisplay 2>&1
line#: 2428...	${SUDO} pvdisplay 2>&1
leave: fnLVM -> back to fnGROUP_FS_STORAGE

line#: 5284...	fnQUOTAS
line#: 1727...	fnQUOTAS
line#: 1728...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnQUOTAS fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1731...	type -path repquota > /dev/null 2>&1
line#: 1733...	[[ "$(grep "quota=" /etc/fstab 2>/dev/null | grep -v "^#")" != "" ]]
line#: 1733...	grep "quota=" /etc/fstab 2> /dev/null
line#: 1733...	grep -v "^#"
line#: 1735...	fnBANNER "QUOTAS (***)"
line#: 211...	fnBANNER "QUOTAS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnQUOTAS fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnQUOTAS

line#: 1736...	echo " The following filesystems are configured for quotas..."
line#: 1737...	grep "quota=" /etc/fstab 2> /dev/null
line#: 1737...	grep -v "^#"
line#: 1738...	echo
line#: 1739...	${SUDO} repquota -u -g -v -a -s -t
line#: 1739...	grep -v "^#"
line#: 1727...	grep -v "^#"
leave: fnQUOTAS -> back to fnGROUP_FS_STORAGE

line#: 5285...	fnOVERLAYFS
line#: 1749...	fnOVERLAYFS
line#: 1750...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnOVERLAYFS fnGROUP_FS_STORAGE fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1752...	local MOUNT_STATUS=""
line#: 1754...	[[ "$(grep "boot=overlay" /boot/cmdline.txt)" != "" ]]
line#: 1754...	grep "boot=overlay" /boot/cmdline.txt
line#: 1749...	[[ "$(grep "boot=overlay" /boot/cmdline.txt)" != "" ]]
leave: fnOVERLAYFS -> back to fnGROUP_FS_STORAGE

line#: 5267...	[[ "$(grep "boot=overlay" /boot/cmdline.txt)" != "" ]]
leave: fnGROUP_FS_STORAGE -> back to fnACTIONS

line#: 5484...	fnGROUP_AV
line#: 5293...	fnGROUP_AV
line#: 5294...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5296...	echo ' __ __ _____  __                '
line#: 5297...	echo '(_ |_ /   | |/  \|\ |   /| /|   Menu Option 11'
line#: 5298...	echo '__)|__\__ | |\__/| \|    |  |   AUDIO & VIDEO'
line#: 5299...	echo
line#: 5300...	SECTION="11"
line#: 5301...	fnLSHW_MM
line#: 2501...	fnLSHW_MM
line#: 2502...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLSHW_MM fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2504...	[[ -n "${LSHW_MULTIMEDIA}" ]]
line#: 2501...	[[ -n "${LSHW_MULTIMEDIA}" ]]
leave: fnLSHW_MM -> back to fnGROUP_AV

line#: 5302...	fnALSA_MOD
line#: 2517...	fnALSA_MOD
line#: 2518...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnALSA_MOD fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2520...	[[ -e /proc/asound/modules ]]
line#: 2522...	fnBANNER "ALSA MODULES"
line#: 211...	fnBANNER "ALSA MODULES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnALSA_MOD fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnALSA_MOD

line#: 2523...	cat /proc/asound/modules 2> /dev/null
line#: 2524...	echo
line#: 2517...	echo
leave: fnALSA_MOD -> back to fnGROUP_AV

line#: 5303...	fnALSA_HW
line#: 2533...	fnALSA_HW
line#: 2534...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnALSA_HW fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2536...	[[ -e /proc/asound/cards ]]
line#: 2538...	fnBANNER "ALSA SOUND HARDWARE"
line#: 211...	fnBANNER "ALSA SOUND HARDWARE"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnALSA_HW fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnALSA_HW

line#: 2539...	cat /proc/asound/cards 2> /dev/null
line#: 2540...	echo
line#: 2533...	echo
leave: fnALSA_HW -> back to fnGROUP_AV

line#: 5304...	fnALSA_CARD
line#: 2549...	fnALSA_CARD
line#: 2550...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnALSA_CARD fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2552...	[[ -e /proc/asound/cards ]]
line#: 2554...	grep "^ [0123]" < /proc/asound/cards 2> /dev/null
line#: 2554...	awk '{ print $1 }'
line#: 2554...	read -r CARD_NUM
line#: 2556...	fnBANNER "ALSA CARD-${CARD_NUM} INFO"
line#: 211...	fnBANNER "ALSA CARD-${CARD_NUM} INFO"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnALSA_CARD fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnALSA_CARD

line#: 2557...	amixer -c "${CARD_NUM}" 2> /dev/null
line#: 2558...	echo
line#: 2554...	read -r CARD_NUM
line#: 2556...	fnBANNER "ALSA CARD-${CARD_NUM} INFO"
line#: 211...	fnBANNER "ALSA CARD-${CARD_NUM} INFO"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnALSA_CARD fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnALSA_CARD

line#: 2557...	amixer -c "${CARD_NUM}" 2> /dev/null
line#: 2558...	echo
line#: 2554...	read -r CARD_NUM
line#: 2556...	fnBANNER "ALSA CARD-${CARD_NUM} INFO"
line#: 211...	fnBANNER "ALSA CARD-${CARD_NUM} INFO"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnALSA_CARD fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnALSA_CARD

line#: 2557...	amixer -c "${CARD_NUM}" 2> /dev/null
line#: 2558...	echo
line#: 2554...	read -r CARD_NUM
line#: 2549...	awk '{ print $1 }'
leave: fnALSA_CARD -> back to fnGROUP_AV

line#: 5305...	fnALSA_PB_CAP
line#: 2568...	fnALSA_PB_CAP
line#: 2569...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnALSA_PB_CAP fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 2571...	fnBANNER "ALSA PLAYBACK AND CAPTURE DEVICES"
line#: 211...	fnBANNER "ALSA PLAYBACK AND CAPTURE DEVICES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnALSA_PB_CAP fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnALSA_PB_CAP

line#: 2572...	[[ "$(aplay -l 2>/dev/null | grep ^card)" != "" ]]
line#: 2572...	aplay -l 2> /dev/null
line#: 2572...	grep ^card
line#: 2574...	aplay -l 2> /dev/null
line#: 2579...	echo
line#: 2580...	[[ "$(arecord -l 2>/dev/null | grep ^card)" != "" ]]
line#: 2580...	arecord -l 2> /dev/null
line#: 2580...	grep ^card
line#: 2584...	arecord -l 2> /dev/null
line#: 2584...	grep CAPTURE
line#: 2585...	echo "No capture device found"
line#: 2587...	echo
line#: 2568...	echo
leave: fnALSA_PB_CAP -> back to fnGROUP_AV

line#: 5306...	fnCAMERA
line#: 1904...	fnCAMERA
line#: 1905...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCAMERA fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1907...	fnBANNER "CAMERA (CSI)"
line#: 211...	fnBANNER "CAMERA (CSI)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCAMERA fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCAMERA

line#: 1909...	vcgencmd get_camera
line#: 1910...	[[ "$(vcgencmd get_config disable_camera_led | cut -f2 -d"=")" -eq 1 ]]
line#: 1910...	vcgencmd get_config disable_camera_led
line#: 1910...	cut -f2 -d"="
line#: 1915...	echo
line#: 1904...	echo
leave: fnCAMERA -> back to fnGROUP_AV

line#: 5307...	fnCODECS
line#: 1787...	fnCODECS
line#: 1788...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCODECS fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1790...	local CODEC=""
line#: 1791...	local STATUS=""
line#: 1792...	local LIC_STATUS=""
line#: 1794...	fnBANNER "HARDWARE-ACCELERATED CODECS"
line#: 211...	fnBANNER "HARDWARE-ACCELERATED CODECS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCODECS fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCODECS

line#: 1808...	CODEC=""
line#: 1809...	STATUS=""
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1817...	[[ "${PI4_FAMILY}" != "1" ]]
line#: 1832...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1836...	echo "${CODEC}: ${STATUS}"
line#: 1810...	for CODEC in AGIF FLAC H263 H264 MJPA MJPB MJPG MPG2 MPG4 MVC0 " PCM" THRA VORB " VP6" " VP8" WMV9 WVC1
line#: 1812...	STATUS=$(vcgencmd codec_enabled "${CODEC}" | cut -f2 -d"=")
line#: 1812...	vcgencmd codec_enabled "${CODEC}"
line#: 1812...	cut -f2 -d"="
line#: 1814...	[[ "${CODEC}" = "MPG2" ]]
line#: 1814...	[[ "${CODEC}" = "WVC1" ]]
line#: 1817...	[[ "${PI4_FAMILY}" != "1" ]]
line#: 1832...	echo "${CODEC}: ${STATUS}"
line#: 1839...	echo
line#: 1840...	echo "Note 1: VP6, VP8, and MJPG are not handled by the hardware video decoder"
line#: 1841...	echo "in the Broadcom BCM2835 processor, but by the VideoCore GPU.  Enable these"
line#: 1842...	echo "by running:  sudo raspi-config -> Interfacing Options -> Camera -> Enable"
line#: 1843...	echo "or by adding \"start_x=1\" to /boot/config.txt"
line#: 1844...	echo
line#: 1845...	echo "Note 2: GPU hardware-accelerated codecs will be disabled if \"gpu_mem=16\"."
line#: 1846...	echo "At least \"gpu_mem=96\" is required for the codecs to run correctly."
line#: 1847...	echo
line#: 1787...	echo
leave: fnCODECS -> back to fnGROUP_AV

line#: 5308...	fnV4L2CODECS
line#: 1855...	fnV4L2CODECS
line#: 1856...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnV4L2CODECS fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1858...	fnBANNER "V4L2-CTL CODECS"
line#: 211...	fnBANNER "V4L2-CTL CODECS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4L2CODECS fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4L2CODECS

line#: 1859...	v4l2-ctl -d 10 --list-formats-out
line#: 1860...	[[ "$(v4l2-ctl -d 10 --list-formats-out | grep "Pixel")" = "" ]]
line#: 1860...	v4l2-ctl -d 10 --list-formats-out
line#: 1860...	grep "Pixel"
line#: 1862...	echo
line#: 1864...	[[ "${PI4_FAMILY}" = "1" ]]
line#: 1866...	echo "Note: The H.265 codec, new w/ the Pi 4B, isn't part of the videocore."
line#: 1867...	echo "It's an entirely new block on the chip, so the VC6 knows nothing"
line#: 1868...	echo "about it.  Therefore, vcgencmd (which talks to the VC6) also knows"
line#: 1869...	echo "nothing about it.  The v4l2-ctl command used here, however, should"
line#: 1870...	echo "show the H.265 codec, when enabled, on Pi 4B, 400, and CM4 models."
line#: 1871...	echo
line#: 1855...	echo
leave: fnV4L2CODECS -> back to fnGROUP_AV

line#: 5309...	fnV4LDEV
line#: 1880...	fnV4LDEV
line#: 1881...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1883...	local DEV=""
line#: 1889...	fnBANNER "VIDEO4LINUX DEVICES"
line#: 211...	fnBANNER "VIDEO4LINUX DEVICES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4LDEV

line#: 1890...	v4l2-ctl --list-devices 2> /dev/null
line#: 1890...	:
line#: 1891...	v4l2-ctl --list-devices 2> /dev/null
line#: 1891...	grep /dev/
line#: 1891...	for DEV in $(v4l2-ctl --list-devices 2>/dev/null | grep /dev/)
line#: 1893...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 211...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4LDEV

line#: 1894...	v4l2-ctl -d "${DEV}" --all
line#: 1895...	echo
line#: 1891...	for DEV in $(v4l2-ctl --list-devices 2>/dev/null | grep /dev/)
line#: 1893...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 211...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4LDEV

line#: 1894...	v4l2-ctl -d "${DEV}" --all
line#: 1895...	echo
line#: 1891...	for DEV in $(v4l2-ctl --list-devices 2>/dev/null | grep /dev/)
line#: 1893...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 211...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4LDEV

line#: 1894...	v4l2-ctl -d "${DEV}" --all
line#: 1895...	echo
line#: 1891...	for DEV in $(v4l2-ctl --list-devices 2>/dev/null | grep /dev/)
line#: 1893...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 211...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4LDEV

line#: 1894...	v4l2-ctl -d "${DEV}" --all
line#: 1895...	echo
line#: 1891...	for DEV in $(v4l2-ctl --list-devices 2>/dev/null | grep /dev/)
line#: 1893...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 211...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4LDEV

line#: 1894...	v4l2-ctl -d "${DEV}" --all
line#: 1895...	echo
line#: 1891...	for DEV in $(v4l2-ctl --list-devices 2>/dev/null | grep /dev/)
line#: 1893...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 211...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4LDEV

line#: 1894...	v4l2-ctl -d "${DEV}" --all
line#: 1895...	echo
line#: 1891...	for DEV in $(v4l2-ctl --list-devices 2>/dev/null | grep /dev/)
line#: 1893...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 211...	fnBANNER "VIDEO4LINUX DEVICE ${DEV}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnV4LDEV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnV4LDEV

line#: 1894...	v4l2-ctl -d "${DEV}" --all
line#: 1895...	echo
line#: 1880...	echo
leave: fnV4LDEV -> back to fnGROUP_AV

line#: 5310...	fnTOUCH
line#: 3251...	fnTOUCH
line#: 3252...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnTOUCH fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3254...	local PI_TOUCHSCR=""
line#: 3256...	fnBANNER "OFFICIAL 7\" TOUCHSCREEN"
line#: 211...	fnBANNER "OFFICIAL 7\" TOUCHSCREEN"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnTOUCH fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnTOUCH

line#: 3257...	PI_TOUCHSCR="$(dmesg | grep -i ft5406 || :)"
line#: 3257...	dmesg
line#: 3257...	grep -i ft5406
line#: 3257...	:
line#: 3258...	[[ -n "${PI_TOUCHSCR}" ]]
line#: 3262...	echo "not detected"
line#: 3264...	echo
line#: 3251...	echo
leave: fnTOUCH -> back to fnGROUP_AV

line#: 5311...	fnDISPDRV
line#: 1300...	fnDISPDRV
line#: 1301...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDISPDRV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 1303...	fnBANNER "ACTIVE DISPLAY DRIVER"
line#: 211...	fnBANNER "ACTIVE DISPLAY DRIVER"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDISPDRV fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDISPDRV

line#: 1310...	[[ "$(lsmod | awk '{ print $1 }' | grep ^vc4)" = "" ]]
line#: 1310...	lsmod
line#: 1310...	awk '{ print $1 }'
line#: 1310...	grep ^vc4
line#: 1310...	[[ "$(lsmod | awk '{ print $1 }' | grep ^drm)" = "" ]]
line#: 1310...	lsmod
line#: 1310...	awk '{ print $1 }'
line#: 1310...	grep ^drm
line#: 1312...	DISP_DRIVER="broadcom"
line#: 1313...	echo "Broadcom Display Driver"
line#: 1324...	echo
line#: 1300...	echo
leave: fnDISPDRV -> back to fnGROUP_AV

line#: 5312...	fnDISPLAY
line#: 3272...	fnDISPLAY
line#: 3273...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDISPLAY fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3275...	local DISP_NUM=""
line#: 3276...	local TVSTATUS=""
line#: 3277...	local TV_OFF=""
line#: 3278...	local DEV_ID=""
line#: 3279...	local DEV_AUDIO=""
line#: 3280...	local TVGROUP=""
line#: 3282...	[[ "${VERSION_ID}" -ne 9 ]]
line#: 3287...	fnBANNER "DISPLAY POWER UP STATUS"
line#: 211...	fnBANNER "DISPLAY POWER UP STATUS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDISPLAY fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDISPLAY

line#: 3288...	echo "DISPLAY         ID  STATUS"
line#: 3289...	echo "--------------------------"
line#: 3290...	echo -e -n "Main LCD        0"
line#: 3291...	case $(vcgencmd display_power -1 0 | cut -f2 -d"=") in 
line#: 3291...	vcgencmd display_power -1 0
line#: 3291...	cut -f2 -d"="
line#: 3292...	echo "   off"
line#: 3299...	echo -e -n "Secondary LCD   1"
line#: 3300...	case $(vcgencmd display_power -1 1 | cut -f2 -d"=") in 
line#: 3300...	vcgencmd display_power -1 1
line#: 3300...	cut -f2 -d"="
line#: 3301...	echo "   off"
line#: 3308...	echo -e -n "HDMI 0          2"
line#: 3309...	case $(vcgencmd display_power -1 2 | cut -f2 -d"=") in 
line#: 3309...	vcgencmd display_power -1 2
line#: 3309...	cut -f2 -d"="
line#: 3312...	echo "   ON"
line#: 3317...	echo -e -n "Composite       3"
line#: 3318...	case $(vcgencmd display_power -1 3 | cut -f2 -d"=") in 
line#: 3318...	vcgencmd display_power -1 3
line#: 3318...	cut -f2 -d"="
line#: 3319...	echo "   off"
line#: 3326...	echo -e -n "HDMI 1          7"
line#: 3327...	case $(vcgencmd display_power -1 7 | cut -f2 -d"=") in 
line#: 3327...	vcgencmd display_power -1 7
line#: 3327...	cut -f2 -d"="
line#: 3330...	echo "   ON"
line#: 3335...	echo
line#: 3340...	[[ "${DISP_DRIVER}" = "broadcom" ]]
line#: 3342...	fnBANNER "HDMI DISPLAY DATA"
line#: 211...	fnBANNER "HDMI DISPLAY DATA"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDISPLAY fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDISPLAY

line#: 3343...	vcgencmd dispmanx_list 2>&1
line#: 3344...	echo
line#: 3345...	tvservice -l 2> /dev/null
line#: 3346...	echo
line#: 3347...	tvservice -l 2> /dev/null
line#: 3347...	grep "Display Number"
line#: 3347...	awk '{ print $3 }'
line#: 3347...	cut -f1 -d","
line#: 3347...	read -r DISP_NUM
line#: 3349...	TVSTATUS="$(tvservice -s -v "${DISP_NUM}" 2>/dev/null | strings)"
line#: 3349...	tvservice -s -v "${DISP_NUM}" 2> /dev/null
line#: 3349...	strings
line#: 3350...	TV_OFF="$(echo "${TVSTATUS}" | awk '{ print $2 }')"
line#: 3350...	echo "${TVSTATUS}"
line#: 3350...	awk '{ print $2 }'
line#: 3351...	[[ "${TV_OFF}" = "0x120000" ]]
line#: 3357...	[[ "${TV_OFF}" = "0x2" ]]
line#: 3364...	fnSUB_BANNER "DISPLAY NUMBER : ${DISP_NUM}"
line#: 224...	fnSUB_BANNER "DISPLAY NUMBER : ${DISP_NUM}"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDISPLAY fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDISPLAY

line#: 3365...	echo "DISPLAY STATUS : ${TVSTATUS}"
line#: 3367...	DEV_ID="$(tvservice -n -v "${DISP_NUM}" 2>/dev/null | strings )"
line#: 3367...	tvservice -n -v "${DISP_NUM}" 2> /dev/null
line#: 3367...	strings
line#: 3368...	[[ "${DEV_ID}" = "" ]]
line#: 3372...	echo "EDID DEVICE ID : ${DEV_ID}"
line#: 3374...	DEV_AUDIO="$(tvservice -a -v "${DISP_NUM}" 2>/dev/null | strings | sed 's/^     //')"
line#: 3374...	tvservice -a -v "${DISP_NUM}" 2> /dev/null
line#: 3374...	strings
line#: 3374...	sed 's/^     //'
line#: 3375...	[[ "${DEV_AUDIO}" = "" ]]
line#: 3379...	echo "SUPPORTED AUDIO: ${DEV_AUDIO}"
line#: 3380...	echo
line#: 3385...	TVGROUP="$(echo "${TVSTATUS}" | awk '{ print $4 }')"
line#: 3385...	echo "${TVSTATUS}"
line#: 3385...	awk '{ print $4 }'
line#: 3386...	[[ "${TVGROUP}" != "DMT" ]]
line#: 3386...	[[ "${TVGROUP}" != "CEA" ]]
line#: 3390...	tvservice --modes="${TVGROUP}" -v "${DISP_NUM}" 2> /dev/null
line#: 3391...	echo
line#: 3347...	read -r DISP_NUM
line#: 3349...	TVSTATUS="$(tvservice -s -v "${DISP_NUM}" 2>/dev/null | strings)"
line#: 3349...	tvservice -s -v "${DISP_NUM}" 2> /dev/null
line#: 3349...	strings
line#: 3350...	TV_OFF="$(echo "${TVSTATUS}" | awk '{ print $2 }')"
line#: 3350...	echo "${TVSTATUS}"
line#: 3350...	awk '{ print $2 }'
line#: 3351...	[[ "${TV_OFF}" = "0x120000" ]]
line#: 3357...	[[ "${TV_OFF}" = "0x2" ]]
line#: 3364...	fnSUB_BANNER "DISPLAY NUMBER : ${DISP_NUM}"
line#: 224...	fnSUB_BANNER "DISPLAY NUMBER : ${DISP_NUM}"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDISPLAY fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDISPLAY

line#: 3365...	echo "DISPLAY STATUS : ${TVSTATUS}"
line#: 3367...	DEV_ID="$(tvservice -n -v "${DISP_NUM}" 2>/dev/null | strings )"
line#: 3367...	tvservice -n -v "${DISP_NUM}" 2> /dev/null
line#: 3367...	strings
line#: 3368...	[[ "${DEV_ID}" = "" ]]
line#: 3372...	echo "EDID DEVICE ID : ${DEV_ID}"
line#: 3374...	DEV_AUDIO="$(tvservice -a -v "${DISP_NUM}" 2>/dev/null | strings | sed 's/^     //')"
line#: 3374...	tvservice -a -v "${DISP_NUM}" 2> /dev/null
line#: 3374...	strings
line#: 3374...	sed 's/^     //'
line#: 3375...	[[ "${DEV_AUDIO}" = "" ]]
line#: 3379...	echo "SUPPORTED AUDIO: ${DEV_AUDIO}"
line#: 3380...	echo
line#: 3385...	TVGROUP="$(echo "${TVSTATUS}" | awk '{ print $4 }')"
line#: 3385...	echo "${TVSTATUS}"
line#: 3385...	awk '{ print $4 }'
line#: 3386...	[[ "${TVGROUP}" != "DMT" ]]
line#: 3386...	[[ "${TVGROUP}" != "CEA" ]]
line#: 3390...	tvservice --modes="${TVGROUP}" -v "${DISP_NUM}" 2> /dev/null
line#: 3391...	echo
line#: 3347...	read -r DISP_NUM
line#: 3272...	cut -f1 -d","
leave: fnDISPLAY -> back to fnGROUP_AV

line#: 5313...	fnROWS_COLS
line#: 3401...	fnROWS_COLS
line#: 3402...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnROWS_COLS fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3404...	local ROWS=""
line#: 3405...	local COLS=""
line#: 3407...	fnBANNER "CURRENT ROWS & COLUMNS"
line#: 211...	fnBANNER "CURRENT ROWS & COLUMNS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnROWS_COLS fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnROWS_COLS

line#: 3408...	echo "Term type is: ${TERM}"
line#: 3409...	echo
line#: 3410...	[[ "${TERM}" = "" ]]
line#: 3410...	[[ "${TERM}" = "dumb" ]]
line#: 3415...	ROWS=$(tput lines 2>/dev/null)
line#: 3415...	tput lines 2> /dev/null
line#: 3416...	COLS=$(tput cols 2>/dev/null)
line#: 3416...	tput cols 2> /dev/null
line#: 3417...	echo "Screen is ${ROWS} rows X ${COLS} columns"
line#: 3418...	echo
line#: 3419...	echo "Term type characteristics from infocomp"
line#: 3420...	echo "---------------------------------------"
line#: 3421...	infocmp -I "${TERM}"
line#: 3422...	echo
line#: 3423...	echo "Term type characteristics from termcap"
line#: 3424...	echo "---------------------------------------"
line#: 3425...	infocmp -C "${TERM}"
line#: 3427...	echo
line#: 3401...	echo
leave: fnROWS_COLS -> back to fnGROUP_AV

line#: 5314...	fnRESOLUTION
line#: 3435...	fnRESOLUTION
line#: 3436...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRESOLUTION fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3440...	[[ "${DISP_DRIVER}" = "broadcom" ]]
line#: 3442...	fnBANNER "CURRENT SCREEN RESOLUTION"
line#: 211...	fnBANNER "CURRENT SCREEN RESOLUTION"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRESOLUTION fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRESOLUTION

line#: 3443...	echo "HORIZONTAL : $(vcgencmd get_lcd_info | awk '{ print $1 }') pixels"
line#: 3443...	vcgencmd get_lcd_info
line#: 3443...	awk '{ print $1 }'
line#: 3444...	echo "VERTICAL   : $(vcgencmd get_lcd_info | awk '{ print $2 }') pixels"
line#: 3444...	vcgencmd get_lcd_info
line#: 3444...	awk '{ print $2 }'
line#: 3445...	echo "COLOR DEPTH: $(vcgencmd get_lcd_info | awk '{ print $3 }') bits"
line#: 3445...	vcgencmd get_lcd_info
line#: 3445...	awk '{ print $3 }'
line#: 3446...	echo
line#: 3435...	echo
leave: fnRESOLUTION -> back to fnGROUP_AV

line#: 5315...	fnXRESOLUTION
line#: 3455...	fnXRESOLUTION
line#: 3456...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnXRESOLUTION fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3459...	type -path xrandr > /dev/null 2>&1
line#: 3461...	[[ -n "${DISPLAY}" ]]
line#: 3463...	fnBANNER "CURRENT X-DISPLAY RESOLUTION (***)"
line#: 211...	fnBANNER "CURRENT X-DISPLAY RESOLUTION (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnXRESOLUTION fnGROUP_AV fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnXRESOLUTION

line#: 3464...	echo "\$DISPLAY=${DISPLAY}"
line#: 3466...	xrandr --verbose 2>&1
line#: 3466...	grep -v "xrandr: Failed to get size of gamma for output default"
line#: 3467...	echo
line#: 3455...	echo
leave: fnXRESOLUTION -> back to fnGROUP_AV

line#: 5293...	echo
leave: fnGROUP_AV -> back to fnACTIONS

line#: 5485...	fnGROUP_NETWORK
line#: 5323...	fnGROUP_NETWORK
line#: 5324...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5326...	echo ' __ __ _____  __           __   '
line#: 5327...	echo '(_ |_ /   | |/  \|\ |   /|  _)  Menu Option 12'
line#: 5328...	echo '__)|__\__ | |\__/| \|    | /__  NETWORKING'
line#: 5329...	echo
line#: 5330...	SECTION="12"
line#: 5331...	fnIP6STAT
line#: 3633...	fnIP6STAT
line#: 3634...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnIP6STAT fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3636...	[[ "$(grep ipv6.disable=1 /boot/cmdline.txt 2>/dev/null)" != "" ]]
line#: 3636...	grep ipv6.disable=1 /boot/cmdline.txt 2> /dev/null
line#: 3638...	fnBANNER "IPV6 DISABLED"
line#: 211...	fnBANNER "IPV6 DISABLED"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnIP6STAT fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnIP6STAT

line#: 3639...	echo "IPv6 has been disabled in cmdline.txt"
line#: 3640...	echo
line#: 3633...	echo
leave: fnIP6STAT -> back to fnGROUP_NETWORK

line#: 5332...	fnNET_FILES
line#: 3649...	fnNET_FILES
line#: 3650...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnNET_FILES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3652...	local HITS=""
line#: 3654...	[[ -f /etc/resolv.conf ]]
line#: 3656...	fnBANNER "RESOLV.CONF"
line#: 211...	fnBANNER "RESOLV.CONF"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNET_FILES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNET_FILES

line#: 3657...	grep -E -v "^$|^#" < /etc/resolv.conf 2> /dev/null
line#: 3658...	echo
line#: 3663...	[[ -f /etc/hosts ]]
line#: 3665...	fnBANNER "HOSTS FILE"
line#: 211...	fnBANNER "HOSTS FILE"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNET_FILES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNET_FILES

line#: 3666...	grep -E -v "^$|^#" < /etc/hosts 2> /dev/null
line#: 3667...	echo
line#: 3672...	[[ -f /etc/networks ]]
line#: 3674...	fnBANNER "NETWORKS FILE"
line#: 211...	fnBANNER "NETWORKS FILE"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNET_FILES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNET_FILES

line#: 3675...	grep -E -v "^$|^#" < /etc/networks 2> /dev/null
line#: 3676...	echo
line#: 3681...	[[ -f /etc/iptables.up.rules ]]
line#: 3683...	fnBANNER "IPV4 FIREWALL RULES"
line#: 211...	fnBANNER "IPV4 FIREWALL RULES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNET_FILES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNET_FILES

line#: 3684...	grep -E -v "^$|^#" < /etc/iptables.up.rules 2> /dev/null
line#: 3685...	echo
line#: 3690...	[[ -f /etc/ip6tables.up.rules ]]
line#: 3692...	fnBANNER "IPV6 FIREWALL RULES"
line#: 211...	fnBANNER "IPV6 FIREWALL RULES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNET_FILES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNET_FILES

line#: 3693...	grep -E -v "^$|^#" < /etc/ip6tables.up.rules 2> /dev/null
line#: 3694...	echo
line#: 3699...	[[ -f /etc/hosts.deny ]]
line#: 3701...	fnBANNER "TCPWRAPPERS: HOSTS.DENY"
line#: 211...	fnBANNER "TCPWRAPPERS: HOSTS.DENY"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNET_FILES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNET_FILES

line#: 3702...	HITS=$(grep -E -v "^$|^#" < /etc/hosts.deny 2>/dev/null | grep -c . || :)
line#: 3702...	grep -E -v "^$|^#" < /etc/hosts.deny 2> /dev/null
line#: 3702...	grep -c .
line#: 3702...	:
line#: 3703...	[[ "${HITS}" -ne 0 ]]
line#: 3707...	echo "file is empty"
line#: 3709...	echo
line#: 3714...	[[ -f /etc/hosts.allow ]]
line#: 3716...	fnBANNER "TCPWRAPPERS: HOSTS.ALLOW"
line#: 211...	fnBANNER "TCPWRAPPERS: HOSTS.ALLOW"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNET_FILES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNET_FILES

line#: 3717...	HITS=$(grep -E -v "^#|^$" < /etc/hosts.allow 2>/dev/null | grep -c . || :)
line#: 3717...	grep -E -v "^#|^$" < /etc/hosts.allow 2> /dev/null
line#: 3717...	grep -c .
line#: 3717...	:
line#: 3718...	[[ "${HITS}" -ne 0 ]]
line#: 3722...	echo "file is empty"
line#: 3724...	echo
line#: 3649...	echo
leave: fnNET_FILES -> back to fnGROUP_NETWORK

line#: 5333...	fnROUTES
line#: 3735...	fnROUTES
line#: 3736...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnROUTES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3738...	fnBANNER "ROUTE TABLE - IPV4"
line#: 211...	fnBANNER "ROUTE TABLE - IPV4"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnROUTES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnROUTES

line#: 3739...	route -4 2> /dev/null
line#: 3740...	echo
line#: 3741...	fnBANNER "ROUTE TABLE - IPV6"
line#: 211...	fnBANNER "ROUTE TABLE - IPV6"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnROUTES fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnROUTES

line#: 3742...	route -6 2> /dev/null
line#: 3742...	:
line#: 3743...	echo
line#: 3735...	echo
leave: fnROUTES -> back to fnGROUP_NETWORK

line#: 5334...	fnNET_ADAPTERS
line#: 3751...	fnNET_ADAPTERS
line#: 3752...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnNET_ADAPTERS fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3754...	fnBANNER "NETWORK ADAPTERS"
line#: 211...	fnBANNER "NETWORK ADAPTERS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNET_ADAPTERS fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNET_ADAPTERS

line#: 3755...	${SUDO} lshw -class network 2> /dev/null
line#: 3756...	echo
line#: 3751...	echo
leave: fnNET_ADAPTERS -> back to fnGROUP_NETWORK

line#: 5335...	fnETHTOOL
line#: 3764...	fnETHTOOL
line#: 3765...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnETHTOOL fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3767...	local ETH=""
line#: 3770...	type -path ethtool > /dev/null 2>&1
line#: 3772...	ifconfig
line#: 3772...	grep "flags="
line#: 3772...	grep -v "lo:"
line#: 3772...	cut -f1 -d":"
line#: 3772...	read -r ETH
line#: 3774...	fnBANNER "ETHTOOL ${ETH} (***)"
line#: 211...	fnBANNER "ETHTOOL ${ETH} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnETHTOOL fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnETHTOOL

line#: 3775...	echo "Found ${ETH}..."
line#: 3776...	echo
line#: 3777...	${SUDO} ethtool -i "${ETH}"
line#: 3778...	echo
line#: 3779...	${SUDO} ethtool "${ETH}"
line#: 3780...	echo
line#: 3772...	read -r ETH
line#: 3774...	fnBANNER "ETHTOOL ${ETH} (***)"
line#: 211...	fnBANNER "ETHTOOL ${ETH} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnETHTOOL fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnETHTOOL

line#: 3775...	echo "Found ${ETH}..."
line#: 3776...	echo
line#: 3777...	${SUDO} ethtool -i "${ETH}"
line#: 3778...	echo
line#: 3779...	${SUDO} ethtool "${ETH}"
line#: 3780...	echo
line#: 3772...	read -r ETH
line#: 3774...	fnBANNER "ETHTOOL ${ETH} (***)"
line#: 211...	fnBANNER "ETHTOOL ${ETH} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnETHTOOL fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnETHTOOL

line#: 3775...	echo "Found ${ETH}..."
line#: 3776...	echo
line#: 3777...	${SUDO} ethtool -i "${ETH}"
line#: 3778...	echo
line#: 3779...	${SUDO} ethtool "${ETH}"
line#: 3780...	echo
line#: 3772...	read -r ETH
line#: 3774...	fnBANNER "ETHTOOL ${ETH} (***)"
line#: 211...	fnBANNER "ETHTOOL ${ETH} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnETHTOOL fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnETHTOOL

line#: 3775...	echo "Found ${ETH}..."
line#: 3776...	echo
line#: 3777...	${SUDO} ethtool -i "${ETH}"
line#: 3778...	echo
line#: 3779...	${SUDO} ethtool "${ETH}"
line#: 3779...	:
line#: 3780...	echo
line#: 3772...	read -r ETH
line#: 3764...	cut -f1 -d":"
leave: fnETHTOOL -> back to fnGROUP_NETWORK

line#: 5336...	fnIFCONFIG
line#: 3790...	fnIFCONFIG
line#: 3791...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnIFCONFIG fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3793...	fnBANNER "IFCONFIG"
line#: 211...	fnBANNER "IFCONFIG"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnIFCONFIG fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnIFCONFIG

line#: 3794...	ifconfig
line#: 3790...	ifconfig
leave: fnIFCONFIG -> back to fnGROUP_NETWORK

line#: 5337...	fnARP_CACHE
line#: 3802...	fnARP_CACHE
line#: 3803...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnARP_CACHE fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3805...	fnBANNER "IP NEIGHBORS (ARP CACHE)"
line#: 211...	fnBANNER "IP NEIGHBORS (ARP CACHE)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnARP_CACHE fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnARP_CACHE

line#: 3806...	ip neigh
line#: 3807...	echo
line#: 3802...	echo
leave: fnARP_CACHE -> back to fnGROUP_NETWORK

line#: 5338...	fnSUPPLICANT
line#: 3815...	fnSUPPLICANT
line#: 3816...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUPPLICANT fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3818...	[[ -f /etc/wpa_supplicant/wpa_supplicant.conf ]]
line#: 3820...	fnBANNER "WPA_SUPPLICANT FILE (Passwords will not be displayed)"
line#: 211...	fnBANNER "WPA_SUPPLICANT FILE (Passwords will not be displayed)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSUPPLICANT fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSUPPLICANT

line#: 3821...	${SUDO} cat /etc/wpa_supplicant/wpa_supplicant.conf 2> /dev/null
line#: 3821...	grep -v "^$"
line#: 3822...	sed 's/psk=.*/psk=**PASSWORD_HIDDEN**/'
line#: 3823...	sed 's/wep_key0=.*/wep_key0=**PASSWORD_HIDDEN**/'
line#: 3824...	sed 's/password=.*/password=**PASSWORD_HIDDEN**/'
line#: 3825...	sed 's/passwd=.*/passwd=**PASSWORD_HIDDEN**/'
line#: 3826...	echo
line#: 3815...	echo
leave: fnSUPPLICANT -> back to fnGROUP_NETWORK

line#: 5339...	fnIWCONFIG
line#: 3835...	fnIWCONFIG
line#: 3836...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnIWCONFIG fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3838...	local WLAN=""
line#: 3840...	fnBANNER "IWCONFIG"
line#: 211...	fnBANNER "IWCONFIG"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnIWCONFIG fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnIWCONFIG

line#: 3841...	ip -s link
line#: 3841...	grep "wlan[0-3]"
line#: 3841...	awk '{ print $2 }'
line#: 3841...	cut -f1 -d":"
line#: 3841...	read -r WLAN
line#: 3843...	iwconfig "${WLAN}" 2> /dev/null
line#: 3841...	read -r WLAN
line#: 3835...	cut -f1 -d":"
leave: fnIWCONFIG -> back to fnGROUP_NETWORK

line#: 5340...	fnWIFI_AP
line#: 3852...	fnWIFI_AP
line#: 3853...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnWIFI_AP fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3855...	fnBANNER "VISIBLE WIFI ACCESS POINTS"
line#: 211...	fnBANNER "VISIBLE WIFI ACCESS POINTS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnWIFI_AP fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnWIFI_AP

line#: 3856...	iwlist scan 2> /dev/null
line#: 3856...	grep -v "^$"
line#: 3856...	grep -v "Unknown:"
line#: 3857...	echo
line#: 3852...	echo
leave: fnWIFI_AP -> back to fnGROUP_NETWORK

line#: 5341...	fnNETSTAT
line#: 3865...	fnNETSTAT
line#: 3866...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnNETSTAT fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3868...	fnBANNER "NETSTAT"
line#: 211...	fnBANNER "NETSTAT"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNETSTAT fnGROUP_NETWORK fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNETSTAT

line#: 3869...	netstat -n 2> /dev/null
line#: 3870...	echo
line#: 3865...	echo
leave: fnNETSTAT -> back to fnGROUP_NETWORK

line#: 5323...	echo
leave: fnGROUP_NETWORK -> back to fnACTIONS

line#: 5486...	fnGROUP_NET_FS
line#: 5349...	fnGROUP_NET_FS
line#: 5350...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5352...	echo ' __ __ _____  __           __   '
line#: 5353...	echo '(_ |_ /   | |/  \|\ |   /|  _)  Menu Option 13'
line#: 5354...	echo '__)|__\__ | |\__/| \|    | __)  NETWORK FILESYSTEMS'
line#: 5355...	echo
line#: 5356...	SECTION="13"
line#: 5357...	fnRPC_NFS
line#: 3878...	fnRPC_NFS
line#: 3879...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRPC_NFS fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3881...	local PS_RPC=""
line#: 3886...	PS_RPC=$(pgrep rpcbind)
line#: 3886...	pgrep rpcbind
line#: 3887...	[[ -n "${PS_RPC}" ]]
line#: 3889...	type -path rpcinfo > /dev/null 2>&1
line#: 3891...	fnBANNER "PORTMAPPER - RPCINFO (***)"
line#: 211...	fnBANNER "PORTMAPPER - RPCINFO (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRPC_NFS fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRPC_NFS

line#: 3892...	rpcinfo localhost
line#: 3893...	echo
line#: 3900...	type -path showmount > /dev/null 2>&1
line#: 3902...	fnBANNER "EXPORTED NFS DIRS (***)"
line#: 211...	fnBANNER "EXPORTED NFS DIRS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRPC_NFS fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRPC_NFS

line#: 3903...	showmount -e localhost
line#: 3904...	echo
line#: 3911...	fnBANNER "MOUNTED NFS DIRS (***)"
line#: 211...	fnBANNER "MOUNTED NFS DIRS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRPC_NFS fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRPC_NFS

line#: 3912...	[[ "$(df -hT --type=nfs --type=nfs4)" != "" ]]
line#: 3912...	df -hT --type=nfs --type=nfs4
line#: 3914...	df -hT --type=nfs --type=nfs4
line#: 3915...	echo
line#: 3916...	type -path nfsiostat > /dev/null 2>&1
line#: 3916...	type -path grep > /dev/null 2>&1
line#: 3918...	fnBANNER "NFSIOSTAT (***)"
line#: 3918...	grep -v "^$"
line#: 211...	fnBANNER "NFSIOSTAT (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRPC_NFS fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRPC_NFS

line#: 3919...	nfsiostat
line#: 3926...	echo
line#: 3878...	echo
leave: fnRPC_NFS -> back to fnGROUP_NET_FS

line#: 5358...	fnSMB_CIFS
line#: 3935...	fnSMB_CIFS
line#: 3936...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSMB_CIFS fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 3938...	local PS_SMB=""
line#: 3943...	PS_SMB=$(pgrep smbd)
line#: 3943...	pgrep smbd
line#: 3944...	[[ -n "${PS_SMB}" ]]
line#: 3946...	type -path smbstatus > /dev/null 2>&1
line#: 3948...	fnBANNER "SMBSTATUS - REMOTE SYSTEMS CONNECTED TO US (***)"
line#: 3948...	grep -v "^$"
line#: 211...	fnBANNER "SMBSTATUS - REMOTE SYSTEMS CONNECTED TO US (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSMB_CIFS fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSMB_CIFS

line#: 3949...	${SUDO} smbstatus
line#: 3955...	fnBANNER "MOUNTED CIFS DIRS"
line#: 211...	fnBANNER "MOUNTED CIFS DIRS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSMB_CIFS fnGROUP_NET_FS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSMB_CIFS

line#: 3956...	[[ -n "$(df -hT --type=cifs 2>/dev/null)" ]]
line#: 3956...	df -hT --type=cifs 2> /dev/null
line#: 3958...	df -hT --type=cifs 2> /dev/null
line#: 3962...	echo
line#: 3935...	echo
leave: fnSMB_CIFS -> back to fnGROUP_NET_FS

line#: 5349...	echo
leave: fnGROUP_NET_FS -> back to fnACTIONS

line#: 5487...	fnGROUP_OTHER
line#: 5366...	fnGROUP_OTHER
line#: 5367...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5369...	echo ' __ __ _____  __                '
line#: 5370...	echo '(_ |_ /   | |/  \|\ |   /| |__| Menu Option 14'
line#: 5371...	echo '__)|__\__ | |\__/| \|    |    | CONTAINERS & VIRTUALIZATION'
line#: 5372...	echo
line#: 5373...	SECTION="14"
line#: 5374...	fnDOCKER
line#: 4370...	fnDOCKER
line#: 4371...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4373...	local SERVICE=""
line#: 4376...	[[ -n "$(pgrep dockerd)" ]]
line#: 4376...	pgrep dockerd
line#: 4378...	fnBANNER "DOCKER (***)"
line#: 211...	fnBANNER "DOCKER (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDOCKER

line#: 4379...	${SUDO} docker version 2> /dev/null
line#: 4380...	echo
line#: 4381...	echo "-------------------------------"
line#: 4382...	${SUDO} docker info 2> /dev/null
line#: 4384...	[[ -f /etc/containerd/config.toml ]]
line#: 4386...	fnSUB_BANNER "Contents of /etc/containerd/config.toml"
line#: 224...	fnSUB_BANNER "Contents of /etc/containerd/config.toml"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4387...	grep -E -v "^#|^$" < /etc/containerd/config.toml
line#: 4388...	echo
line#: 4391...	systemctl
line#: 4391...	grep docker
line#: 4391...	awk '{ print $1 }'
line#: 4391...	read -r SERVICE
line#: 4393...	fnSUB_BANNER "Docker Service..."
line#: 224...	fnSUB_BANNER "Docker Service..."
line#: 4393...	grep -v "^$"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4394...	systemctl status "${SERVICE}"
line#: 4391...	read -r SERVICE
line#: 4393...	fnSUB_BANNER "Docker Service..."
line#: 4393...	grep -v "^$"
line#: 224...	fnSUB_BANNER "Docker Service..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4394...	systemctl status "${SERVICE}"
line#: 4391...	read -r SERVICE
line#: 4393...	fnSUB_BANNER "Docker Service..."
line#: 4393...	grep -v "^$"
line#: 224...	fnSUB_BANNER "Docker Service..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4394...	systemctl status "${SERVICE}"
line#: 4391...	read -r SERVICE
line#: 4393...	fnSUB_BANNER "Docker Service..."
line#: 4393...	grep -v "^$"
line#: 224...	fnSUB_BANNER "Docker Service..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4394...	systemctl status "${SERVICE}"
line#: 4391...	read -r SERVICE
line#: 4396...	echo
line#: 4398...	fnSUB_BANNER "ALL CONTAINERS"
line#: 4398...	grep -v "^$"
line#: 224...	fnSUB_BANNER "ALL CONTAINERS"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4399...	${SUDO} docker ps -a 2> /dev/null
line#: 4400...	echo
line#: 4401...	fnSUB_BANNER "RUNNING CONTAINERS"
line#: 4401...	grep -v "^$"
line#: 224...	fnSUB_BANNER "RUNNING CONTAINERS"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4402...	${SUDO} docker ps 2> /dev/null
line#: 4403...	echo
line#: 4404...	fnSUB_BANNER "ALL IMAGES"
line#: 224...	fnSUB_BANNER "ALL IMAGES"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4405...	${SUDO} docker images 2> /dev/null
line#: 4406...	echo
line#: 4408...	[[ "$(docker images 2>/dev/null | awk '{ print $1 }' | grep "^hello-world")" != "" ]]
line#: 4408...	docker images 2> /dev/null
line#: 4408...	awk '{ print $1 }'
line#: 4408...	grep "^hello-world"
line#: 4410...	fnSUB_BANNER "Docker \"Hello World\""
line#: 4410...	grep -v "^$"
line#: 224...	fnSUB_BANNER "Docker \"Hello World\""
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnDOCKER fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnDOCKER

line#: 4411...	${SUDO} docker run --rm -it hello-world 2> /dev/null
line#: 4411...	sed 's///'
line#: 4412...	echo
line#: 4370...	echo
leave: fnDOCKER -> back to fnGROUP_OTHER

line#: 5375...	fnNSPAWN
line#: 4422...	fnNSPAWN
line#: 4423...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnNSPAWN fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4425...	local NSPAWNPKG=""
line#: 4426...	local NSPAWN=""
line#: 4429...	[[ -n "$(pgrep systemd-nspawn)" ]]
line#: 4429...	pgrep systemd-nspawn
line#: 4431...	fnBANNER "SYSTEMD-NSPAWN (***)"
line#: 211...	fnBANNER "SYSTEMD-NSPAWN (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNSPAWN fnGROUP_OTHER fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNSPAWN

line#: 4432...	echo "NSPAWN-RELATED PACKAGES INSTALLED:"
line#: 4433...	echo
line#: 4434...	dpkg -l
line#: 4434...	grep -i nspawn
line#: 4434...	awk '{ print $2 }'
line#: 4434...	read -r NSPAWNPKG
line#: 4436...	apt show "${NSPAWNPKG}" 2> /dev/null
line#: 4437...	echo "-------------------------------"
line#: 4438...	echo
line#: 4434...	read -r NSPAWNPKG
line#: 4436...	apt show "${NSPAWNPKG}" 2> /dev/null
line#: 4437...	echo "-------------------------------"
line#: 4438...	echo
line#: 4434...	read -r NSPAWNPKG
line#: 4436...	apt show "${NSPAWNPKG}" 2> /dev/null
line#: 4437...	echo "-------------------------------"
line#: 4438...	echo
line#: 4434...	read -r NSPAWNPKG
line#: 4440...	echo "CONTAINERS FOUND IN: /var/lib/machines"
line#: 4441...	${SUDO} find /var/lib/machines/ -maxdepth 1 -mindepth 1 -type d -exec basename {} \;
line#: 4442...	echo
line#: 4443...	echo "-------------------------------"
line#: 4444...	${SUDO} systemctl list-machines
line#: 4445...	echo
line#: 4446...	machinectl list
line#: 4447...	echo
line#: 4448...	echo "-------------------------------"
line#: 4449...	type -path ds64-shell > /dev/null 2>&1
line#: 4451...	echo "DS64-SHELL..."
line#: 4452...	ds64-shell --version 2> /dev/null
line#: 4452...	sed 's///'
line#: 4453...	echo
line#: 4454...	echo "-------------------------------"
line#: 4456...	systemctl
line#: 4456...	grep nspawn
line#: 4456...	awk '{ print $1 }'
line#: 4456...	read -r NSPAWN
line#: 4458...	systemctl status "${NSPAWN}"
line#: 4459...	echo
line#: 4460...	echo "-------------------------------"
line#: 4456...	read -r NSPAWN
line#: 4458...	systemctl status "${NSPAWN}"
line#: 4459...	echo
line#: 4460...	echo "-------------------------------"
line#: 4456...	read -r NSPAWN
line#: 4462...	echo
line#: 4422...	echo
leave: fnNSPAWN -> back to fnGROUP_OTHER

line#: 5366...	echo
leave: fnGROUP_OTHER -> back to fnACTIONS

line#: 5488...	fnGROUP_MODS_PKGS
line#: 5383...	fnGROUP_MODS_PKGS
line#: 5384...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5386...	echo ' __ __ _____  __            __  '
line#: 5387...	echo '(_ |_ /   | |/  \|\ |   /| |_   Menu Option 15'
line#: 5388...	echo '__)|__\__ | |\__/| \|    | __)  MODULES AND PACKAGES'
line#: 5389...	echo
line#: 5390...	SECTION="15"
line#: 5391...	fnMODULES
line#: 4210...	fnMODULES
line#: 4211...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMODULES fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4213...	fnBANNER "LOADED MODULES"
line#: 211...	fnBANNER "LOADED MODULES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnMODULES fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnMODULES

line#: 4214...	lsmod
line#: 4214...	head -1
line#: 4215...	lsmod
line#: 4215...	sort
line#: 4215...	grep -v "Used by"
line#: 4216...	echo
line#: 4210...	echo
leave: fnMODULES -> back to fnGROUP_MODS_PKGS

line#: 5398...	fnSHOW_REPOS
line#: 4243...	fnSHOW_REPOS
line#: 4244...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSHOW_REPOS fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4246...	local REPO=""
line#: 4248...	fnBANNER "CONFIGURED REPOSITORIES"
line#: 211...	fnBANNER "CONFIGURED REPOSITORIES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSHOW_REPOS fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSHOW_REPOS

line#: 4249...	echo "The following binary repositories are configured..."
line#: 4250...	grep --recursive --include '*.list' '^deb ' /etc/apt/sources.list /etc/apt/sources.list.d/ 2> /dev/null
line#: 4250...	read -r REPO
line#: 4252...	echo "  ${REPO}"
line#: 4250...	read -r REPO
line#: 4252...	echo "  ${REPO}"
line#: 4250...	read -r REPO
line#: 4252...	echo "  ${REPO}"
line#: 4250...	read -r REPO
line#: 4252...	echo "  ${REPO}"
line#: 4250...	read -r REPO
line#: 4252...	echo "  ${REPO}"
line#: 4250...	read -r REPO
line#: 4252...	echo "  ${REPO}"
line#: 4250...	read -r REPO
line#: 4254...	echo
line#: 4255...	echo "The following source repositories are configured..."
line#: 4256...	grep --recursive --include '*.list' '^deb-src ' /etc/apt/sources.list /etc/apt/sources.list.d/ 2> /dev/null
line#: 4256...	read -r REPO
line#: 4258...	echo "  ${REPO}"
line#: 4256...	read -r REPO
line#: 4258...	echo "  ${REPO}"
line#: 4256...	read -r REPO
line#: 4258...	echo "  ${REPO}"
line#: 4256...	read -r REPO
line#: 4260...	echo
line#: 4243...	echo
leave: fnSHOW_REPOS -> back to fnGROUP_MODS_PKGS

line#: 5399...	fnUPGRADABLES
line#: 4268...	fnUPGRADABLES
line#: 4269...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnUPGRADABLES fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4271...	fnBANNER "CHECKING REPOSITORIES"
line#: 211...	fnBANNER "CHECKING REPOSITORIES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnUPGRADABLES fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnUPGRADABLES

line#: 4273...	ping www.yahoo.com -c 3 > /dev/null 2>&1
line#: 4275...	echo "This script will *NOT* upgrade any of your packages."
line#: 4276...	echo "It will only see if package upgrades are available."
line#: 4277...	echo "Any package updates listed here are your responsibility"
line#: 4278...	echo "to upgrade.  This script makes no changes to your system."
line#: 4279...	echo
line#: 4280...	echo "Fetching available package lists from the repositories..."
line#: 4281...	${SUDO} apt update 2> /dev/null
line#: 4282...	echo
line#: 4283...	echo "Any available upgrades will appear here..."
line#: 4284...	${SUDO} apt list --upgradable 2> /dev/null
line#: 4285...	echo
line#: 4268...	echo
leave: fnUPGRADABLES -> back to fnGROUP_MODS_PKGS

line#: 5400...	fnDEPENDENCY_CHECK
line#: 4297...	fnDEPENDENCY_CHECK
line#: 4298...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnDEPENDENCY_CHECK fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4300...	fnBANNER "CHECK FOR BROKEN DEPENDENCIES"
line#: 211...	fnBANNER "CHECK FOR BROKEN DEPENDENCIES"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnDEPENDENCY_CHECK fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnDEPENDENCY_CHECK

line#: 4301...	${SUDO} apt-get check
line#: 4302...	echo
line#: 4297...	echo
leave: fnDEPENDENCY_CHECK -> back to fnGROUP_MODS_PKGS

line#: 5401...	fnON_HOLD
line#: 4310...	fnON_HOLD
line#: 4311...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnON_HOLD fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4324...	fnBANNER "PACKAGES ON HOLD TO DISALLOW UPGRADE"
line#: 211...	fnBANNER "PACKAGES ON HOLD TO DISALLOW UPGRADE"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnON_HOLD fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnON_HOLD

line#: 4325...	[[ "$(${SUDO} dpkg --get-selections | grep "hold$")" = "" ]]
line#: 4325...	${SUDO} dpkg --get-selections
line#: 4325...	grep "hold$"
line#: 4327...	echo "No packages placed on hold"
line#: 4328...	echo
line#: 4310...	echo
leave: fnON_HOLD -> back to fnGROUP_MODS_PKGS

line#: 5402...	fnPACKAGES
line#: 4339...	fnPACKAGES
line#: 4340...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnPACKAGES fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4342...	fnBANNER "INSTALLED PACKAGE LIST"
line#: 211...	fnBANNER "INSTALLED PACKAGE LIST"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnPACKAGES fnGROUP_MODS_PKGS fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnPACKAGES

line#: 4343...	dpkg -l 2> /dev/null
line#: 4343...	tee /dev/null
line#: 4344...	echo
line#: 4339...	echo
leave: fnPACKAGES -> back to fnGROUP_MODS_PKGS

line#: 5383...	echo
leave: fnGROUP_MODS_PKGS -> back to fnACTIONS

line#: 5489...	fnGROUP_SECURITY
line#: 5416...	fnGROUP_SECURITY
line#: 5417...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5419...	echo ' __ __ _____  __            __  '
line#: 5420...	echo '(_ |_ /   | |/  \|\ |   /| /__  Menu Option 16'
line#: 5421...	echo '__)|__\__ | |\__/| \|    | \__) SYSTEM SECURITY'
line#: 5422...	echo
line#: 5423...	SECTION="16"
line#: 5424...	fnUSERCHECK
line#: 4471...	fnUSERCHECK
line#: 4472...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4474...	local PW_REC=""
line#: 4475...	local PW_USR=""
line#: 4476...	local PW_NUM=""
line#: 4477...	local PW_GRP=""
line#: 4478...	local GRP_GRP=""
line#: 4479...	local HOMEDIR=""
line#: 4480...	local GRP_REC=""
line#: 4482...	fnBANNER "REGULAR (NON-SYSTEM) USER ACCOUNTS"
line#: 211...	fnBANNER "REGULAR (NON-SYSTEM) USER ACCOUNTS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnUSERCHECK

line#: 4483...	sort -u -n -t: -k 3.1 /etc/passwd
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4489...	[[ "${PW_USR}" != "nobody" ]]
line#: 4491...	echo "--------------------"
line#: 4492...	echo -n "USER NAME ................... "
line#: 4493...	echo "${PW_USR}"
line#: 4495...	echo -n "NUMERIC UID ................. "
line#: 4496...	echo "${PW_REC}"
line#: 4496...	cut -f3 -d":"
line#: 4498...	echo -n "USER'S PRIMARY GROUP ........ "
line#: 4499...	grep ":${PW_GRP}:" /etc/group
line#: 4499...	cut -f1 -d":"
line#: 4501...	echo -n "HOME DIRECTORY .............. "
line#: 4502...	HOMEDIR=$(grep "^${PW_USR}:" /etc/passwd | cut -f6 -d":")
line#: 4502...	grep "^${PW_USR}:" /etc/passwd
line#: 4502...	cut -f6 -d":"
line#: 4503...	[[ -d "${HOMEDIR}" ]]
line#: 4505...	fnMOG 700 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}"
line#: 240...	fnMOG 700 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4511...	echo -n "THE USER'S SHELL ............ "
line#: 4512...	grep "^${PW_USR}:" /etc/passwd
line#: 4512...	cut -f7 -d":"
line#: 4514...	echo -n "MEMBER OF GROUPS ............ "
line#: 4515...	[[ "$(grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group | cut -f1 -d":" | head -1)" != "" ]]
line#: 4515...	grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group
line#: 4515...	cut -f1 -d":"
line#: 4515...	head -1
line#: 4517...	grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group
line#: 4517...	cut -f1 -d":"
line#: 4517...	sort
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4521...	echo
line#: 4526...	echo -n "PASSWORD STATUS ............. "
line#: 4527...	case "$(${SUDO} passwd --status "${PW_USR}" | awk '{ print $2 }')" in 
line#: 4527...	${SUDO} passwd --status "${PW_USR}"
line#: 4527...	awk '{ print $2 }'
line#: 4535...	echo "VALID - OK"
line#: 4542...	echo -n "PASSWORD LAST CHANGED ....... "
line#: 4543...	${SUDO} chage -l "${PW_USR}"
line#: 4543...	cut -f2 -d":"
line#: 4543...	sed 's/^ //'
line#: 4543...	head -1
line#: 4544...	echo -n "PASSWORD EXPIRES ............ "
line#: 4545...	${SUDO} chage -l "${PW_USR}"
line#: 4545...	cut -f2 -d":"
line#: 4545...	sed 's/^ //'
line#: 4545...	head -2
line#: 4545...	tail -1
line#: 4546...	echo -n "PASSWORD INACTIVE ........... "
line#: 4547...	${SUDO} chage -l "${PW_USR}"
line#: 4547...	cut -f2 -d":"
line#: 4547...	sed 's/^ //'
line#: 4547...	head -3
line#: 4547...	tail -1
line#: 4548...	echo -n "ACCOUNT EXPIRES ............. "
line#: 4549...	${SUDO} chage -l "${PW_USR}"
line#: 4549...	cut -f2 -d":"
line#: 4549...	sed 's/^ //'
line#: 4549...	head -4
line#: 4549...	tail -1
line#: 4550...	echo -n "MIN PASSWORD LIFE (DAYS) .... "
line#: 4551...	${SUDO} chage -l "${PW_USR}"
line#: 4551...	cut -f2 -d":"
line#: 4551...	sed 's/^ //'
line#: 4551...	head -5
line#: 4551...	tail -1
line#: 4552...	echo -n "MAX PASSWORD LIFE (DAYS) .... "
line#: 4553...	${SUDO} chage -l "${PW_USR}"
line#: 4553...	cut -f2 -d":"
line#: 4553...	sed 's/^ //'
line#: 4553...	head -6
line#: 4553...	tail -1
line#: 4554...	echo -n "WARN BEFORE CHANGE (DAYS) ... "
line#: 4555...	${SUDO} chage -l "${PW_USR}"
line#: 4555...	cut -f2 -d":"
line#: 4555...	sed 's/^ //'
line#: 4555...	head -7
line#: 4555...	tail -1
line#: 4557...	[[ -d "${HOMEDIR}/.ssh" ]]
line#: 4559...	echo "USER'S .ssh SETUP:"
line#: 4560...	fnMOG 700 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh"
line#: 240...	fnMOG 700 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4561...	[[ -f "${HOMEDIR}/.ssh/authorized_keys" ]]
line#: 4563...	fnMOG 600 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/authorized_keys"
line#: 240...	fnMOG 600 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/authorized_keys"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4565...	[[ -f "${HOMEDIR}/.ssh/known_hosts" ]]
line#: 4567...	fnMOG 600 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/known_hosts"
line#: 240...	fnMOG 600 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/known_hosts"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4569...	[[ -f "${HOMEDIR}/.ssh/config" ]]
line#: 4573...	[[ -f "${HOMEDIR}/.ssh/id_dsa" ]]
line#: 4575...	fnMOG 600 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/id_dsa"
line#: 240...	fnMOG 600 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/id_dsa"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4577...	[[ -f "${HOMEDIR}/.ssh/id_dsa.pub" ]]
line#: 4579...	fnMOG 644 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/id_dsa.pub"
line#: 240...	fnMOG 644 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/id_dsa.pub"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4581...	[[ -f "${HOMEDIR}/.ssh/id_rsa" ]]
line#: 4583...	fnMOG 600 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/id_rsa"
line#: 240...	fnMOG 600 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/id_rsa"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4585...	[[ -f "${HOMEDIR}/.ssh/id_rsa.pub" ]]
line#: 4587...	fnMOG 644 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/id_rsa.pub"
line#: 240...	fnMOG 644 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh/id_rsa.pub"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4590...	echo
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4489...	[[ "${PW_USR}" != "nobody" ]]
line#: 4491...	echo "--------------------"
line#: 4492...	echo -n "USER NAME ................... "
line#: 4493...	echo "${PW_USR}"
line#: 4495...	echo -n "NUMERIC UID ................. "
line#: 4496...	echo "${PW_REC}"
line#: 4496...	cut -f3 -d":"
line#: 4498...	echo -n "USER'S PRIMARY GROUP ........ "
line#: 4499...	grep ":${PW_GRP}:" /etc/group
line#: 4499...	cut -f1 -d":"
line#: 4501...	echo -n "HOME DIRECTORY .............. "
line#: 4502...	HOMEDIR=$(grep "^${PW_USR}:" /etc/passwd | cut -f6 -d":")
line#: 4502...	grep "^${PW_USR}:" /etc/passwd
line#: 4502...	cut -f6 -d":"
line#: 4503...	[[ -d "${HOMEDIR}" ]]
line#: 4505...	fnMOG 700 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}"
line#: 240...	fnMOG 700 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 268...	echo "  Permissions ... WARN [${COCTAL}] (${SYMBOLIC}) - Recommend [${OCTAL}])"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4511...	echo -n "THE USER'S SHELL ............ "
line#: 4512...	grep "^${PW_USR}:" /etc/passwd
line#: 4512...	cut -f7 -d":"
line#: 4514...	echo -n "MEMBER OF GROUPS ............ "
line#: 4515...	[[ "$(grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group | cut -f1 -d":" | head -1)" != "" ]]
line#: 4515...	grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group
line#: 4515...	cut -f1 -d":"
line#: 4515...	head -1
line#: 4517...	grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group
line#: 4517...	cut -f1 -d":"
line#: 4517...	sort
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4521...	echo
line#: 4526...	echo -n "PASSWORD STATUS ............. "
line#: 4527...	case "$(${SUDO} passwd --status "${PW_USR}" | awk '{ print $2 }')" in 
line#: 4527...	${SUDO} passwd --status "${PW_USR}"
line#: 4527...	awk '{ print $2 }'
line#: 4535...	echo "VALID - OK"
line#: 4542...	echo -n "PASSWORD LAST CHANGED ....... "
line#: 4543...	${SUDO} chage -l "${PW_USR}"
line#: 4543...	cut -f2 -d":"
line#: 4543...	sed 's/^ //'
line#: 4543...	head -1
line#: 4544...	echo -n "PASSWORD EXPIRES ............ "
line#: 4545...	${SUDO} chage -l "${PW_USR}"
line#: 4545...	cut -f2 -d":"
line#: 4545...	sed 's/^ //'
line#: 4545...	head -2
line#: 4545...	tail -1
line#: 4546...	echo -n "PASSWORD INACTIVE ........... "
line#: 4547...	${SUDO} chage -l "${PW_USR}"
line#: 4547...	cut -f2 -d":"
line#: 4547...	sed 's/^ //'
line#: 4547...	head -3
line#: 4547...	tail -1
line#: 4548...	echo -n "ACCOUNT EXPIRES ............. "
line#: 4549...	${SUDO} chage -l "${PW_USR}"
line#: 4549...	cut -f2 -d":"
line#: 4549...	sed 's/^ //'
line#: 4549...	head -4
line#: 4549...	tail -1
line#: 4550...	echo -n "MIN PASSWORD LIFE (DAYS) .... "
line#: 4551...	${SUDO} chage -l "${PW_USR}"
line#: 4551...	cut -f2 -d":"
line#: 4551...	sed 's/^ //'
line#: 4551...	head -5
line#: 4551...	tail -1
line#: 4552...	echo -n "MAX PASSWORD LIFE (DAYS) .... "
line#: 4553...	${SUDO} chage -l "${PW_USR}"
line#: 4553...	cut -f2 -d":"
line#: 4553...	sed 's/^ //'
line#: 4553...	head -6
line#: 4553...	tail -1
line#: 4554...	echo -n "WARN BEFORE CHANGE (DAYS) ... "
line#: 4555...	${SUDO} chage -l "${PW_USR}"
line#: 4555...	cut -f2 -d":"
line#: 4555...	sed 's/^ //'
line#: 4555...	head -7
line#: 4555...	tail -1
line#: 4557...	[[ -d "${HOMEDIR}/.ssh" ]]
line#: 4559...	echo "USER'S .ssh SETUP:"
line#: 4560...	fnMOG 700 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh"
line#: 240...	fnMOG 700 "${PW_USR}" "${GRP_GRP}" "${HOMEDIR}/.ssh"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnUSERCHECK fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 268...	echo "  Permissions ... WARN [${COCTAL}] (${SYMBOLIC}) - Recommend [${OCTAL}])"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 274...	echo "  Owner ......... WARN [${COWNER}] - Recommend [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 280...	echo "  Group ......... WARN [${CGROUP}] - Recommend [${GROUP}]"
line#: 240...	echo "  Group ......... WARN [${CGROUP}] - Recommend [${GROUP}]"
leave: fnMOG -> back to fnUSERCHECK

line#: 4561...	[[ -f "${HOMEDIR}/.ssh/authorized_keys" ]]
line#: 4565...	[[ -f "${HOMEDIR}/.ssh/known_hosts" ]]
line#: 4569...	[[ -f "${HOMEDIR}/.ssh/config" ]]
line#: 4573...	[[ -f "${HOMEDIR}/.ssh/id_dsa" ]]
line#: 4577...	[[ -f "${HOMEDIR}/.ssh/id_dsa.pub" ]]
line#: 4581...	[[ -f "${HOMEDIR}/.ssh/id_rsa" ]]
line#: 4585...	[[ -f "${HOMEDIR}/.ssh/id_rsa.pub" ]]
line#: 4590...	echo
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4489...	[[ "${PW_USR}" != "nobody" ]]
line#: 4491...	echo "--------------------"
line#: 4492...	echo -n "USER NAME ................... "
line#: 4493...	echo "${PW_USR}"
line#: 4495...	echo -n "NUMERIC UID ................. "
line#: 4496...	echo "${PW_REC}"
line#: 4496...	cut -f3 -d":"
line#: 4498...	echo -n "USER'S PRIMARY GROUP ........ "
line#: 4499...	grep ":${PW_GRP}:" /etc/group
line#: 4499...	cut -f1 -d":"
line#: 4501...	echo -n "HOME DIRECTORY .............. "
line#: 4502...	HOMEDIR=$(grep "^${PW_USR}:" /etc/passwd | cut -f6 -d":")
line#: 4502...	grep "^${PW_USR}:" /etc/passwd
line#: 4502...	cut -f6 -d":"
line#: 4503...	[[ -d "${HOMEDIR}" ]]
line#: 4507...	echo -n "${HOMEDIR}"
line#: 4508...	echo " <-- *** WARNING: SPECIFIED DIRECTORY DOES NOT EXIST ***"
line#: 4511...	echo -n "THE USER'S SHELL ............ "
line#: 4512...	grep "^${PW_USR}:" /etc/passwd
line#: 4512...	cut -f7 -d":"
line#: 4514...	echo -n "MEMBER OF GROUPS ............ "
line#: 4515...	[[ "$(grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group | cut -f1 -d":" | head -1)" != "" ]]
line#: 4515...	grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group
line#: 4515...	cut -f1 -d":"
line#: 4515...	head -1
line#: 4517...	grep -E "^${PW_USR}:|:${PW_USR}$|:${PW_USR},|,{PW_USR},|,${PW_USR}$" /etc/group
line#: 4517...	cut -f1 -d":"
line#: 4517...	sort
line#: 4517...	read -r GRP_REC
line#: 4519...	echo -n "${GRP_REC} "
line#: 4517...	read -r GRP_REC
line#: 4521...	echo
line#: 4526...	echo -n "PASSWORD STATUS ............. "
line#: 4527...	case "$(${SUDO} passwd --status "${PW_USR}" | awk '{ print $2 }')" in 
line#: 4527...	${SUDO} passwd --status "${PW_USR}"
line#: 4527...	awk '{ print $2 }'
line#: 4532...	echo "<-- *** ADMINISTRATIVELY LOCKED ***"
line#: 4542...	echo -n "PASSWORD LAST CHANGED ....... "
line#: 4543...	${SUDO} chage -l "${PW_USR}"
line#: 4543...	cut -f2 -d":"
line#: 4543...	sed 's/^ //'
line#: 4543...	head -1
line#: 4544...	echo -n "PASSWORD EXPIRES ............ "
line#: 4545...	${SUDO} chage -l "${PW_USR}"
line#: 4545...	cut -f2 -d":"
line#: 4545...	sed 's/^ //'
line#: 4545...	head -2
line#: 4545...	tail -1
line#: 4546...	echo -n "PASSWORD INACTIVE ........... "
line#: 4547...	${SUDO} chage -l "${PW_USR}"
line#: 4547...	cut -f2 -d":"
line#: 4547...	sed 's/^ //'
line#: 4547...	head -3
line#: 4547...	tail -1
line#: 4548...	echo -n "ACCOUNT EXPIRES ............. "
line#: 4549...	${SUDO} chage -l "${PW_USR}"
line#: 4549...	cut -f2 -d":"
line#: 4549...	sed 's/^ //'
line#: 4549...	head -4
line#: 4549...	tail -1
line#: 4550...	echo -n "MIN PASSWORD LIFE (DAYS) .... "
line#: 4551...	${SUDO} chage -l "${PW_USR}"
line#: 4551...	cut -f2 -d":"
line#: 4551...	sed 's/^ //'
line#: 4551...	head -5
line#: 4551...	tail -1
line#: 4552...	echo -n "MAX PASSWORD LIFE (DAYS) .... "
line#: 4553...	${SUDO} chage -l "${PW_USR}"
line#: 4553...	cut -f2 -d":"
line#: 4553...	sed 's/^ //'
line#: 4553...	head -6
line#: 4553...	tail -1
line#: 4554...	echo -n "WARN BEFORE CHANGE (DAYS) ... "
line#: 4555...	${SUDO} chage -l "${PW_USR}"
line#: 4555...	cut -f2 -d":"
line#: 4555...	sed 's/^ //'
line#: 4555...	head -7
line#: 4555...	tail -1
line#: 4557...	[[ -d "${HOMEDIR}/.ssh" ]]
line#: 4590...	echo
line#: 4483...	read -r PW_REC
line#: 4485...	PW_USR="$(echo "${PW_REC}" | cut -f1 -d":")"
line#: 4485...	echo "${PW_REC}"
line#: 4485...	cut -f1 -d":"
line#: 4486...	PW_NUM="$(echo "${PW_REC}" | cut -f3 -d":")"
line#: 4486...	echo "${PW_REC}"
line#: 4486...	cut -f3 -d":"
line#: 4487...	PW_GRP="$(echo "${PW_REC}" | cut -f4 -d":")"
line#: 4487...	echo "${PW_REC}"
line#: 4487...	cut -f4 -d":"
line#: 4488...	GRP_GRP="$(grep ":${PW_GRP}:" /etc/group | cut -f1 -d":")"
line#: 4488...	grep ":${PW_GRP}:" /etc/group
line#: 4488...	cut -f1 -d":"
line#: 4489...	[[ "${PW_NUM}" -ge 1000 ]]
line#: 4489...	[[ "${PW_USR}" != "nobody" ]]
line#: 4483...	read -r PW_REC
line#: 4471...	sort -u -n -t: -k 3.1 /etc/passwd
leave: fnUSERCHECK -> back to fnGROUP_SECURITY

line#: 5425...	fnLOGIN_DEFS
line#: 4600...	fnLOGIN_DEFS
line#: 4601...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLOGIN_DEFS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4603...	fnBANNER "SYSTEM LOGIN DEFAULTS"
line#: 211...	fnBANNER "SYSTEM LOGIN DEFAULTS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLOGIN_DEFS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLOGIN_DEFS

line#: 4604...	grep -E -v "^$|^#" /etc/login.defs
line#: 4605...	echo
line#: 4600...	echo
leave: fnLOGIN_DEFS -> back to fnGROUP_SECURITY

line#: 5426...	fnLAST_LOGINS
line#: 4613...	fnLAST_LOGINS
line#: 4614...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLAST_LOGINS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4616...	fnBANNER "LAST LOGINS"
line#: 211...	fnBANNER "LAST LOGINS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLAST_LOGINS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLAST_LOGINS

line#: 4617...	last
line#: 4618...	echo
line#: 4619...	lastlog
line#: 4620...	echo
line#: 4621...	fnSUB_BANNER "LOGIN FAILURES"
line#: 224...	fnSUB_BANNER "LOGIN FAILURES"
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnLAST_LOGINS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnLAST_LOGINS

line#: 4622...	${SUDO} lastb
line#: 4623...	echo
line#: 4613...	echo
leave: fnLAST_LOGINS -> back to fnGROUP_SECURITY

line#: 5427...	fnW
line#: 4631...	fnW
line#: 4632...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnW fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4634...	fnBANNER "CURRENTLY LOGGED ON"
line#: 211...	fnBANNER "CURRENTLY LOGGED ON"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnW fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnW

line#: 4635...	w
line#: 4636...	echo
line#: 4631...	echo
leave: fnW -> back to fnGROUP_SECURITY

line#: 5428...	fnSUDOERS
line#: 4644...	fnSUDOERS
line#: 4645...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUDOERS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4647...	fnBANNER "SUDOERS SYNTAX CHECK"
line#: 211...	fnBANNER "SUDOERS SYNTAX CHECK"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSUDOERS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSUDOERS

line#: 4648...	${SUDO} visudo --check --strict
line#: 4649...	echo
line#: 4644...	echo
leave: fnSUDOERS -> back to fnGROUP_SECURITY

line#: 5429...	fnCHECK_PERMISSIONS
line#: 4657...	fnCHECK_PERMISSIONS
line#: 4658...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4660...	local DIR=""
line#: 4662...	fnBANNER "CHECKING BASIC CRITICAL DIRECTORY PERMISSIONS"
line#: 211...	fnBANNER "CHECKING BASIC CRITICAL DIRECTORY PERMISSIONS"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4664...	for DIR in / /bin /boot /dev /etc /home /lib /media /mnt /opt /run /sbin /srv /usr /var
line#: 4666...	fnMOG 755 root root "${DIR}"
line#: 240...	fnMOG 755 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4669...	for DIR in /proc /sys
line#: 4671...	fnMOG 555 root root "${DIR}"
line#: 240...	fnMOG 555 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4669...	for DIR in /proc /sys
line#: 4671...	fnMOG 555 root root "${DIR}"
line#: 240...	fnMOG 555 root root "${DIR}"
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4674...	fnMOG 700 root root /root
line#: 240...	fnMOG 700 root root /root
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4675...	fnMOG 1777 root root /tmp
line#: 240...	fnMOG 1777 root root /tmp
line#: 241...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnMOG fnCHECK_PERMISSIONS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 243...	local OCTAL=""
line#: 244...	local OWNER=""
line#: 245...	local GROUP=""
line#: 246...	local CHECKPATH=""
line#: 247...	local COCTAL=""
line#: 248...	local SYMBOLIC=""
line#: 249...	local COWNER=""
line#: 250...	local CGROUP=""
line#: 252...	OCTAL="${1}"
line#: 253...	OWNER="${2}"
line#: 254...	GROUP="${3}"
line#: 255...	CHECKPATH="${4}"
line#: 257...	[[ -e "${CHECKPATH}" ]]
line#: 260...	COCTAL="$(${SUDO} stat -L -c %a "${CHECKPATH}")"
line#: 260...	${SUDO} stat -L -c %a "${CHECKPATH}"
line#: 261...	SYMBOLIC="$(${SUDO} stat -L -c %A "${CHECKPATH}")"
line#: 261...	${SUDO} stat -L -c %A "${CHECKPATH}"
line#: 262...	COWNER="$(${SUDO} stat -L -c %U "${CHECKPATH}")"
line#: 262...	${SUDO} stat -L -c %U "${CHECKPATH}"
line#: 263...	CGROUP="$(${SUDO} stat -L -c %G "${CHECKPATH}")"
line#: 263...	${SUDO} stat -L -c %G "${CHECKPATH}"
line#: 265...	echo "[${CHECKPATH}]"
line#: 266...	[[ "${COCTAL}" != "${OCTAL}" ]]
line#: 270...	echo "  Permissions ... OK [${OCTAL}] (${SYMBOLIC})"
line#: 272...	[[ "${COWNER}" != "${OWNER}" ]]
line#: 276...	echo "  Owner ......... OK [${OWNER}]"
line#: 278...	[[ "${CGROUP}" != "${GROUP}" ]]
line#: 282...	echo "  Group ......... OK [${GROUP}]"
line#: 240...	echo "  Group ......... OK [${GROUP}]"
leave: fnMOG -> back to fnCHECK_PERMISSIONS

line#: 4676...	echo
line#: 4657...	echo
leave: fnCHECK_PERMISSIONS -> back to fnGROUP_SECURITY

line#: 5430...	fnCHKROOTKIT
line#: 4684...	fnCHKROOTKIT
line#: 4685...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCHKROOTKIT fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4688...	type -path chkrootkit > /dev/null 2>&1
line#: 4690...	fnBANNER "CHECKING FOR ROOTKITS - CHKROOTKIT (***)"
line#: 211...	fnBANNER "CHECKING FOR ROOTKITS - CHKROOTKIT (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCHKROOTKIT fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCHKROOTKIT

line#: 4691...	${SUDO} chkrootkit -e -n 2> /dev/null
line#: 4692...	echo
line#: 4684...	echo
leave: fnCHKROOTKIT -> back to fnGROUP_SECURITY

line#: 5431...	fnRKHUNTER
line#: 4932...	fnRKHUNTER
line#: 4933...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnRKHUNTER fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4936...	type -path rkhunter > /dev/null 2>&1
line#: 4938...	fnBANNER "CHECKING FOR ROOTKITS - RKHUNTER (***)"
line#: 211...	fnBANNER "CHECKING FOR ROOTKITS - RKHUNTER (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnRKHUNTER fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnRKHUNTER

line#: 4939...	${SUDO} rkhunter --versioncheck --nocolors
line#: 4940...	echo
line#: 4941...	echo " ----------------------------------------------------"
line#: 4942...	${SUDO} rkhunter --update --nocolors
line#: 4943...	echo
line#: 4944...	echo " ----------------------------------------------------"
line#: 4945...	${SUDO} rkhunter --config-check
line#: 4947...	${SUDO} rkhunter -c --enable all --rwo --sk --nocolors
line#: 4947...	:
line#: 4949...	echo
line#: 4932...	echo
leave: fnRKHUNTER -> back to fnGROUP_SECURITY

line#: 5432...	fnCLAM
line#: 4701...	fnCLAM
line#: 4702...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnCLAM fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4704...	local CLAM_SVC=""
line#: 4707...	type -path clamscan > /dev/null 2>&1
line#: 4709...	fnBANNER "CLAMAV ANTI-VIRUS SCANNER (***)"
line#: 211...	fnBANNER "CLAMAV ANTI-VIRUS SCANNER (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnCLAM fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnCLAM

line#: 4710...	type -path clamscan > /dev/null 2>&1
line#: 4712...	echo "CLAMSCAN.... $(clamscan --version 2>/dev/null)"
line#: 4712...	clamscan --version 2> /dev/null
line#: 4717...	type -path freshclam > /dev/null 2>&1
line#: 4719...	echo "FRESHCLAM... $(freshclam --version 2>/dev/null)"
line#: 4719...	freshclam --version 2> /dev/null
line#: 4724...	type -path clamd > /dev/null 2>&1
line#: 4726...	echo "CLAMD....... $(clamd --version 2>/dev/null)"
line#: 4726...	clamd --version 2> /dev/null
line#: 4731...	type -path clamdscan > /dev/null 2>&1
line#: 4733...	echo "CLAMDSCAN... $(clamdscan --version 2>/dev/null)"
line#: 4733...	clamdscan --version 2> /dev/null
line#: 4738...	echo
line#: 4740...	type -path clamconf > /dev/null 2>&1
line#: 4742...	echo " ----------------------------------------------------"
line#: 4743...	clamconf -n 2> /dev/null
line#: 4744...	echo
line#: 4747...	[[ "$(systemctl | grep clamav)" != "" ]]
line#: 4747...	systemctl
line#: 4747...	grep clamav
line#: 4749...	systemctl
line#: 4749...	grep clamav
line#: 4749...	awk '{ print $1 }'
line#: 4749...	read -r CLAM_SVC
line#: 4751...	echo " ----------------------------------------------------"
line#: 4752...	systemctl status "${CLAM_SVC}"
line#: 4753...	echo
line#: 4749...	read -r CLAM_SVC
line#: 4751...	echo " ----------------------------------------------------"
line#: 4752...	systemctl status "${CLAM_SVC}"
line#: 4753...	echo
line#: 4749...	read -r CLAM_SVC
line#: 4701...	awk '{ print $1 }'
leave: fnCLAM -> back to fnGROUP_SECURITY

line#: 5433...	fnTRIPWIRE
line#: 4768...	fnTRIPWIRE
line#: 4769...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnTRIPWIRE fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4772...	type -path tripwire > /dev/null 2>&1
line#: 4774...	fnBANNER "TRIPWIRE (***)"
line#: 211...	fnBANNER "TRIPWIRE (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnTRIPWIRE fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnTRIPWIRE

line#: 4775...	tripwire
line#: 4775...	:
line#: 4776...	echo
line#: 4777...	echo " ----------------------------------------------------"
line#: 4779...	[[ -f /etc/tripwire/tw.cfg ]]
line#: 4781...	echo -e " Default Config File ...... /etc/tripwire/tw.cfg"
line#: 4784...	[[ -f /etc/tripwire/tw.pol ]]
line#: 4786...	echo -e " Default Policy File ...... /etc/tripwire/tw.pol"
line#: 4789...	[[ -f /var/lib/tripwire/"${HOSTNAME}".twd ]]
line#: 4791...	echo -e " Default Database File .... /var/lib/tripwire/${HOSTNAME}.twd"
line#: 4794...	[[ -f /etc/tripwire/site.key ]]
line#: 4796...	echo -e " Default Site Key ......... /etc/tripwire/site.key"
line#: 4799...	[[ -f /etc/tripwire/"${HOSTNAME}"-local.key ]]
line#: 4801...	echo -e " Default Local Key ........ /etc/tripwire/${HOSTNAME}-local.key"
line#: 4804...	[[ -d /var/lib/tripwire/report ]]
line#: 4806...	echo -e " Default Report Directory . /var/lib/tripwire/report"
line#: 4809...	echo " ----------------------------------------------------"
line#: 4810...	echo
line#: 4811...	[[ -f /var/lib/tripwire/"${HOSTNAME}".twd ]]
line#: 4813...	${SUDO} tripwire --check
line#: 4813...	:
line#: 4815...	echo
line#: 4768...	echo
leave: fnTRIPWIRE -> back to fnGROUP_SECURITY

line#: 5434...	fnNMAP
line#: 4824...	fnNMAP
line#: 4825...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnNMAP fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4827...	local MY_IP=""
line#: 4833...	type -path nmap > /dev/null 2>&1
line#: 4836...	ifconfig
line#: 4836...	grep "inet "
line#: 4836...	awk '{ print $2 }'
line#: 4836...	sort -u -n -t. -k 1,1 -k 2,2 -k 3,3 -k 4,4
line#: 4836...	read -r MY_IP
line#: 4838...	fnBANNER "SCANNING FOR SERVICES ON IPV4: ${MY_IP} (***)"
line#: 211...	fnBANNER "SCANNING FOR SERVICES ON IPV4: ${MY_IP} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNMAP fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNMAP

line#: 4839...	nmap -Pn -sV -T4 -p 1-65535 --version-light "${MY_IP}"
line#: 4839...	grep -E "^PORT|^[1-9][0-9]"
line#: 4840...	echo
line#: 4836...	read -r MY_IP
line#: 4838...	fnBANNER "SCANNING FOR SERVICES ON IPV4: ${MY_IP} (***)"
line#: 211...	fnBANNER "SCANNING FOR SERVICES ON IPV4: ${MY_IP} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNMAP fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNMAP

line#: 4839...	nmap -Pn -sV -T4 -p 1-65535 --version-light "${MY_IP}"
line#: 4839...	grep -E "^PORT|^[1-9][0-9]"
line#: 4840...	echo
line#: 4836...	read -r MY_IP
line#: 4838...	fnBANNER "SCANNING FOR SERVICES ON IPV4: ${MY_IP} (***)"
line#: 211...	fnBANNER "SCANNING FOR SERVICES ON IPV4: ${MY_IP} (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnNMAP fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnNMAP

line#: 4839...	nmap -Pn -sV -T4 -p 1-65535 --version-light "${MY_IP}"
line#: 4839...	grep -E "^PORT|^[1-9][0-9]"
line#: 4840...	echo
line#: 4836...	read -r MY_IP
line#: 4843...	ifconfig
line#: 4843...	grep "inet6 "
line#: 4843...	grep -v "inet6 ....::"
line#: 4843...	awk '{ print $2 }'
line#: 4843...	sort
line#: 4843...	read -r MY_IP
line#: 4824...	sort
leave: fnNMAP -> back to fnGROUP_SECURITY

line#: 5435...	fnUFW
line#: 4909...	fnUFW
line#: 4910...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnUFW fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4913...	type -path ufw > /dev/null 2>&1
line#: 4915...	fnBANNER "UFW (***)"
line#: 211...	fnBANNER "UFW (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnUFW fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnUFW

line#: 4916...	${SUDO} ufw version
line#: 4917...	echo
line#: 4918...	echo " ----------------------------------------------------"
line#: 4919...	${SUDO} ufw status verbose
line#: 4920...	echo
line#: 4921...	echo " ----------------------------------------------------"
line#: 4922...	systemctl status ufw.service
line#: 4923...	echo
line#: 4909...	echo
leave: fnUFW -> back to fnGROUP_SECURITY

line#: 5436...	fnSNORT
line#: 4858...	fnSNORT
line#: 4859...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSNORT fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4862...	type -path snort > /dev/null 2>&1
line#: 4864...	fnBANNER "SNORT IDS (***)"
line#: 211...	fnBANNER "SNORT IDS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnSNORT fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnSNORT

line#: 4865...	snort -V 2>&1
line#: 4866...	echo
line#: 4867...	[[ -f /etc/snort/snort.conf ]]
line#: 4869...	fnSUB_BANNER "SNORT CONFIGURATION TEST..."
line#: 224...	fnSUB_BANNER "SNORT CONFIGURATION TEST..."
line#: 225...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnSUB_BANNER fnSNORT fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 227...	echo "-------------------------------------------------------"
line#: 228...	echo " ${*}"
line#: 229...	echo
line#: 224...	echo
leave: fnSUB_BANNER -> back to fnSNORT

line#: 4870...	${SUDO} snort -T -c /etc/snort/snort.conf 2>&1
line#: 4871...	echo
line#: 4873...	echo " ----------------------------------------------------"
line#: 4874...	systemctl status snort.service
line#: 4875...	echo
line#: 4858...	echo
leave: fnSNORT -> back to fnGROUP_SECURITY

line#: 5437...	fnLYNIS
line#: 4884...	fnLYNIS
line#: 4885...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnLYNIS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4888...	type -path lynis > /dev/null 2>&1
line#: 4890...	fnBANNER "LYNIS (***)"
line#: 211...	fnBANNER "LYNIS (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnLYNIS fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnLYNIS

line#: 4891...	${SUDO} lynis update info --cronjob 2> /dev/null
line#: 4892...	echo " ----------------------------------------------------"
line#: 4893...	${SUDO} lynis update check --cronjob 2> /dev/null
line#: 4894...	echo
line#: 4895...	echo " ----------------------------------------------------"
line#: 4896...	${SUDO} lynis show profiles --cronjob 2> /dev/null
line#: 4897...	echo
line#: 4898...	echo " ----------------------------------------------------"
line#: 4899...	${SUDO} lynis audit system --cronjob 2> /dev/null
line#: 4900...	echo
line#: 4884...	echo
leave: fnLYNIS -> back to fnGROUP_SECURITY

line#: 5438...	fnUNHIDE
line#: 4958...	fnUNHIDE
line#: 4959...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnUNHIDE fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4962...	type -path unhide > /dev/null 2>&1
line#: 4964...	fnBANNER "UNHIDE (***)"
line#: 211...	fnBANNER "UNHIDE (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnUNHIDE fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnUNHIDE

line#: 4965...	${SUDO} unhide sys
line#: 4958...	${SUDO} unhide sys
leave: fnUNHIDE -> back to fnGROUP_SECURITY

line#: 5440...	fnAPPARMOR
line#: 5022...	fnAPPARMOR
line#: 5023...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnAPPARMOR fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 5026...	type -path aa-status > /dev/null 2>&1
line#: 5026...	[[ "${HAS_APPARMOR}" = "yes" ]]
line#: 5026...	[[ "$(grep "apparmor=1" /boot/cmdline.txt)" != "" ]]
line#: 5026...	grep "apparmor=1" /boot/cmdline.txt
line#: 5028...	fnBANNER "APPARMOR (***)"
line#: 211...	fnBANNER "APPARMOR (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnAPPARMOR fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnAPPARMOR

line#: 5029...	echo -n "Apparmor enabled: "
line#: 5030...	aa-enabled
line#: 5031...	echo
line#: 5032...	${SUDO} aa-status
line#: 5033...	echo
line#: 5022...	echo
leave: fnAPPARMOR -> back to fnGROUP_SECURITY

line#: 5441...	fnAUDITD
line#: 4974...	fnAUDITD
line#: 4975...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnAUDITD fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 4978...	type -path auditctl > /dev/null 2>&1
line#: 4978...	[[ "${HAS_AUDITD}" = "yes" ]]
line#: 4980...	fnBANNER "AUDITD (***)"
line#: 211...	fnBANNER "AUDITD (***)"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnAUDITD fnGROUP_SECURITY fnACTIONS fnDO_INSPECTIONS fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnAUDITD

line#: 4981...	${SUDO} auditctl -l
line#: 4982...	echo
line#: 4983...	echo " ----------------------------------------------------"
line#: 4984...	${SUDO} ls -alR /etc/audit
line#: 4985...	echo
line#: 4986...	echo " ----------------------------------------------------"
line#: 4987...	${SUDO} aureport
line#: 4988...	echo
line#: 4989...	echo " ----------------------------------------------------"
line#: 4990...	${SUDO} ls -alR /var/log/audit
line#: 4991...	echo
line#: 4992...	echo " ----------------------------------------------------"
line#: 4993...	systemctl status auditd.service
line#: 4994...	echo
line#: 4974...	echo
leave: fnAUDITD -> back to fnGROUP_SECURITY

line#: 5416...	echo
leave: fnGROUP_SECURITY -> back to fnACTIONS

line#: 5491...	return 0
line#: 5491...	return 0
leave: fnACTIONS -> back to fnDO_INSPECTIONS

line#: 5839...	tee -a "${REPORT}"
leave: fnDO_INSPECTIONS -> back to fnMAIN

line#: 5918...	fnFINISH_UP
line#: 5860...	fnFINISH_UP
line#: 5861...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnFINISH_UP fnMAIN main
line#: 5863...	local ELAPSED=""
line#: 5864...	local RUNTIME=""
line#: 5868...	rm /tmp/.lshw_businfo."${PPID}" 2> /dev/null
line#: 5869...	ELAPSED=${SECONDS}
line#: 5870...	RUNTIME="$((ELAPSED / 60)) minutes and $((ELAPSED % 60)) seconds."
line#: 5871...	fnEND_OF_REPORT
line#: 5871...	tee -a "${REPORT}"
line#: 5448...	fnEND_OF_REPORT
line#: 5449...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnEND_OF_REPORT fnFINISH_UP fnMAIN main
line#: 5451...	echo
line#: 5452...	echo "==============================================================================="
line#: 5453...	echo ' __     __    __  __   __  __ __  __  __ ___ '
line#: 5454...	echo -n '|_ |\ ||  \  /  \|_   |__)|_ |__)/  \|__) |  '
line#: 5455...	echo "SYSTEM_INFO"
line#: 5456...	echo -n '|__| \||__/  \__/|    | \ |__|   \__/| \  |  '
line#: 5457...	echo "VER: ${MY_VERSION}"
line#: 5458...	echo
line#: 5448...	echo
leave: fnEND_OF_REPORT -> back to fnFINISH_UP

line#: 5872...	fnBANNER "TIME REQUIRED TO GENERATE REPORT:  ${RUNTIME}"
line#: 5872...	sed 's/SYSTEM_INFO(): //'
line#: 5872...	tee -a "${REPORT}"
line#: 211...	fnBANNER "TIME REQUIRED TO GENERATE REPORT:  ${RUNTIME}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnFINISH_UP fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnFINISH_UP

line#: 5873...	fnREPORT_ACTIONS
line#: 5873...	sed 's///'
line#: 5567...	fnREPORT_ACTIONS
line#: 5568...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnREPORT_ACTIONS fnFINISH_UP fnMAIN main
line#: 5570...	local CHOICE_MADE=""
line#: 5572...	echo "The following Menu Options were selected, to generate this report:"
line#: 5573...	[[ -n ${CHOICES[16]} ]]
line#: 5575...	echo "  Option 17: Run All Sections - (This option overrides any/all other selections)"
line#: 5873...	tee -a "${REPORT}"
line#: 5576...	echo
line#: 5577...	return 0
line#: 5577...	return 0
leave: fnREPORT_ACTIONS -> back to fnFINISH_UP

line#: 5874...	[[ "${CMDLINE_CHOICE}" = "" ]]
line#: 5881...	fnBANNER "REPORT SAVED AS: ${REPORT}"
line#: 5881...	sed 's/SYSTEM_INFO(): //'
line#: 211...	fnBANNER "REPORT SAVED AS: ${REPORT}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnFINISH_UP fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 5881...	tee -a "${REPORT}"
line#: 211...	echo
leave: fnBANNER -> back to fnFINISH_UP

line#: 5885...	[ "${DEBUG_LOG}" != "/dev/null" ]
line#: 5887...	fnBANNER "DEBUG LOG SAVED AS: ${DEBUG_LOG}"
line#: 5887...	sed 's/SYSTEM_INFO(): //'
line#: 5887...	tee -a "${REPORT}"
line#: 211...	fnBANNER "DEBUG LOG SAVED AS: ${DEBUG_LOG}"
line#: 212...	echo -e "
enter: ${FUNCNAME[*]}" 1>&3

enter: fnBANNER fnFINISH_UP fnMAIN main
line#: 214...	echo "==============================================================================="
line#: 215...	echo "SYSTEM_INFO(${SECTION}): ${*}"
line#: 216...	echo "==============================================================================="
line#: 217...	echo
line#: 211...	echo
leave: fnBANNER -> back to fnFINISH_UP

line#: 5890...	echo "${BELL}"
line#: 5860...	echo "${BELL}"
leave: fnFINISH_UP -> back to fnMAIN

line#: 5898...	echo "${BELL}"
leave: fnMAIN -> back to main

line#: 5982...	exec 3>&- 2> /dev/null
